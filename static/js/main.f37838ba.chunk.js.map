{"version":3,"sources":["utils/withTracker.jsx","components/Header.jsx","components/Banner.jsx","components/Footer.jsx","components/GeneralErrorBoundary.jsx","pages/Home.jsx","containers/DataApiContainer.jsx","utils/getDateTime.js","components/EventCard.jsx","components/EventCardGroup.jsx","components/EventsFilter.jsx","api/utils.js","api/database.js","api/eventApi.js","api/personApi.js","hooks/useDataApi.js","containers/EventsFilterContainer.jsx","hooks/useDocumentTitle.js","containers/AllEvents.jsx","containers/EventCardGroup.jsx","pages/Search.jsx","utils/hhmmss.js","components/EventTranscriptSearch.jsx","utils/isSubstring.js","components/EventSearch.jsx","components/EventShareVideo.jsx","components/EventMinutes.jsx","components/EventTranscript.jsx","components/VotingTable.jsx","components/EventTabs.jsx","hooks/useMatchMedia.js","components/Event.jsx","containers/Event.jsx","pages/Event.jsx","pages/AllEvents.jsx","components/PeopleCardGroup.jsx","containers/PeopleCardGroupContainer.jsx","pages/People.jsx","components/Person.jsx","containers/PersonContainer.jsx","pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["withTracker","WrappedComponent","options","trackPage","page","ReactGA","set","pageview","HOC","window","location","hash","substr","nextProps","currentPage","this","props","pathname","nextPage","Component","Brand","styled","h1","HeadingTab","transition","borderRadius","padding","backgroundColor","color","Header","Fragment","Segment","vertical","Container","to","style","marginLeft","Banner","width","target","rel","href","textDecoration","Footer","inverted","Grid","stackable","Row","columns","Column","as","content","List","link","Item","layoutStyle","margin","detailsStyle","marginTop","whiteSpace","sectionStyle","GeneralErrorBoundary","state","error","errorInfo","setState","toString","stack","componentStack","children","React","Layout","minHeight","ContentContainer","marginBottom","SearchBar","Input","StyledGrid","display","HomePage","useState","searchQuery","setSearchQuery","handleSearch","e","a","value","verticalAlign","centered","placeholder","onChange","onKeyPress","event","key","history","push","search","trim","replace","query","Button","attached","primary","Link","DataApiContainer","apiState","showLoader","isError","Error","isLoading","Loader","active","data","getDateTime","date","moment","utc","format","StyledCard","Card","boxShadow","StyledCardContent","Content","EventCard","name","description","fluid","prettyQuery","getLinkParameters","Meta","Description","memo","events","Group","map","id","allBodies","filters","handlePopupClose","sortOptions","committeeFilter","dateRangeFilter","sortFilter","committeeQuery","setCommitteeQuery","shouldFetchData","setShouldFetchData","useEffect","popupIsOpen","clear","getTextRep","isActive","header","setPopupIsOpen","closeOnChange","update","body","label","disabled","optionQuery","setOptionQuery","onPopupClose","fetchJson","url","fetch","then","res","json","WHERE_OPERATORS","eq","contains","contains_any","in","gt","lt","gteq","lteq","ORDER_OPERATORS","asc","desc","WhereCondition","filter","generalErr","Array","length","columnName","operator","Object","values","includes","OrderCondition","by","s","String","db","credentials","firebase","initializeApp","connection","firestore","table","collection","doc","get","exists","Promise","reject","queryResults","results","forEach","thisEvent","orderBy","undefined","limit","ref","where","catch","err","_unpackQueryResults","apiKey","authDomain","projectId","databaseURL","storage","getEvents","dateRange","bodyIDs","sort","getAllEvents","getFilteredEvents","selectRowsAsArray","allEvents","getBasicEvents","getEventMinutes","eventId","indexOrder","eventMinutes","getEventMinutesItem","eventMinutesItem","selectRowById","minutes_item_id","minutesItem","minutesItemFiles","minutes_item","file","getEventBody","bodyId","getEventTranscriptMetadata","getEventTranscript","firstTranscript","downloadFile","file_id","transcript","fileId","fetchFunction","fileMetaData","gsReference","refFromURL","uri","getDownloadURL","filename","getVotesForEvent","minutesItems","minuteItemsWithDecisions","minute","decision","formattedItems","item","matter","index","votePromises","all","minuteItemVotes","allPeople","i","votes","votesByPerson","vote","person","find","person_id","full_name","formattedIndividualVotes","sortBy","getEventById","body_id","minutes","videoUrl","video_uri","event_datetime","toMillis","toISOString","scPageUrl","source_uri","getEventsByIndexedTerm","term","valueMin","stemmedTokens","split","token","stemmer","stemmedToken","matches","summedMatchValueByEventId","mapValues","groupBy","flatten","match","event_id","eventTermMatches","reduce","current","sortedSummedMatches","sortEvents","filterEvents","getAllBodies","promises","getFilteredEventsHelper","bodyID","start","startDate","Timestamp","fromMillis","valueOf","end","endDate","add","subtract","indexOf","isBefore","isAfter","sortOption","isSearch","order","getAllPeople","getVotesForPerson","personId","formattedVotes","eventMinutesItemsPromises","event_minutes_item_id","eventMinutesItems","minutesItemsPromises","eventsPromises","voteData","eventMinuteItem","minuteItem","formattedVote","voteForPerson","eventDate","body_name","sortedVotes","dataFetchReducer","action","type","payload","useDataApi","functionName","initialFunctionArgs","initialData","functionArgs","setFunctionArgs","useReducer","dispatch","didCancel","apiFunctions","fetchData","EventsFilterContainer","useDocumentTitle","title","document","FiltersSection","div","position","top","zIndex","ResultCount","span","Results","paddingLeft","EventCardGroupContainer","useFilter","getDateText","getCheckboxText","getSortingText","prevCommitteeRef","useRef","prevDateRangeRef","prevSortRef","memoizeHandlePopupClose","useCallback","isSameState","scroll","newFunctionArgs","getSelectedOptions","useHistory","prevSearchRef","memoizedHandlePopupClose","Form","onSubmit","preventDefault","widths","Search","q","queryString","parse","hhmmss","sec_num","parseInt","hours","Math","floor","seconds","TranscriptItem","TranscriptItemText","fontSize","lineHeight","TimeStamp","searchText","handleSeek","cache","CellMeasurerCache","fixedWidth","defaultHeight","parent","columnIndex","rowIndex","searchWords","autoEscape","textToHighlight","text","size","onClick","start_time","Icon","onResize","clearAll","height","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToIndex","willChange","isSubstring","string","substring","toLowerCase","StyledEventSearch","flexDirection","boxSizing","Subheader","h2","SearchInput","SearchResultCount","TranscriptSearchHelpMessage","SearchResultsWrapper","border","flex","EventSearch","transcriptSearchText","setTranscriptSearchText","transcriptItems","TimePointInput","borderBottomColor","borderBottomStyle","borderBottomWidth","ShareVideoModal","Modal","right","ButtonWithRef","forwardRef","Ref","innerRef","ShareButton","paddingRight","ModalMountNode","toSeconds","timePointStr","nums","reverse","totalSeconds","num","isNaN","NaN","parseFloat","pow","toTimePointStr","initialTimePoint","isDisabled","timePointReducer","timePoint","newValue","EventShareVideo","videoPlayerRef","mountNodeRef","shareLinkRef","timePointRef","useLocation","open","setOpen","validateTimePointCb","closeIcon","trigger","compact","icon","currentTime","player","getState","readyState","onClose","inputRef","removeEventListener","mountNode","onMount","addEventListener","select","execCommand","videoShareLink","getVideoShareLink","Checkbox","checked","transparent","MinuteList","ol","listStylePosition","MinuteTitle","fontWeight","MinuteDescription","FileList","ul","listStyleType","EventMinutes","flexWrap","justifyContent","alignItems","isSpeakerTurnFormat","speakerTurn","speaker","transcriptItem","Divider","horizontal","transcriptItemRenderer","Headers","accessor","MiniTable","Person","Decision","StyledTableHeader","Table","VotingTable","votingData","isPerson","striped","headerMetaData","HeaderCell","Body","votingDatum","Cell","record","singleLine","StyledEventTabs","StyledEventMenu","Menu","borderBottom","paddingTop","topOffset","mediaQueriesMatches","activeItem","setActiveItem","contextRef","handleItemClick","getBoundingClientRect","scrollIntoView","scrollBy","Sticky","context","offset","styleElement","secondary","pointing","details","useMatchMedia","mediaQuery","matchMedia","setMatches","mediaQueryList","addListener","removeListener","StyledEvent","EventDate","InfoSegment","Inline","FixedSentinel","left","visibility","DummyContainer","isFixed","DummyDiv","PlayerCloseButton","button","opacity","PlayerContainer","PlayerWrapper","Event","eventData","videoTimePoint","setIsFixed","videoOffSetHeight","setVideoOffsetHeight","video","disablePictureInPicture","offsetHeight","seek","paused","hasStarted","play","pause","aspectRatio","preload","src","startTime","autoHide","rates","Visibility","once","onBottomPassed","onBottomPassedReverse","timestampedSentences","speakerTurnBlock","getTranscriptTimestampedText","EventContainer","EventPage","t","params","parseQuery","max","AllEventsPage","AllEvents","FlexWrapContainer","marginRight","cursor","transform","CardHeading","withRouter","people","email","PeopleCardGroupContainer","People","cssCheckbox","personHistory","phone","website","votingOptions","_","uniq","selectedVoteFilters","setSelectedVoteFilters","filteredVotes","setFilteredVotes","onSelectedVoteFilterChange","selectedFilters","without","isEmpty","filterVotingOptions","votingOption","initialize","App","basename","exact","path","component","Home","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f37838ba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nexport default function withTracker(WrappedComponent, options = {}) {\r\n  const trackPage = (page) => {\r\n    ReactGA.set({\r\n      page,\r\n      ...options\r\n    });\r\n    ReactGA.pageview(page);\r\n  };\r\n\r\n  const HOC = class extends Component {\r\n    componentDidMount() {\r\n      trackPage(window.location.hash.substr(1));\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n      const currentPage = this.props.location.pathname;\r\n      const nextPage = nextProps.location.pathname;\r\n\r\n      if (currentPage !== nextPage) {\r\n        trackPage(nextPage);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n  return HOC;\r\n}\r\n","import React from \"react\";\r\nimport { Segment, Container } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Brand = styled.h1({});\r\n\r\nconst HeadingTab = styled(\"span\")({\r\n  transition: \".8s all\",\r\n  borderRadius: \"5px\",\r\n  padding: \"1rem .5rem\",\r\n  \":hover\": {\r\n    backgroundColor: \"#F5F5F5\",\r\n    color: \"black\"\r\n\r\n  }\r\n});\r\n\r\nconst Header = () => (\r\n  <React.Fragment>\r\n    <Segment vertical>\r\n      <Container>\r\n        <Link to=\"/\">\r\n          <Brand>Council Data Project</Brand>\r\n        </Link>\r\n      </Container>\r\n    </Segment>\r\n    <Segment vertical>\r\n      <Container>\r\n        <Link to=\"/events\">\r\n          <HeadingTab>Events</HeadingTab>\r\n        </Link>\r\n        <Link to=\"/people\">\r\n          <HeadingTab style={{ marginLeft: \"10px\" }}>People</HeadingTab>\r\n        </Link>\r\n      </Container>\r\n    </Segment>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nconst Banner = () => (\r\n  <Container style={{ backgroundColor: \"#ededf0\", padding: \"1em 1em\", width: \"100vw\"}}>\r\n      <p>\r\n          Support this project by\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://forms.gle/eGyjhPx4hU3UBidKA\"\r\n            style={{ textDecoration: \"underline\" }}\r\n          >\r\n             &nbsp;giving&nbsp;your&nbsp;feedback&nbsp;&gt;\r\n          </a>\r\n      </p>\r\n  </Container>\r\n);\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { Container, Segment, Grid, Header, List } from \"semantic-ui-react\";\r\n\r\nconst Footer = () => (\r\n  <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\r\n    <Container>\r\n      <Grid inverted stackable>\r\n        <Grid.Row columns=\"equal\">\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"About\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">The Project</List.Item>\r\n              <List.Item as=\"a\">The Team</List.Item>\r\n              <List.Item as=\"a\">Other Work</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"Seattle\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">City of Seattle</List.Item>\r\n              <List.Item as=\"a\">Seattle Open Data</List.Item>\r\n              <List.Item as=\"a\">Seattle Channel</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"Developers\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">Council Data Project</List.Item>\r\n              <List.Item as=\"a\">Seattle Specific</List.Item>\r\n              <List.Item as=\"a\">Transcription Runner</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <p>\r\n            This web application is not funded by, nor associated with the\r\n            Seattle City Council. This is a prototype web application to show\r\n            the viability of an automated and collaborativly sourced city\r\n            council transcription service. The transcripts are roughly\r\n            ninty-percent accurate, and therefore may not represent what was\r\n            actually said.\r\n          </p>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  </Segment>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst layoutStyle = {\r\n  margin: '2em'\r\n};\r\n\r\nconst detailsStyle = {\r\n  marginTop: '0.7em',\r\n  whiteSpace: 'pre-wrap'\r\n};\r\n\r\nconst sectionStyle = {\r\n  marginTop: '0.7em'\r\n};\r\n\r\nclass GeneralErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n  }\r\n\r\n  // Note: error.stack is non-standard and is not on a standards track. It shouldn't be used in production,\r\n  // but this is just displaying the stack trace.\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Render error path\r\n      return (\r\n        <div style={layoutStyle}>\r\n          <h2>Something went wrong.</h2>\r\n          <div>\r\n            Sorry about that. To alert us of the issue, please fill out an{' '}\r\n            <a\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              href='https://github.com/CouncilDataProject/seattle/issues'\r\n            >\r\n              issue ticket\r\n            </a>{' '}\r\n            and we will try to fix it as soon as we can.\r\n          </div>\r\n          <br />\r\n          <div>{this.state.error.toString()}</div>\r\n          <details style={detailsStyle}>\r\n            {this.state.error.stack && (\r\n              <section style={sectionStyle}>\r\n                <strong>Error Stack Trace</strong>\r\n                <br />\r\n                <span>{this.state.error.stack}</span>\r\n              </section>\r\n            )}\r\n            <section style={sectionStyle}>\r\n              <strong>Component Stack Trace</strong>\r\n              <span>{this.state.errorInfo.componentStack}</span>\r\n            </section>\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default GeneralErrorBoundary;\r\n","import React from \"react\";\r\nimport { Container, Input, Button, Grid } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"55vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst SearchBar = styled(Input)({\r\n  width: \"50% !important\"\r\n});\r\n\r\nconst StyledGrid = styled(Grid)({\r\n  display: \"block\",\r\n  marginTop: \"150px !important\"\r\n});\r\n\r\nconst HomePage = props => {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n\r\n  const handleKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      props.history.push({\r\n        pathname: '/search',\r\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\r\n        state: { query: searchQuery }\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async (e, { value }) => {\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <StyledGrid verticalAlign=\"middle\" centered>\r\n            <Grid.Row>\r\n              <h1>Search City Council Transcripts</h1>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <SearchBar\r\n                placeholder=\"Enter a keyword to search meeting transcripts\"\r\n                value={searchQuery}\r\n                onChange={handleSearch}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <Button\r\n                attached=\"right\"\r\n                primary\r\n                as={Link}\r\n                to={{\r\n                  pathname: '/search',\r\n                  search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\r\n                  state: { query: searchQuery }\r\n                }}\r\n              >\r\n                Search\r\n            </Button>\r\n            </Grid.Row>\r\n          </StyledGrid>\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Fragment } from 'react';\r\nimport { Loader } from 'semantic-ui-react';\r\n\r\n// A general component to render the returned data of an api call.\r\nconst DataApiContainer = ({\r\n  apiState,\r\n  showLoader = true,\r\n  children\r\n}) => {\r\n\r\n  if (apiState.isError) {\r\n    // throw api error\r\n    if (apiState.error instanceof Error) {\r\n      throw apiState.error;\r\n    } else {\r\n      throw new Error(apiState.error);\r\n    }\r\n  } else if (apiState.isLoading) {\r\n    // show loader\r\n    return (\r\n      <Loader active={showLoader} />\r\n    );\r\n  } else {\r\n    if (apiState.data) {\r\n      // display children if there's data\r\n      return (\r\n        <Fragment>\r\n          {children}\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default DataApiContainer;\r\n","import moment from 'moment';\r\n\r\n/*Always display PST/PDT for event_datetime, regardless of user's locale*/\r\nconst getDateTime = (date) => {\r\n  return moment.utc(date).format('MMMM D, YYYY h:mm A');\r\n};\r\n\r\nexport default getDateTime;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst StyledCard = styled(Card)({\r\n  boxShadow: \"none !important\"\r\n});\r\n\r\nconst StyledCardContent = styled(Card.Content)({\r\n  padding: \"0 !important\"\r\n});\r\n\r\nconst EventCard = ({ name, date, description, link, query }) => {\r\n  const getLinkParameters = () => {\r\n    // Shorten whitespaces to one whitespace\r\n    const prettyQuery = query ? query.trim().replace(/\\s+/g, ' ') : ''\r\n    const linkParameters = {\r\n      // For search parameter, replace whitespaces with `+`\r\n      pathname: link,\r\n      search: prettyQuery ? `?q=${prettyQuery.replace(/\\s+/g, '+')}` : '',\r\n      state: {\r\n        query: prettyQuery\r\n      }\r\n    }\r\n    return linkParameters;\r\n  }\r\n\r\n  return (\r\n    <StyledCard fluid>\r\n      <StyledCardContent>\r\n        <Card.Header>\r\n          <Link to={getLinkParameters()}>\r\n            {name}\r\n          </Link>\r\n        </Card.Header>\r\n        <Card.Meta>{getDateTime(date)}</Card.Meta>\r\n        <Card.Description>{description}</Card.Description>\r\n      </StyledCardContent>\r\n    </StyledCard >\r\n  )\r\n};\r\n\r\nexport default EventCard;\r\n","import React from \"react\";\r\nimport EventCard from \"./EventCard\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst EventCardGroup = ({ events, query }) => {\r\n  return (\r\n    <Card.Group centered>\r\n      {events.map(({ name, date, description, id }) => (\r\n        <EventCard\r\n          key={id}\r\n          name={name}\r\n          date={date}\r\n          description={description}\r\n          link={`/events/${id}`}\r\n          query={query}\r\n        />\r\n      ))}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventCardGroup);","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  FilterPopup,\r\n  SelectDateRange,\r\n  SelectSorting,\r\n  SelectTextFilterOptions,\r\n} from '@councildataproject/cdp-instance';\r\n\r\nconst EventsFilter = ({\r\n  allBodies,\r\n  filters,\r\n  handlePopupClose,\r\n  sortOptions,\r\n}) => {\r\n  const [committeeFilter, dateRangeFilter, sortFilter] = filters;\r\n  const [committeeQuery, setCommitteeQuery] = useState('');\r\n  const [shouldFetchData, setShouldFetchData] = useState(false);\r\n\r\n  const getCommitteeNameOptions = () => {\r\n    return allBodies.map((body) => {\r\n      return {\r\n        name: body.id,\r\n        label: body.name,\r\n        disabled: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSortingPopupClose = () => {\r\n    sortFilter.setPopupIsOpen(false);\r\n    setShouldFetchData(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sortFilter.popupIsOpen && shouldFetchData) {\r\n      handlePopupClose();\r\n    }\r\n\r\n    return () => setShouldFetchData(false);\r\n  }, [shouldFetchData, sortFilter.popupIsOpen, handlePopupClose]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FilterPopup\r\n        clear={committeeFilter.clear}\r\n        getTextRep={committeeFilter.getTextRep}\r\n        isActive={committeeFilter.isActive}\r\n        header='Select Committees'\r\n        popupIsOpen={committeeFilter.popupIsOpen}\r\n        setPopupIsOpen={committeeFilter.setPopupIsOpen}\r\n        handlePopupClose={handlePopupClose}\r\n        closeOnChange={false}\r\n      >\r\n        <SelectTextFilterOptions\r\n          name={committeeFilter.name}\r\n          state={committeeFilter.state}\r\n          update={committeeFilter.update}\r\n          options={getCommitteeNameOptions()}\r\n          optionQuery={committeeQuery}\r\n          setOptionQuery={setCommitteeQuery}\r\n        />\r\n      </FilterPopup>\r\n      <FilterPopup\r\n        clear={dateRangeFilter.clear}\r\n        getTextRep={dateRangeFilter.getTextRep}\r\n        isActive={dateRangeFilter.isActive}\r\n        header='Select Date Range'\r\n        popupIsOpen={dateRangeFilter.popupIsOpen}\r\n        setPopupIsOpen={dateRangeFilter.setPopupIsOpen}\r\n        handlePopupClose={handlePopupClose}\r\n        closeOnChange={false}\r\n      >\r\n        <SelectDateRange\r\n          state={dateRangeFilter.state}\r\n          update={dateRangeFilter.update}\r\n        />\r\n      </FilterPopup>\r\n      <FilterPopup\r\n        clear={sortFilter.clear}\r\n        getTextRep={sortFilter.getTextRep}\r\n        isActive={sortFilter.isActive}\r\n        header='Sort Results By'\r\n        popupIsOpen={sortFilter.popupIsOpen}\r\n        setPopupIsOpen={sortFilter.setPopupIsOpen}\r\n        handlePopupClose={handlePopupClose}\r\n        closeOnChange={true}\r\n      >\r\n        <SelectSorting\r\n          sortOptions={sortOptions}\r\n          state={sortFilter.state}\r\n          update={sortFilter.update}\r\n          onPopupClose={handleSortingPopupClose}\r\n        />\r\n      </FilterPopup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventsFilter);\r\n","export async function fetchJson(url){\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n};\r\n\r\nexport function isString(s) {\r\n    return typeof(s) === \"string\" || s instanceof String;\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { isString } from \"./utils\";\r\n\r\nexport const WHERE_OPERATORS = {\r\n    eq: \"==\",\r\n    contains: \"array-contains\",\r\n    contains_any: \"array-contains-any\",\r\n    in: \"in\",\r\n    gt: \">\",\r\n    lt: \"<\",\r\n    gteq: \">=\",\r\n    lteq: \"<=\",\r\n};\r\n\r\nexport const ORDER_OPERATORS = {\r\n    asc: \"asc\",\r\n    desc: \"desc\"\r\n};\r\n\r\nexport class WhereCondition {\r\n    /**\r\n    * @param {(Object|Array)} filter The object or array to use to create a WhereCondition from.\r\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`, `value`].\r\n    *   When provided an Object, the object must have `columnName` and `value` attributes, and, optional `operator`\r\n    *   attributes. The `operator` is optional in both cases and if left out, will default to value equality.\r\n    */\r\n    constructor(filter) {\r\n        const generalErr = new Error(`Unsure how to create WhereCondition from received data: ${filter}`);\r\n\r\n        // Handle array and object\r\n        if (filter instanceof Array) {\r\n            // Array two items long, assume equal operator\r\n            if (filter.length === 2) {\r\n                this.columnName = filter[0];\r\n                this.operator = WHERE_OPERATORS.eq;\r\n                this.value = filter[1];\r\n            // Array of three items long, check order\r\n            } else if (filter.length === 3) {\r\n                // Check proper order by ensuring an approved operator is included at index one\r\n                if (Object.values(WHERE_OPERATORS).includes(filter[1])) {\r\n                    // Unpack contents\r\n                    this.columnName = filter[0];\r\n                    this.operator = filter[1];\r\n                    this.value = filter[2];\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown WhereCondition operator: ${filter[1]}\r\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Log error in any other case\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else if (filter instanceof Object) {\r\n            // All attributes present and operator is valid\r\n            if (\r\n                filter.columnName &&\r\n                filter.operator &&\r\n                filter.value\r\n            ) {\r\n                if (Object.values(WHERE_OPERATORS).includes(filter.operator)) {\r\n                    this.columnName = filter.columnName;\r\n                    this.operator = filter.operator;\r\n                    this.value = filter.value;\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown WhereCondition operator: ${filter.operator}\r\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Only column name and value attributes present, assume equal operator\r\n            } else if (filter.columnName && filter.value) {\r\n                this.columnName = filter.columnName;\r\n                this.operator = WHERE_OPERATORS.eq;\r\n                this.value = filter.value;\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else {\r\n            throw generalErr;\r\n        };\r\n    };\r\n};\r\n\r\nexport class OrderCondition {\r\n    /**\r\n    * @param {(Object|Array|string)} order The object, array, or string to use to create an OrderCondition from.\r\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`].\r\n    *   When provided an Object, the object must have `columnName`, and, optional `operator` attributes.\r\n    *   The `operator` is optional in both cases and if left out, will default to `descending`.\r\n    *   When provided a String, the string is simply the `columnName` for the OrderCondition, as the `operator` will\r\n    *   default to `descending`.\r\n    */\r\n    constructor(by) {\r\n        const generalErr = new Error(`Unsure how to create OrderCondition from received data: ${by}`);\r\n\r\n        // Handle string, array, and object\r\n        if (isString(by)) {\r\n            this.columnName = by;\r\n            this.operator = ORDER_OPERATORS.desc;\r\n        } else if (by instanceof Array) {\r\n            // Array single item long, assume descending operator\r\n            if (by.length === 1) {\r\n                this.columnName = by[0];\r\n                this.operator = ORDER_OPERATORS.desc;\r\n            // Array of two items long, check order\r\n            } else if (by.length === 2) {\r\n                // Check proper order by ensuring an approved operator is included at index one\r\n                if (Object.values(ORDER_OPERATORS).includes(by[1])) {\r\n                    // Unpack contents\r\n                    this.columnName = by[0];\r\n                    this.operator = by[1];\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown OrderCondition operator: ${by[1]}\r\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Log error in any other case\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else if (by instanceof Object) {\r\n            // All attributes present and operator is valid\r\n            if (\r\n                by.columnName &&\r\n                by.operator\r\n            ) {\r\n                if (Object.values(ORDER_OPERATORS).includes(by.operator)) {\r\n                    this.columnName = by.columnName;\r\n                    this.operator = by.operator;\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown OrderCondition operator: ${by.operator}\r\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Only column name, assume descending operator\r\n            } else if (by.columnName) {\r\n                this.columnName = by.columnName;\r\n                this.operator = ORDER_OPERATORS.desc;\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else {\r\n            throw generalErr;\r\n        };\r\n    };\r\n};\r\n\r\nclass Database {\r\n    /**\r\n    * @param {Object} credentials An object that contains all reqired information to interact with a CDP database.\r\n    */\r\n    constructor(credentials) {\r\n        // Store for save keeping\r\n        this.credentials = credentials;\r\n\r\n        // Initialize Connection\r\n        firebase.initializeApp(this.credentials);\r\n\r\n        // Store connection\r\n        this.connection = firebase.firestore();\r\n    };\r\n\r\n    /**\r\n    * @param {string} table The name of the table (collection) you want to request results from.\r\n    * @param {string} id The id for the row you want to retrieve.\r\n    * @return {Object} If the row was found, the row's contents are returned as an object.\r\n    */\r\n    async selectRowById(table, id) {\r\n        try {\r\n            const res = await this.connection\r\n                .collection(table)\r\n                .doc(id)\r\n                .get()\r\n\r\n            if (!res.exists) {\r\n                throw new Error(`${table} ${id} doesn't exist.`);\r\n            }\r\n            return res.data();\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        };\r\n    };\r\n\r\n    /**\r\n    * @param {Object[]} queryResults The results returned from a query to the database.\r\n    * @return {Object[]} The formatted query results.\r\n    */\r\n    async _unpackQueryResults(queryResults) {\r\n        const results = [];\r\n        queryResults.forEach(doc => {\r\n            const data = doc.data();\r\n            const thisEvent = {\r\n              id: doc.id,\r\n              ...data\r\n            };\r\n            results.push(thisEvent);\r\n        });\r\n        return results;\r\n    };\r\n\r\n    /**\r\n    * @param {string} table The name of the table (collection) you want to request results from.\r\n    * @param {(Object[]|Array[])} [filters] A list of filters (where conditions) to add.\r\n    * @param {(Object|string)} [orderBy] An order by condition to order the results by prior to returning.\r\n    * @param {integer} [limit=1000] An integer limit to how many rows should be returned that match the query provided.\r\n    * @return {Object[]} The formatted query results.\r\n    */\r\n    async selectRowsAsArray(table, filters = [], orderBy = undefined, limit = 1000) {\r\n        try {\r\n            // Make basic reference\r\n            let ref = this.connection.collection(table);\r\n\r\n            // Attach filters\r\n            filters.forEach(filter => {\r\n                ref = ref.where(filter.columnName, filter.operator, filter.value);\r\n            });\r\n\r\n            // Attach order by\r\n            if (orderBy) {\r\n                ref = ref.orderBy(orderBy.columnName, orderBy.operator);\r\n            };\r\n\r\n            // Attach limit\r\n            ref = ref.limit(limit);\r\n\r\n            // Make requst\r\n            const res = await ref.get()\r\n                .catch(err => {\r\n                    throw new Error(`Failed to retrieve data from database. Error: ${err}`);\r\n                });\r\n\r\n            // Return the formatted results\r\n            return await this._unpackQueryResults(res);\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        };\r\n    };\r\n};\r\n\r\n// Export created and connected database\r\nexport const db = new Database({\r\n    apiKey: \"AIzaSyA7aO6weBcOUBZLmxE3aMyn4NeElVEHZUc\",\r\n    authDomain: \"cdp-sea.firebaseapp.com\",\r\n    projectId: \"cdp-seattle\",\r\n    databaseURL: \"https://cdp-sea.firebaseio.com\"\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport moment from \"moment\";\r\nimport stemmer from \"stemmer\";\r\nimport { flatten, orderBy, sortBy, groupBy, mapValues, filter } from \"lodash\";\r\nimport { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from \"./database\";\r\nimport { fetchJson } from \"./utils\";\r\n\r\nconst storage = firebase.storage();\r\n\r\n/**\r\n * A general get events function for the all events page.\r\n * @param {Object} [dateRange=null]\r\n * @param {String[]} [bodyIDs=null]\r\n * @param {Object} [sort=null]\r\n * @return {Object[]} The list of events.\r\n */\r\nexport async function getEvents(dateRange = null, bodyIDs = null, sort = null) {\r\n  if (!dateRange && !bodyIDs && !sort) {\r\n    return await getAllEvents();\r\n  } else {\r\n    return await getFilteredEvents(dateRange, bodyIDs, sort);\r\n  }\r\n}\r\n\r\n/**\r\n * @return {Object[]} The list of events sorted by recency.\r\n */\r\nasync function getAllEvents() {\r\n  try {\r\n    const allEvents = await db.selectRowsAsArray(\r\n      \"event\",\r\n      [],\r\n      new OrderCondition([\"event_datetime\", ORDER_OPERATORS.desc])\r\n    );\r\n    return await getBasicEvents(allEvents);\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} eventId The event's id.\r\n * @param {String} indexOrder The sort order.\r\n * @return {Object[]} The list of event minutes item for the event sorted according to indexOrder.\r\n */\r\nexport async function getEventMinutes(eventId, indexOrder) {\r\n  try {\r\n    const eventMinutes = await db.selectRowsAsArray(\r\n      \"event_minutes_item\",\r\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\r\n      new OrderCondition([\"index\", indexOrder])\r\n    );\r\n    return eventMinutes;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} eventMinutesItem The event minutes item.\r\n * @return {Object} The event minutes item merged with its corresponding minutes item and attached files.\r\n */\r\nexport async function getEventMinutesItem(eventMinutesItem) {\r\n  try {\r\n    const minutesItem = await db.selectRowById(\"minutes_item\", eventMinutesItem.minutes_item_id);\r\n    const minutesItemFiles = await db.selectRowsAsArray(\r\n      \"minutes_item_file\",\r\n      [new WhereCondition([\"minutes_item_id\", WHERE_OPERATORS.eq, eventMinutesItem.minutes_item_id])],\r\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\r\n    );\r\n\r\n    return {\r\n      ...eventMinutesItem,\r\n      minutes_item: {\r\n        id: eventMinutesItem.minutes_item_id,\r\n        ...minutesItem,\r\n        file: minutesItemFiles\r\n      }\r\n    };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} bodyId The body's id.\r\n * @return {Object} The body's details.\r\n */\r\nexport async function getEventBody(bodyId) {\r\n  try {\r\n    const body = await db.selectRowById('body', bodyId);\r\n    return body;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} eventId The event's id.\r\n * @return {Object} The content of the transcript file for the event.\r\n */\r\nexport async function getEventTranscriptMetadata(eventId) {\r\n  try {\r\n    const firstTranscript = await getEventTranscript(eventId);\r\n    const transcript = await downloadFile(firstTranscript.file_id, fetchJson);\r\n    return transcript;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {String} eventId The event's id.\r\n * @return {Object} The transcript for the event.\r\n */\r\nasync function getEventTranscript(eventId) {\r\n  const [firstTranscript] = await db.selectRowsAsArray(\r\n    \"transcript\",\r\n    [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\r\n    null,\r\n    1\r\n  );\r\n\r\n  if (!firstTranscript) {\r\n    throw new Error(`Transcript doesn't exist for event: ${eventId}`);\r\n  }\r\n\r\n  return firstTranscript;\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} fileId The id of the file to be downloaded.\r\n * @param {Function} fetchFunction The function that is used to download the file's content.\r\n * @return {Object} The file's content.\r\n */\r\nasync function downloadFile(fileId, fetchFunction) {\r\n  const fileMetaData = await db.selectRowById(\"file\", fileId);\r\n\r\n  // https://firebase.google.com/docs/storage/web/download-files\r\n  const gsReference = storage.refFromURL(fileMetaData.uri);\r\n  const file = await gsReference\r\n    .getDownloadURL()\r\n    .then(url => fetchFunction(url));\r\n\r\n  if (!file) {\r\n    throw new Error(`Failed to download ${fileMetaData.filename} from ${fileMetaData.uri}.`);\r\n  }\r\n  return file;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object[]} minutesItems The list of minutes item.\r\n * @return {Object[]} The voting records for each minutes item in minutesItems.\r\n */\r\nasync function getVotesForEvent(minutesItems) {\r\n  try {\r\n    const minuteItemsWithDecisions = minutesItems.filter(\r\n      minute => minute.decision !== null\r\n    );\r\n\r\n    const formattedItems = [];\r\n    minuteItemsWithDecisions.forEach(item => {\r\n      formattedItems.push({\r\n        matter: item.minutes_item.matter,\r\n        name: item.minutes_item.name,\r\n        id: item.id,\r\n        decision: item.decision,\r\n        index: item.index\r\n      });\r\n    });\r\n\r\n    const votePromises = formattedItems.map(item =>\r\n      db.selectRowsAsArray(\r\n        \"vote\",\r\n        [new WhereCondition([\"event_minutes_item_id\", WHERE_OPERATORS.eq, item.id])]\r\n      )\r\n    );\r\n\r\n    const minuteItemVotes = await Promise.all(votePromises);\r\n\r\n    const allPeople = await db.selectRowsAsArray(\"person\");\r\n\r\n    formattedItems.forEach((item, i) => {\r\n      const votes = minuteItemVotes[i];\r\n      const votesByPerson = [];\r\n      votes.forEach(vote => {\r\n        const person = allPeople.find(person => person.id === vote.person_id)\r\n        votesByPerson.push({\r\n          decision: vote.decision,\r\n          person_id: vote.person_id,\r\n          full_name: person.full_name\r\n        });\r\n      });\r\n\r\n      item.formattedIndividualVotes = sortBy(votesByPerson, vote => vote.full_name);\r\n    });\r\n\r\n    return formattedItems;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} id The event's id\r\n * @return {Object} The event's details.\r\n */\r\nexport async function getEventById(id) {\r\n  try {\r\n    const event = await db.selectRowById(\"event\", id);\r\n    const body = await getEventBody(event.body_id);\r\n    const minutes = await getEventMinutes(id, ORDER_OPERATORS.asc);\r\n    const minutesItems = await Promise.all(\r\n      minutes.map(minute => getEventMinutesItem(minute))\r\n    );\r\n    const transcript = await getEventTranscriptMetadata(id);\r\n    const votes = await getVotesForEvent(minutesItems);\r\n\r\n    return {\r\n      id,\r\n      name: body.name,\r\n      description: body.description,\r\n      videoUrl: event.video_uri,\r\n      date: moment\r\n        .utc(event.event_datetime.toMillis())\r\n        .toISOString(),\r\n      minutes: minutesItems,\r\n      transcript: transcript,\r\n      scPageUrl: event.source_uri,\r\n      votes: votes\r\n    };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n/**\r\n* @param {string} term The search term\r\n* @param {Object} dateRange The start and end dates to filter search results.\r\n* @param {string} dateRange.start\r\n* @param {string} dateRange.end\r\n* @param {string[]} bodyIDs The list of committee/body ids to filter search results.\r\n* @param {Object} sort The sort by and sort order options.\r\n* @param {string} sort.by\r\n* @param {string} sort.order\r\n* @return {Object[]} The search results, where each event's date is within\r\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The search\r\n* results are sorted according to the sort options.\r\n*/\r\nexport async function getEventsByIndexedTerm(term, dateRange = {}, bodyIDs = [], sort = {}) {\r\n  const valueMin = 0;\r\n  try {\r\n\r\n    const stemmedTokens = term.split(\" \").map(token => stemmer(token));\r\n    if (stemmedTokens.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    // get matches for each term\r\n    const matches = await Promise.all(\r\n      stemmedTokens.map(stemmedToken =>\r\n        db.selectRowsAsArray(\r\n          \"indexed_event_term\",\r\n          [new WhereCondition([\"term\", WHERE_OPERATORS.eq, stemmedToken])]\r\n        )\r\n      )\r\n    );\r\n\r\n    // create a map of event id to object with id and sum of match values\r\n    const summedMatchValueByEventId = mapValues(\r\n      groupBy(flatten(matches), match => match.event_id),\r\n      (eventTermMatches, key) =>\r\n        eventTermMatches.reduce(\r\n          (current, item) => ({\r\n            ...current,\r\n            value: current.value + item.value\r\n          }),\r\n          { event_id: key, value: 0 }\r\n        )\r\n    );\r\n\r\n    // get only event id with summed values > valueMin\r\n    const sortedSummedMatches = filter(summedMatchValueByEventId, ({ value }) => value > valueMin);\r\n    let events = await Promise.all(\r\n      sortedSummedMatches.map(({ event_id }) => db.selectRowById('event', event_id))\r\n    );\r\n\r\n    events = await getBasicEvents(events);\r\n\r\n    events.forEach((event, i) => {\r\n      event.id = sortedSummedMatches[i].event_id;\r\n      event.value = sortedSummedMatches[i].value;\r\n    });\r\n\r\n    events = filterEvents(events, dateRange, bodyIDs);\r\n    events = sortEvents(events, sort, true);\r\n    return events;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * @return {Object[]} The list of bodies.\r\n */\r\nexport async function getAllBodies() {\r\n  try {\r\n    return db.selectRowsAsArray(\r\n      'body',\r\n      [],\r\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\r\n    );\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n* @param {Object} dateRange The start and end dates to filter events.\r\n* @param {string} dateRange.start\r\n* @param {string} dateRange.end\r\n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\r\n* @param {Object} sort The sort by and sort order options.\r\n* @param {string} sort.by\r\n* @param {string} sort.order\r\n* @return {Object[]} A list of events, where each event's date is within\r\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The events\r\n* are sorted according to the sort options.\r\n*/\r\nasync function getFilteredEvents(dateRange, bodyIDs, sort) {\r\n  try {\r\n    const promises = [];\r\n    if (bodyIDs.length) {\r\n      bodyIDs.forEach(id => promises.push(getFilteredEventsHelper(dateRange, id)));\r\n    } else {\r\n      promises.push(getFilteredEventsHelper(dateRange));\r\n    }\r\n    let events = flatten(await Promise.all(promises));\r\n    events = await getBasicEvents(events);\r\n    events = sortEvents(events, sort);\r\n    return events;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\nasync function getFilteredEventsHelper(dateRange, bodyID = null) {\r\n  const filters = [];\r\n  if (bodyID) {\r\n    filters.push(new WhereCondition(['body_id', WHERE_OPERATORS.eq, bodyID]));\r\n  }\r\n  if (dateRange.start) {\r\n    const startDate = moment.utc(dateRange.start, 'YYYY-MM-DD')\r\n    const start = firebase.firestore.Timestamp.fromMillis(startDate.valueOf());\r\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.gteq, start]));\r\n  }\r\n  if (dateRange.end) {\r\n    const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\r\n    const end = firebase.firestore.Timestamp.fromMillis(endDate.valueOf());\r\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.lteq, end]));\r\n  }\r\n\r\n  return db.selectRowsAsArray(\r\n    'event',\r\n    filters\r\n  );\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events\r\n* @return {Object[]} The formatted list of events with basic information for front-end.\r\n*/\r\nasync function getBasicEvents(events) {\r\n  const allBodies = await getAllBodies();\r\n  return events.map(event => {\r\n    const body = allBodies.find(body => body.id === event.body_id);\r\n    return {\r\n      id: event.id,\r\n      body_id: body.id,\r\n      name: body.name,\r\n      description: body.description,\r\n      date: moment\r\n        .utc(event.event_datetime.toMillis())\r\n        .toISOString()\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events to filter.\r\n* @param {Object} dateRange The start and end dates to filter events.\r\n* @param {string} dateRange.start\r\n* @param {string} dateRange.end\r\n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\r\n* @return {Object[]} A list of events, where each event's date is within\r\n* date range and the event's body id is in bodyIDs(if its non-empty).\r\n*/\r\nfunction filterEvents(events, dateRange, bodyIDs) {\r\n  return events.filter(event => {\r\n    if (bodyIDs.length && bodyIDs.indexOf(event.body_id) === -1) {\r\n      return false;\r\n    }\r\n\r\n    if (dateRange.start && moment.utc(event.date).isBefore(moment.utc(dateRange.start))) {\r\n      return false;\r\n    }\r\n\r\n    if (dateRange.end) {\r\n      const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\r\n      if (moment.utc(event.date).isAfter(endDate)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events to sort.\r\n* @param {Object} sortOption The sort by and sort order options.\r\n* @param {string} sortOption.by\r\n* @param {string} sortOption.order\r\n* @param {boolean} isSearch Whether the list of events is from the search page.\r\n* @return {Object[]} A list of events sorted according to sortOption.\r\n*/\r\nfunction sortEvents(events, sortOption, isSearch = false) {\r\n  if (sortOption.by && sortOption.order) {\r\n    events = orderBy(events, [sortOption.by], [sortOption.order]);\r\n  } else {\r\n    events = orderBy(events, [isSearch ? 'value' : 'date'], [ORDER_OPERATORS.desc]);\r\n  }\r\n\r\n  return events;\r\n}\r\n","import { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from './database';\r\nimport { orderBy } from 'lodash';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * @return {Object[]} The list of persons sorted by full_name.\r\n */\r\nexport async function getAllPeople() {\r\n  try {\r\n    const allPeople = await db.selectRowsAsArray(\r\n      'person',\r\n      [],\r\n      new OrderCondition(['full_name', ORDER_OPERATORS.asc])\r\n    );\r\n    return allPeople;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} personId The person's id.\r\n * @return {Object} The voting records and details of the person.\r\n */\r\nexport async function getVotesForPerson(personId) {\r\n  try {\r\n    const formattedVotes = [];\r\n    const person = await db.selectRowById('person', personId);\r\n    const votes = await db.selectRowsAsArray(\r\n      'vote',\r\n      [new WhereCondition(['person_id', WHERE_OPERATORS.eq, personId])],\r\n    );\r\n    const eventMinutesItemsPromises = votes.map(vote => db.selectRowById('event_minutes_item', vote.event_minutes_item_id));\r\n    const eventMinutesItems = await Promise.all(eventMinutesItemsPromises);\r\n    const minutesItemsPromises = eventMinutesItems.map(item => db.selectRowById('minutes_item', item.minutes_item_id));\r\n    const minutesItems = await Promise.all(minutesItemsPromises);\r\n    // commented this out for now, but we could link to the file if we get this data\r\n    // const allMinuteFiles = await getAllResources('minutes_item_file')\r\n    const eventsPromises = eventMinutesItems.map(item => db.selectRowById('event', item.event_id));\r\n    const events = await Promise.all(eventsPromises);\r\n    const allBodies = await db.selectRowsAsArray('body');\r\n\r\n    votes.forEach((voteData, i) => {\r\n      const eventMinuteItem = eventMinutesItems[i];\r\n      const minuteItem = minutesItems[i];\r\n      const event = events[i];\r\n      const body = allBodies.find(item => item.id === event.body_id);\r\n      // const file = allMinuteFiles.find(item => item.minutes_item_id === minuteItem.id)\r\n      const formattedVote = {\r\n        id: voteData.id,\r\n        matter: minuteItem.matter,\r\n        name: minuteItem.name,\r\n        // what this person voted\r\n        voteForPerson: voteData.decision,\r\n        // what the council decided\r\n        decision: eventMinuteItem.decision,\r\n        eventId: eventMinuteItem.event_id,\r\n        index: eventMinuteItem.index,\r\n        eventDate: moment.utc(event.event_datetime.toMillis()).toISOString(),\r\n        body_name: body.name\r\n        // file\r\n      }\r\n      formattedVotes.push(formattedVote)\r\n    });\r\n    const sortedVotes = orderBy(formattedVotes, ['eventDate', 'index'], ['desc', 'desc']);\r\n    return { ...person, votes: sortedVotes };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport * as apiFunctions from '../api';\r\n\r\n/**\r\n * A reducer to manage the state of data fetching from api\r\n * @param {Object} state The state.\r\n * @param {Boolean} state.isLoading Whether fetching the data is in progress.\r\n * @param {Boolean} state.isError Whether fetching the data failed.\r\n * @param {Object} state.error The error object.\r\n * @param {Object} state.data The resulting data from api call.\r\n * @param {Object} action The action to change the state.\r\n * @param {String} action.type The str description of the action.\r\n * @param {Object} [action.payload] The action's data.\r\n * @return {Object} A new state.\r\n */\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload.data,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n        error: action.payload.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * A custom hook for data fetching from api.\r\n * @param {String} functionName The name of the api function to call.\r\n * @param {Object[]} initialFunctionArgs The list of args for the api function.\r\n * @param {Object} initialData The initial data to be returned by api function.\r\n * @return {Object[]} The state of the api function call and a function\r\n * to update the list of args.\r\n */\r\nconst useDataApi = (functionName, initialFunctionArgs, initialData) => {\r\n  // The list of args and a function to update the list.\r\n  const [functionArgs, setFunctionArgs] = useState(initialFunctionArgs);\r\n  // state is a React state of the api function call. dispatch is used to send\r\n  // an action to dataFetchReducer to update the state.\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    error: null,\r\n    data: initialData,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // a boolean flag to prevent setting React state when the component is unmounted\r\n    let didCancel = false;\r\n\r\n    const fetchData = async () => {\r\n      // dispatch fetching data is in progress\r\n      dispatch({ type: 'FETCH_INIT' });\r\n\r\n      try {\r\n        // fetch data from api\r\n        let data;\r\n        if (functionArgs) {\r\n          data = await apiFunctions[functionName](...functionArgs);\r\n        } else {\r\n          data = await apiFunctions[functionName]();\r\n        }\r\n        if (!didCancel) {\r\n          // dispatch fetching data succeeded \r\n          dispatch({ type: 'FETCH_SUCCESS', payload: { data: data } });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          // dispatch fetching data failed\r\n          dispatch({ type: 'FETCH_FAILURE', payload: { error: error } });\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    // return a clean up function for when the component unmounts\r\n    return () => {\r\n      // a true boolean flag to let data fetching logic know that it shouldn't set React state\r\n      didCancel = true;\r\n    };\r\n  }, [functionName, functionArgs]);\r\n\r\n  return [state, setFunctionArgs];\r\n};\r\n\r\nexport default useDataApi;\r\n","import React from 'react';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport EventsFilter from '../components/EventsFilter';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst EventsFilterContainer = ({ filters, handlePopupClose, sortOptions }) => {\r\n  const [apiState] = useDataApi('getAllBodies', null, null);\r\n\r\n  return (\r\n    <DataApiContainer showLoader={false} apiState={apiState}>\r\n      <EventsFilter\r\n        allBodies={apiState.data}\r\n        filters={filters}\r\n        handlePopupClose={handlePopupClose}\r\n        sortOptions={sortOptions}\r\n      />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default EventsFilterContainer;\r\n","import React from 'react';\r\n\r\nfunction useDocumentTitle(title) {\r\n  React.useEffect(() => {\r\n    document.title = title;\r\n\r\n    return () => {\r\n      document.title = 'Council Data Project - Seattle';\r\n    };\r\n  }, [title]);\r\n}\r\n\r\nexport default useDocumentTitle;","import React, { useCallback } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n  getCheckboxText,\r\n  getDateText,\r\n  getSelectedOptions,\r\n  getSortingText,\r\n  useFilter,\r\n} from '@councildataproject/cdp-instance';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport EventCardGroup from '../components/EventCardGroup';\r\nimport EventsFilterContainer from './EventsFilterContainer';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nexport const FiltersSection = styled.div({\r\n  position: 'sticky',\r\n  top: '0',\r\n  backgroundColor: 'white',\r\n  zIndex: '1',\r\n  padding: '1em 0 2em',\r\n  '> .ui.button': {\r\n    marginBottom: '0.5em',\r\n    '@media(max-width:500px)': {\r\n      width: '100%',\r\n    },\r\n  },\r\n});\r\n\r\nexport const ResultCount = styled.span({\r\n  display: 'block',\r\n  color: 'grey',\r\n  marginBottom: '2em',\r\n});\r\n\r\nexport const Results = styled.div({\r\n  paddingLeft: '1em',\r\n});\r\n\r\nconst EventCardGroupContainer = ({ query }) => {\r\n  const dateRangeFilter = useFilter(\r\n    'Date',\r\n    { start: '', end: '' },\r\n    '',\r\n    getDateText\r\n  );\r\n  const committeeFilter = useFilter('Committee', {}, false, getCheckboxText);\r\n  const sortFilter = useFilter(\r\n    'Sort',\r\n    { by: 'date', order: 'desc', label: 'Newest first' },\r\n    '',\r\n    getSortingText\r\n  );\r\n  const [apiState, setFunctionArgs] = useDataApi('getEvents', null, null);\r\n  useDocumentTitle('Committee Events');\r\n\r\n  const prevCommitteeRef = React.useRef({});\r\n  const prevDateRangeRef = React.useRef({});\r\n  const prevSortRef = React.useRef({});\r\n\r\n  // memoizedHandlePopupClose is a callback for when one of the FilterPopups in EventsFilterContainer closes.\r\n  // It will perform filtering, depending on whether any of filter state have changed.\r\n  const memoizeHandlePopupClose = useCallback(() => {\r\n    if (\r\n      !committeeFilter.isSameState(prevCommitteeRef.current) ||\r\n      !dateRangeFilter.isSameState(prevDateRangeRef.current) ||\r\n      !sortFilter.isSameState(prevSortRef.current)\r\n    ) {\r\n      window.scroll(0, 0);\r\n      // update args of api function so that custom hook useDataApi will fetch new data\r\n      setFunctionArgs(() => {\r\n        const newFunctionArgs = [\r\n          dateRangeFilter.state,\r\n          getSelectedOptions(committeeFilter.state),\r\n          sortFilter.state,\r\n        ];\r\n        prevCommitteeRef.current = committeeFilter.state;\r\n        prevDateRangeRef.current = dateRangeFilter.state;\r\n        prevSortRef.current = sortFilter.state;\r\n        return newFunctionArgs;\r\n      });\r\n    }\r\n  }, [committeeFilter, dateRangeFilter, sortFilter, setFunctionArgs]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FiltersSection>\r\n        <EventsFilterContainer\r\n          filters={[committeeFilter, dateRangeFilter, sortFilter]}\r\n          handlePopupClose={memoizeHandlePopupClose}\r\n          sortOptions={[\r\n            { by: 'date', order: 'desc', label: 'Newest first' },\r\n            { by: 'date', order: 'asc', label: 'Oldest first' },\r\n          ]}\r\n        />\r\n      </FiltersSection>\r\n      <Results>\r\n        <DataApiContainer apiState={apiState}>\r\n          {apiState.data && (\r\n            <ResultCount>{apiState.data.length} results</ResultCount>\r\n          )}\r\n          <EventCardGroup events={apiState.data} />\r\n        </DataApiContainer>\r\n      </Results>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventCardGroupContainer;\r\n","import React, { useCallback } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport {\r\n  getCheckboxText,\r\n  getDateText,\r\n  getSelectedOptions,\r\n  getSortingText,\r\n  useFilter,\r\n} from '@councildataproject/cdp-instance';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport EventCardGroup from '../components/EventCardGroup';\r\nimport EventsFilterContainer from './EventsFilterContainer';\r\nimport { FiltersSection, ResultCount, Results } from './AllEvents';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EventCardGroupContainer = ({ query }) => {\r\n  const [searchQuery, setSearchQuery] = React.useState(query);\r\n  const dateRangeFilter = useFilter(\r\n    'Date',\r\n    { start: '', end: '' },\r\n    '',\r\n    getDateText\r\n  );\r\n  const committeeFilter = useFilter('Committee', {}, false, getCheckboxText);\r\n  const sortFilter = useFilter(\r\n    'Sort',\r\n    { by: 'value', order: 'desc', label: 'Most relevant' },\r\n    '',\r\n    getSortingText\r\n  );\r\n  const [apiState, setFunctionArgs] = useDataApi(\r\n    'getEventsByIndexedTerm',\r\n    [\r\n      query,\r\n      dateRangeFilter.state,\r\n      getSelectedOptions(committeeFilter.state),\r\n      sortFilter.state,\r\n    ],\r\n    null\r\n  );\r\n  useDocumentTitle(`Search - ${searchQuery}`);\r\n  const history = useHistory();\r\n\r\n  const onSearchQueryChange = (e, { value }) => {\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  const prevCommitteeRef = React.useRef({});\r\n  const prevDateRangeRef = React.useRef({});\r\n  const prevSortRef = React.useRef({});\r\n  const prevSearchRef = React.useRef(query);\r\n\r\n  // memoizedHandlePopupClose is a callback for when one of the FilterPopups in EventsFilterContainer closes.\r\n  // It will perform filtering, depending on whether any of filter state or the searchQuery have changed.\r\n  const memoizedHandlePopupClose = useCallback(() => {\r\n    if (\r\n      !committeeFilter.isSameState(prevCommitteeRef.current) ||\r\n      !dateRangeFilter.isSameState(prevDateRangeRef.current) ||\r\n      !sortFilter.isSameState(prevSortRef.current) ||\r\n      prevSearchRef.current !== searchQuery\r\n    ) {\r\n      window.scroll(0, 0);\r\n      // update args of api function so that custom hook useDataApi will fetch new data\r\n      setFunctionArgs(() => {\r\n        const newFunctionArgs = [\r\n          searchQuery,\r\n          dateRangeFilter.state,\r\n          getSelectedOptions(committeeFilter.state),\r\n          sortFilter.state,\r\n        ];\r\n        prevCommitteeRef.current = committeeFilter.state;\r\n        prevDateRangeRef.current = dateRangeFilter.state;\r\n        prevSortRef.current = sortFilter.state;\r\n        prevSearchRef.current = searchQuery;\r\n        return newFunctionArgs;\r\n      });\r\n      history.replace({\r\n        pathname: '/search',\r\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\r\n      });\r\n    }\r\n  }, [\r\n    searchQuery,\r\n    committeeFilter,\r\n    dateRangeFilter,\r\n    sortFilter,\r\n    setFunctionArgs,\r\n    history,\r\n  ]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    memoizedHandlePopupClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FiltersSection>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group widths='2'>\r\n            <Form.Input\r\n              placeholder='Enter a keyword to search meeting transcripts'\r\n              action={\r\n                <Button type='submit' primary>\r\n                  Search\r\n                </Button>\r\n              }\r\n              value={searchQuery}\r\n              onChange={onSearchQueryChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <EventsFilterContainer\r\n          filters={[committeeFilter, dateRangeFilter, sortFilter]}\r\n          handlePopupClose={memoizedHandlePopupClose}\r\n          sortOptions={[\r\n            { by: 'value', order: 'desc', label: 'Most relevant' },\r\n            { by: 'date', order: 'desc', label: 'Newest first' },\r\n            { by: 'date', order: 'asc', label: 'Oldest first' },\r\n          ]}\r\n        />\r\n      </FiltersSection>\r\n      <Results>\r\n        <DataApiContainer apiState={apiState}>\r\n          {apiState.data && (\r\n            <ResultCount>{apiState.data.length} results</ResultCount>\r\n          )}\r\n          <EventCardGroup\r\n            events={apiState.data}\r\n            query={prevSearchRef.current}\r\n          />\r\n        </DataApiContainer>\r\n      </Results>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventCardGroupContainer;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport queryString from \"query-string\";\r\nimport EventCardGroup from \"../containers/EventCardGroup\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst Search = ({ location }) => {\r\n  const { q } = queryString.parse(location.search);\r\n  let query = q ? q.trim().replace(/\\+/g, ' ') : '';\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <EventCardGroup\r\n            query={query}\r\n          />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","function hhmmss(sec_num) {\r\n  sec_num = parseInt(sec_num, 10); // don't forget the second param\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n  var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n  if (hours < 10) {\r\n    hours = \"0\" + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  return hours + \":\" + minutes + \":\" + seconds;\r\n}\r\n\r\nexport default hhmmss;\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List } from \"react-virtualized\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport styled from \"@emotion/styled\";\r\nimport hhmmss from \"../utils/hhmmss\";\r\n\r\nconst TranscriptItem = styled.div({\r\n  // Increase spacing around each transcript item\r\n  margin: \"1em 0.2em\"\r\n});\r\n\r\nconst TranscriptItemText = styled.div({\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5em\"\r\n});\r\n\r\nconst TimeStamp = styled.div({\r\n  // Increase vertical spacing between TranscriptItemText and TimeStamp\r\n  marginTop: \"10px\",\r\n  \".ui.button\": {\r\n    // Make timestamp button's padding smaller\r\n    padding: \"0.8em !important\"\r\n  }\r\n});\r\n\r\nconst EventTranscriptSearch = ({\r\n  // The search transcript query\r\n  searchText,\r\n  // The list of timestamped text that contains the searchText\r\n  transcript,\r\n  // Callback to change the event video's current time to the start_time of a timestamped text\r\n  handleSeek\r\n}) => {\r\n  // Stores the CellMeasurer's measurements of all transcript items\r\n  const cache = new CellMeasurerCache({\r\n    // The width of transcript items are the same\r\n    fixedWidth: true,\r\n    // The height of transcript items are variable, with the default height being 100px\r\n    defaultHeight: 100,\r\n  });\r\n\r\n  const onResize = () => {\r\n    // Need to clear all transcript items' measurements on document resize\r\n    cache.clearAll();\r\n  };\r\n\r\n  const Row = ({ index, parent, key, style }) => (\r\n    // Row is responsible for rendering a transcript item\r\n    // CellMeasurer will dynamically determine the height of a transcript item,\r\n    // or use the cache to determine the height\r\n    <CellMeasurer\r\n      key={key}\r\n      cache={cache}\r\n      parent={parent}\r\n      columnIndex={0}\r\n      rowIndex={index}\r\n    >\r\n      <div style={style}>\r\n        <TranscriptItem>\r\n          <TranscriptItemText>\r\n            <Highlighter\r\n              searchWords={[searchText]}\r\n              autoEscape={true}\r\n              textToHighlight={transcript[index].text}\r\n            />\r\n          </TranscriptItemText>\r\n          <TimeStamp>\r\n            <Button size=\"tiny\" onClick={() => handleSeek(transcript[index].start_time)}>\r\n              <Icon name=\"play\" />\r\n              {hhmmss(transcript[index].start_time)}\r\n            </Button>\r\n          </TimeStamp>\r\n        </TranscriptItem>\r\n      </div>\r\n    </CellMeasurer>\r\n  );\r\n\r\n  return (\r\n    <AutoSizer onResize={onResize}>\r\n      {({ width, height }) => (\r\n        <List\r\n          deferredMeasurementCache={cache}\r\n          height={height}\r\n          rowCount={transcript.length}\r\n          rowHeight={cache.rowHeight}\r\n          rowRenderer={Row}\r\n          scrollToIndex={0}\r\n          style={{ willChange: \"\" }}\r\n          width={width}\r\n        />\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n}\r\n\r\nexport default React.memo(EventTranscriptSearch);\r\n","const isSubstring = (string = \"\", substring = \"\") =>\r\n  string.toLowerCase().indexOf(substring.toLowerCase()) !== -1;\r\n\r\nexport default isSubstring;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport EventTranscriptSearch from \"./EventTranscriptSearch\";\r\nimport isSubstring from \"../utils/isSubstring\";\r\n\r\nconst StyledEventSearch = styled.div({\r\n  margin: \"1em 0\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  boxSizing: \"border-box\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    width: \"38%\",\r\n    margin: \"0 0 0 20px\"\r\n  }\r\n});\r\n\r\nconst Subheader = styled.h2({ width: \"100%\" });\r\n\r\nconst SearchInput = styled(Input)({\r\n  width: \"100%\",\r\n  fontSize: \"16px !important\",\r\n  lineHeight: \"1.5 !important\"\r\n});\r\n\r\nconst SearchResultCount = styled.span({\r\n  display: \"block\",\r\n  marginTop: \"1em\",\r\n  color: \"grey\",\r\n  paddingLeft: \"15px\"\r\n});\r\n\r\nconst TranscriptSearchHelpMessage = styled.span({\r\n  display: \"block\",\r\n  marginTop: \"1em\",\r\n  fontSize: \"16px !important\",\r\n  lineHeight: \"1.5 !important\",\r\n  paddingLeft: \"15px\"\r\n});\r\n\r\nconst SearchResultsWrapper = styled.div({\r\n  marginTop: \"1em\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius: \"0.28rem\",\r\n  boxSizing: \"border-box\",\r\n  minHeight: \"calc(.5625 * 90vw)\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    flex: \"1 1 auto\",\r\n    minHeight: \"0\"\r\n  }\r\n});\r\n\r\nconst EventSearch = ({\r\n  transcript,\r\n  handleSeek,\r\n  query\r\n}) => {\r\n  const [transcriptSearchText, setTranscriptSearchText] = React.useState(query);\r\n\r\n  const handleTranscriptSearch = (e, { value }) => {\r\n    setTranscriptSearchText(value);\r\n  };\r\n\r\n  const transcriptItems = transcript.filter(({ text }) => isSubstring(text, transcriptSearchText));\r\n\r\n  return (\r\n    <StyledEventSearch>\r\n      <Subheader>Search Transcript</Subheader>\r\n      <SearchInput\r\n        onChange={handleTranscriptSearch}\r\n        value={transcriptSearchText}\r\n        placeholder=\"Search transcript\"\r\n      />\r\n      {transcriptSearchText !== \"\" && (\r\n        <SearchResultCount>\r\n          {transcriptItems.length} results\r\n        </SearchResultCount>\r\n      )}\r\n      {transcriptSearchText !== \"\" && transcriptItems.length > 0 && (\r\n        <SearchResultsWrapper>\r\n          <EventTranscriptSearch\r\n            searchText={transcriptSearchText}\r\n            transcript={transcriptItems}\r\n            handleSeek={handleSeek}\r\n          />\r\n        </SearchResultsWrapper>\r\n      )}\r\n      {transcriptSearchText === \"\" && (\r\n        <TranscriptSearchHelpMessage>\r\n          Enter a search term to get results.\r\n        </TranscriptSearchHelpMessage>\r\n      )}\r\n    </StyledEventSearch>\r\n  );\r\n};\r\n\r\nexport default EventSearch;\r\n","import React, { forwardRef, Fragment, useReducer, useRef, useState } from 'react';\r\nimport { Button, Form, Icon, Input, Modal, Ref } from 'semantic-ui-react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nconst TimePointInput = styled(Input)(props => ({\r\n  // add black line below time point input\r\n  borderBottomColor: props.disabled ? 'white' : 'black',\r\n  borderBottomStyle: 'solid',\r\n  borderBottomWidth: '1.5px',\r\n  width: '10em'\r\n}));\r\n\r\nconst ShareVideoModal = styled(Modal)({\r\n  // move close icon inside modal\r\n  'i.close': {\r\n    top: '0 !important',\r\n    right: '0 !important',\r\n    color: 'black !important'\r\n  }\r\n});\r\n\r\nconst ButtonWithRef = forwardRef((props, ref) => (\r\n  // Forward a React reference into a button.\r\n  // Needed in order to provide additional styling to share button,\r\n  // that serves as a trigger to open a modal\r\n  <Ref innerRef={ref}>\r\n    <Button {...props} />\r\n  </Ref>\r\n));\r\n\r\nconst ShareButton = styled(ButtonWithRef)({\r\n  backgroundColor: 'white !important',\r\n  'i.share': {\r\n    // Increase the distance share icon and share text\r\n    paddingRight: '1.5em'\r\n  }\r\n});\r\n\r\n// In anticipation of other buttons to be added next to share button,\r\n// make this inline-block so that they all appear on the same horizontal line.\r\nconst ModalMountNode = styled.div({\r\n  display: 'inline-block'\r\n});\r\n\r\n/**\r\n *\r\n * @param {string} timePointStr The str representation of a time point. e.g. 1:23:15\r\n * @return {(int|NaN)} The time point in total seconds. Or NaN, if the str contains\r\n * any non-digits.\r\n */\r\nconst toSeconds = (timePointStr) => {\r\n  const nums = timePointStr.trim().split(':').reverse();\r\n  let totalSeconds = 0;\r\n  nums.forEach((num, i) => {\r\n    num = num.trim();\r\n    if (num) {\r\n      if (isNaN(num) || num.includes('-')) {\r\n        // num is not a number, or is negative\r\n        totalSeconds += NaN;\r\n      } else {\r\n        totalSeconds += parseFloat(num) * Math.pow(60, i);\r\n      }\r\n    }\r\n  });\r\n  if (totalSeconds) {\r\n    totalSeconds = Math.floor(totalSeconds);\r\n  }\r\n  return totalSeconds;\r\n};\r\n\r\n/**\r\n *\r\n * @param {(int|NaN)} totalSeconds The total number of seconds of a time point.\r\n * @return {string} The time point str. e.g. 1:23:15, or `INVALID TIME POINT` if totalSeconds is not a number.\r\n */\r\nconst toTimePointStr = (totalSeconds) => {\r\n  if (isNaN(totalSeconds)) {\r\n    return 'INVALID TIME POINT';\r\n  }\r\n\r\n  totalSeconds = Math.floor(parseFloat(totalSeconds));\r\n\r\n  let hours = Math.floor(totalSeconds / 3600);\r\n  let minutes = Math.floor((totalSeconds - (hours * 3600)) / 60);\r\n  let seconds = totalSeconds - (hours * 3600) - (minutes * 60);\r\n\r\n  if (seconds < 10) {\r\n    seconds = `0${seconds}`;\r\n  }\r\n  if (hours > 0 && minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  let timePointStr = `${minutes}:${seconds}`;\r\n  if (hours) {\r\n    timePointStr = `${hours}:${timePointStr}`;\r\n  }\r\n\r\n  return timePointStr;\r\n};\r\n\r\nconst initialTimePoint = {\r\n  // The time point str\r\n  value: '',\r\n  // Whether the user can enter a value to the time point input html element\r\n  isDisabled: false,\r\n  // Whether value(in seconds) is added to the share link url\r\n  isActive: false\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} timePoint The time point state.\r\n * @param {string} timePoint.value\r\n * @param {boolean} timePoint.isDisabled\r\n * @param {boolean} timePoint.isActive\r\n * @param {Object} action The action to change the time point state.\r\n * @param {string} action.type The str description of the action.\r\n * @param {Object} [action.payload] The action's data.\r\n * @return {Object} New time point state.\r\n */\r\nconst timePointReducer = (timePoint, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_VALUE':\r\n      return { ...timePoint, value: action.payload.value };\r\n    case 'VALIDATE_VALUE':\r\n      const newValue = toTimePointStr(toSeconds(timePoint.value));\r\n      return { ...timePoint, value: newValue };\r\n    case 'UPDATE_ISDISABLED':\r\n      return { ...timePoint, isDisabled: action.payload.isDisabled };\r\n    case 'UPDATE_ISACTIVE':\r\n      return { ...timePoint, isActive: action.payload.isActive };\r\n    default:\r\n      return timePoint;\r\n  }\r\n};\r\n\r\nconst EventShareVideo = ({\r\n  videoPlayerRef\r\n}) => {\r\n  // A reference to the html element where the modal is mounted\r\n  const mountNodeRef = useRef();\r\n  // A reference to the share link url html element\r\n  const shareLinkRef = useRef();\r\n  // A reference to the time point input html element\r\n  const timePointRef = useRef();\r\n  // Get the location object that represents the current URL\r\n  const location = useLocation();\r\n  // open is a React state, whether the modal is open. setOpen is the function to update open\r\n  const [open, setOpen] = useState(false);\r\n  // timePoint is a React state. dispatch function is used to send an action to timePointReducer\r\n  // to change the timePoint state\r\n  const [timePoint, dispatch] = useReducer(timePointReducer, initialTimePoint);\r\n\r\n  // Callback to handle opening of modal\r\n  const handleOpen = () => {\r\n    let currentTime;\r\n    if (videoPlayerRef.current) {\r\n      const { player } = videoPlayerRef.current.getState();\r\n      currentTime = player.readyState === 4 ? player.currentTime : 0;\r\n    } else {\r\n      currentTime = 0;\r\n    }\r\n    // initially, the time point value is the video's current time\r\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: toTimePointStr(currentTime) } });\r\n    // initially, the user can enter a value for the time point input html element\r\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: false } });\r\n    // initially, the time point value(in seconds) is not added to the share link url\r\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: false } });\r\n    setOpen(true);\r\n  };\r\n\r\n  // Callback to handle closing of modal\r\n  const handleClose = () => {\r\n    timePointRef.current.inputRef.current.removeEventListener('blur', validateTimePointCb);\r\n    setOpen(false);\r\n  };\r\n\r\n  // Callback to handle `Start at` checkbox changes\r\n  const onTimePointIsActiveChange = (e, { checked }) => {\r\n    dispatch({ type: 'VALIDATE_VALUE' });\r\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: !checked } });\r\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: checked } });\r\n  };\r\n\r\n  // Callback to handle copy share link url button click\r\n  const onCopyShareLink = () => {\r\n    // select the content of shareLinkRef, which is the share link url\r\n    shareLinkRef.current.select();\r\n    // copy the content to the clipboard\r\n    document.execCommand('copy');\r\n  };\r\n\r\n  // Get the share link url\r\n  const getVideoShareLink = () => {\r\n    let totalSeconds = toSeconds(timePoint.value);\r\n    let videoShareLink = `${document.location.href.split('#')[0]}#${location.pathname}`;\r\n    return (timePoint.isActive && totalSeconds) ?\r\n      `${videoShareLink}?t=${totalSeconds}` :\r\n      `${videoShareLink}`;\r\n  };\r\n\r\n  // Callback to handle time point value changes\r\n  const onTimePointValueChange = (e, { value }) => {\r\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: value } });\r\n  };\r\n\r\n  // Callback to handle when the user press enter while the time point input html element is in focus,\r\n  // or when the time point input html element becomes out of focus\r\n  const validateTimePointCb = () => {\r\n    dispatch({ type: 'VALIDATE_VALUE' });\r\n  };\r\n\r\n  // Callback to handle when the modal is mounted\r\n  const onModalMount = () => {\r\n    // Add an event listener for when the time point input html element becomes out of focus\r\n    timePointRef.current.inputRef.current.addEventListener('blur', validateTimePointCb);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ShareVideoModal\r\n        closeIcon\r\n        trigger={\r\n          <ShareButton compact icon onClick={handleOpen}>\r\n            <Icon name='share' />\r\n            SHARE\r\n          </ShareButton>\r\n        }\r\n        open={open}\r\n        onClose={handleClose}\r\n        mountNode={mountNodeRef.current}\r\n        onMount={onModalMount}\r\n        size='small'\r\n      >\r\n        <Modal.Header>Share</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            fluid\r\n            action={<Button primary content='Copy' onClick={onCopyShareLink} />}\r\n            ref={shareLinkRef}\r\n            value={getVideoShareLink()} />\r\n          <br />\r\n          <Form onSubmit={validateTimePointCb}>\r\n            <Form.Group>\r\n              <Form.Checkbox\r\n                label={`Start at`}\r\n                checked={timePoint.isActive}\r\n                onChange={onTimePointIsActiveChange} />\r\n              <TimePointInput\r\n                disabled={timePoint.isDisabled}\r\n                transparent\r\n                value={timePoint.value}\r\n                onChange={onTimePointValueChange}\r\n                ref={timePointRef} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n      </ShareVideoModal>\r\n      <ModalMountNode ref={mountNodeRef} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EventShareVideo;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MinuteList = styled.ol({\r\n  listStylePosition: \"outside\",\r\n  paddingLeft: \"1.5em\"\r\n});\r\n\r\nconst MinuteTitle = styled.div({\r\n  fontSize: \"1em\",\r\n  fontWeight: \"500\"\r\n});\r\n\r\nconst MinuteDescription = styled.div({\r\n  fontSize: \"0.95em\"\r\n});\r\n\r\nconst FileList = styled.ul({\r\n  listStylePosition: \"outside\",\r\n  listStyleType: \"disc\",\r\n  paddingLeft: \"2em\"\r\n});\r\n\r\nconst EventMinutes = ({\r\n  minutes,\r\n  scPageUrl\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>Minutes</h3>\r\n      <MinuteList>\r\n        {minutes.map(({ minutes_item }) => (\r\n          <li key={minutes_item.id}>\r\n            <MinuteTitle>{minutes_item.matter ? minutes_item.matter : minutes_item.name}</MinuteTitle>\r\n            {minutes_item.matter && minutes_item.matter !== minutes_item.name && <MinuteDescription>{minutes_item.name}</MinuteDescription>}\r\n            {minutes_item.file.length > 0 && <FileList>\r\n              {minutes_item.file.map(({ id, name, uri }) => (\r\n                <li key={id}>\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={uri}>{name}</a>\r\n                </li>\r\n              ))}\r\n            </FileList>}\r\n          </li>\r\n        ))}\r\n      </MinuteList>\r\n      <h3>Links</h3>\r\n      <a href={scPageUrl}>Seattle Channel Event Page</a>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventMinutes;","import React from \"react\";\r\nimport { Button, Divider, Header, Icon } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport hhmmss from \"../utils/hhmmss\";\r\n\r\nconst TranscriptItem = styled.div(props => ({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  // Make vertical spacing between transcript items of timestamped-speaker-turns format a little\r\n  // bit smaller than other transcript formats.\r\n  margin: props.isSpeakerTurnFormat ? \"2.5em 0.2em\" : \"3em 0.2em\"\r\n}));\r\n\r\nconst TranscriptItemText = styled.div({\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5em\",\r\n  \"@media(min-width:1000px)\": {\r\n    // For screen width >= 1000px\r\n    // Decrease text's width\r\n    width: \"85%\",\r\n    // Make it appear after TimeStamp\r\n    order: \"1\"\r\n  }\r\n});\r\n\r\nconst TimeStamp = styled.div({\r\n  width: \"100%\",\r\n  // Increase the vertical spacing between TranscriptItemText and Timestamp\r\n  marginTop: \"10px\",\r\n  \"@media(min-width:1000px)\": {\r\n    // For screen width >= 1000px\r\n    // Decrease timestamp's width\r\n    width: \"15%\",\r\n    // Make it appear before TranscriptItemText\r\n    order: \"0\",\r\n    marginTop: \"0\"\r\n  }\r\n});\r\n\r\n/**\r\n * \r\n * @param {Object} transcriptItem The transcript item.\r\n * @param {String} transcriptItem.text\r\n * @param {Number} transcriptItem.start_time\r\n * @param {Number} transcriptItem.end_time\r\n * @param {String} [transcriptItem.speaker]\r\n * @param {Boolean} isSpeakerTurnFormat Whether transcriptItem is from timestamped-speaker-turns format.\r\n * @param {Function} handleSeek Callback to change the event video's current time to the start_time.\r\n * @return The JSX of the transcript item.\r\n */\r\nconst transcriptItemRenderer = (transcriptItem, isSpeakerTurnFormat, handleSeek) => {\r\n  return (\r\n    <div key={transcriptItem.start_time}>\r\n      {(!!transcriptItem.speaker) &&\r\n        <Divider horizontal>\r\n          <Header as='h3'>\r\n            {transcriptItem.speaker}\r\n          </Header>\r\n        </Divider>}\r\n      <TranscriptItem isSpeakerTurnFormat={isSpeakerTurnFormat}>\r\n        <TranscriptItemText>\r\n          {transcriptItem.text}\r\n        </TranscriptItemText>\r\n        <TimeStamp>\r\n          <Button size=\"tiny\" onClick={() => handleSeek(transcriptItem.start_time)}>\r\n            <Icon name=\"play\" />\r\n            {hhmmss(transcriptItem.start_time)}\r\n          </Button>\r\n        </TimeStamp>\r\n      </TranscriptItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EventTranscript = ({\r\n  handleSeek,\r\n  transcript\r\n}) => {\r\n  // List of timestamped texts\r\n  let transcriptItems = [];\r\n  const isSpeakerTurnFormat = transcript.format.includes(\"speaker-turns\");\r\n  if (isSpeakerTurnFormat) {\r\n    transcript.data.forEach(speakerTurn => {\r\n      // Add speaker field for first timestamped sentence\r\n      speakerTurn.data[0].speaker = speakerTurn.speaker || \"New Speaker\";\r\n      transcriptItems.push(...speakerTurn.data);\r\n    });\r\n  } else {\r\n    transcriptItems = transcript.data;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        transcriptItems.map(transcriptItem => {\r\n          return transcriptItemRenderer(\r\n            transcriptItem,\r\n            transcript.format.includes(\"speaker-turns\"),\r\n            handleSeek\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventTranscript);\r\n","import React from 'react'\r\nimport { Table } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst Headers = [\r\n  {\r\n    accessor: 'matter',\r\n    text: 'Matter',\r\n    width: '2'\r\n  },\r\n  {\r\n    accessor: 'decision',\r\n    text: 'Decision',\r\n    width: '1'\r\n  },\r\n  {\r\n    accessor: 'name',\r\n    text: 'Name',\r\n    width: '6'\r\n  },\r\n  {\r\n    accessor: 'votingRecords',\r\n    text: 'Vote',\r\n    width: '5'\r\n  }\r\n]\r\n\r\nconst MiniTable = styled('div')({\r\n  display: 'flex'\r\n});\r\n\r\nconst Person = styled('div')({\r\n  width: '70%'\r\n});\r\n\r\nconst Decision = styled('div')({\r\n  width: '30%'\r\n});\r\n\r\nconst StyledTableHeader = styled(Table.Header)({\r\n  '@media(max-width:767px)': {\r\n    display: 'none !important'\r\n  }\r\n});\r\n\r\n\r\nconst VotingTable = ({ votingData, isPerson }) => (\r\n  <Table striped>\r\n    <StyledTableHeader>\r\n      <Table.Row>\r\n        {Headers.map(headerMetaData => (<Table.HeaderCell\r\n          key={headerMetaData.text}>{headerMetaData.text}\r\n          </Table.HeaderCell> \r\n        ))}\r\n        {/* If we are rendering votes for a person, we want to link to the event */}\r\n        {isPerson && <Table.HeaderCell key={'Event'}>Event</Table.HeaderCell>}\r\n      </Table.Row>\r\n    </StyledTableHeader>\r\n    <Table.Body>\r\n      {votingData.map(votingDatum => (\r\n        <Table.Row key={votingDatum.id}>\r\n          {Headers.map(headerMetaData => {\r\n            if (headerMetaData.accessor !== 'votingRecords') {\r\n              return (\r\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\r\n                  {votingDatum[headerMetaData.accessor]}\r\n                </Table.Cell>\r\n              )\r\n            }\r\n            if (votingDatum.formattedIndividualVotes) {\r\n              return (\r\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\r\n                  {votingDatum.formattedIndividualVotes.map(record => {\r\n                    return (\r\n                      <MiniTable key={record.full_name}>\r\n                        <Person>\r\n                          <Link to={`/people/${record.person_id}`}>\r\n                            {record.full_name}\r\n                          </Link>\r\n                        </Person>\r\n                        <Decision>\r\n                          {record.decision}\r\n                        </Decision>\r\n                      </MiniTable>\r\n                    )\r\n                  })}\r\n                </Table.Cell>\r\n              )\r\n            } else {\r\n              return (\r\n                <React.Fragment key={headerMetaData.accessor}>\r\n                  <Table.Cell singleLine={true}>\r\n                    {votingDatum.voteForPerson}\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    <Link to={`/events/${votingDatum.eventId}`}>\r\n                      <span>{votingDatum.body_name}</span>\r\n                    </Link>\r\n                    <div>{getDateTime(votingDatum.eventDate)}</div>\r\n                  </Table.Cell>\r\n                </React.Fragment>\r\n              )\r\n            }\r\n          })}\r\n        </Table.Row>\r\n      ))}\r\n    </Table.Body>\r\n  </Table>\r\n)\r\n\r\nexport default VotingTable\r\n","import React from \"react\";\r\nimport { Menu, Sticky } from \"semantic-ui-react\";\r\nimport EventMinutes from \"./EventMinutes\";\r\nimport EventTranscript from \"./EventTranscript\";\r\nimport VotingTable from \"./VotingTable\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledEventTabs = styled.div({\r\n  margin: \"1em 0\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5\",\r\n  \"a.item\": {\r\n    fontSize: \"1.3em !important\"\r\n  }\r\n});\r\n\r\nconst StyledEventMenu = styled(Menu)({\r\n  borderBottom: \"0 !important\",\r\n  marginBottom: \"1em !important\",\r\n  paddingTop: \"1em !important\",\r\n  backgroundColor: \"white !important\",\r\n  zIndex: \"0 !important\",\r\n  width: \"100%\"\r\n});\r\n\r\nconst EventTabs = ({\r\n  minutes,\r\n  scPageUrl,\r\n  transcript,\r\n  votes,\r\n  handleSeek,\r\n  topOffset,\r\n  mediaQueriesMatches\r\n}) => {\r\n  // Which menu item is visible\r\n  const [activeItem, setActiveItem] = React.useState(\"details\");\r\n  // A React reference to StyledEventTabs\r\n  const contextRef = React.useRef(null);\r\n\r\n  // Callback to handle menu item click event\r\n  const handleItemClick = (e, { name }) => {\r\n    const domRect = contextRef.current.getBoundingClientRect();\r\n    if (domRect.top < 0) {\r\n      // If the top of contextRef is not visible, scroll so that the top of contextRef\r\n      // is aligned with the top of viewport.\r\n      contextRef.current.scrollIntoView(true);\r\n      if (!mediaQueriesMatches) {\r\n        // This is the case where video is fixed to the top and Menu is below the video.\r\n        // Need to scroll upward by video's height so that the, for example, first minute is visible\r\n        // below the menu.\r\n        window.scrollBy(0, -topOffset);\r\n      }\r\n    }\r\n    setActiveItem(name);\r\n  };\r\n\r\n  return (\r\n    <StyledEventTabs ref={contextRef}>\r\n      <Sticky\r\n        context={contextRef}\r\n        offset={topOffset}\r\n        styleElement={{ zIndex: \"1\" }}\r\n      >\r\n        <StyledEventMenu secondary pointing>\r\n          <Menu.Item active={activeItem === \"details\"} name=\"details\" onClick={handleItemClick} />\r\n          <Menu.Item active={activeItem === \"transcript\"} name=\"transcript\" onClick={handleItemClick} />\r\n          <Menu.Item active={activeItem === \"votes\"} name=\"votes\" onClick={handleItemClick} />\r\n        </StyledEventMenu>\r\n      </Sticky>\r\n      {{\r\n        details: <EventMinutes minutes={minutes} scPageUrl={scPageUrl} />,\r\n        transcript: <EventTranscript\r\n          handleSeek={handleSeek}\r\n          transcript={transcript}\r\n        />,\r\n        votes: votes.length ? <VotingTable votingData={votes} /> : <div>No votes found for this event.</div>\r\n      }[activeItem]}\r\n    </StyledEventTabs>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventTabs);\r\n","import { useState, useEffect } from 'react';\r\n/**\r\n * \r\n * @param {string} mediaQuery The string representing the media query to parse, e.g. (min-width:500px)\r\n * @return {boolean} A Boolean that is true if the document currently matches the media query, or false if not.\r\n */\r\nfunction useMatchMedia(mediaQuery) {\r\n  const [matches, setMatches] = useState(() => matchMedia(mediaQuery).matches);\r\n\r\n  useEffect(() => {\r\n    const mediaQueryList = matchMedia(mediaQuery);\r\n\r\n    const onChange = (event) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    mediaQueryList.addListener(onChange);\r\n\r\n    return(() =>{\r\n      mediaQueryList.removeListener(onChange);\r\n    })\r\n  }, [mediaQuery]);\r\n\r\n  return matches;\r\n}\r\n\r\nexport default useMatchMedia;","import React from \"react\";\r\nimport EventSearch from \"./EventSearch\";\r\nimport EventShareVideo from \"./EventShareVideo\";\r\nimport EventTabs from \"./EventTabs\";\r\nimport { Segment, Visibility } from \"semantic-ui-react\";\r\nimport {\r\n  Player,\r\n  BigPlayButton,\r\n  ControlBar,\r\n  PlaybackRateMenuButton,\r\n  VolumeMenuButton\r\n} from \"video-react\";\r\nimport useMatchMedia from \"../hooks/useMatchMedia\";\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\nimport \"video-react/dist/video-react.css\";\r\n\r\nconst StyledEvent = styled.div({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-between\"\r\n});\r\n\r\nconst Header = styled.div({\r\n  width: \"100%\",\r\n  margin: \"1em 0\"\r\n});\r\n\r\nconst EventDate = styled.span({\r\n  margin: \"0.1em 0\",\r\n  color: \"grey\",\r\n  fontWeight: \"400\"\r\n});\r\n\r\nconst InfoSegment = styled(Segment.Inline)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  width: \"100%\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    width: \"59%\"\r\n  }\r\n});\r\n\r\nconst FixedSentinel = styled.div({\r\n  position: \"absolute\",\r\n  left: \"0\",\r\n  right: \"0\",\r\n  visibility: \"hidden\",\r\n  height: \"90px\",\r\n  backgroundColor: \"yellow\"\r\n});\r\n\r\nconst DummyContainer = styled.div(props => ({\r\n  position: \"relative\",\r\n  display: \"none\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    display: props.isFixed ? \"block\" : \"none\",\r\n    width: \"59%\"\r\n  }\r\n}));\r\n\r\nconst DummyDiv = styled.div({\r\n  position: \"absolute\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  backgroundColor: \"black\",\r\n  height: \"100%\",\r\n  width: \"100%\"\r\n});\r\n\r\nconst PlayerCloseButton = styled.button(props => ({\r\n  position: \"absolute\",\r\n  top: \"5px\",\r\n  right: \"5px\",\r\n  opacity: \"0.5\",\r\n  borderRadius: \"50%\",\r\n  zIndex: 10,\r\n  visibility: props.isFixed ? \"visible\" : \"hidden\",\r\n  \"&:hover\": { opacity: 0.9 }\r\n}));\r\n\r\nconst PlayerContainer = styled.div(props => ({\r\n  width: \"100%\",\r\n  position: \"sticky\",\r\n  top: \"0\",\r\n  zIndex: \"2\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    position: props.isFixed ? \"fixed\" : \"relative\",\r\n    width: props.isFixed ? \"20vw\" : \"59%\",\r\n    right: \"0\"\r\n  }\r\n}));\r\n\r\nconst PlayerWrapper = styled.div({\r\n  position: \"relative\",\r\n  paddingTop: \"56.25%\"\r\n});\r\n\r\nconst Event = ({\r\n  id,\r\n  eventData,\r\n  query,\r\n  videoTimePoint\r\n}) => {\r\n  const {\r\n    name: title,\r\n    date,\r\n    minutes,\r\n    scPageUrl,\r\n    videoUrl,\r\n    transcript,\r\n    votes\r\n  } = eventData;\r\n  const videoPlayerRef = React.useRef(null);\r\n  //isFixed is a boolean, whether the video is fixed to the top-right\r\n  const [isFixed, setIsFixed] = React.useState(false);\r\n  //mediaQueriesMatches is a boolean, whether the video can be fixed to the top-right\r\n  const mediaQueriesMatches = useMatchMedia(\"(min-aspect-ratio:5/4), (min-width:1200px)\");\r\n  //videoOffSetHeight is used to determine vertical position of event tabs menu when it is sticky\r\n  const [videoOffSetHeight, setVideoOffsetHeight] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    //html5 video element\r\n    const video = videoPlayerRef.current.video.video;\r\n    //disable pip button for chrome, can't disable for firefox.\r\n    video.disablePictureInPicture = true;\r\n    setVideoOffsetHeight(video.offsetHeight);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const onResize = () => {\r\n      const video = videoPlayerRef.current.video.video;\r\n      setVideoOffsetHeight(video.offsetHeight);\r\n    };\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleSeek = seconds => {\r\n    videoPlayerRef.current.seek(parseFloat(seconds));\r\n    const { player } = videoPlayerRef.current.getState();\r\n    // if video is paused or has not started, then play video\r\n    if (player.paused || !player.hasStarted) {\r\n      videoPlayerRef.current.play();\r\n    }\r\n  };\r\n\r\n  const onBottomPassed = () => {\r\n    //bottom of FixedSentinel is not visible within viewport.\r\n    //and video can be fixed to top-right\r\n    if (mediaQueriesMatches) {\r\n      setIsFixed(true); //video is fixed to top-right\r\n    }\r\n  };\r\n\r\n  const onBottomPassedReverse = () => {\r\n    //bottom of FixedSentinel is visible within viewport\r\n    //and video can be fixed to top-right\r\n    if (mediaQueriesMatches) {\r\n      setIsFixed(false); //video is not fixed to top-right\r\n    }\r\n  };\r\n\r\n  const onPlayerCloseButtonClick = () => {\r\n    // restore player to original size\r\n    setIsFixed(false);\r\n\r\n    // pause video\r\n    videoPlayerRef.current.pause();\r\n  }\r\n\r\n  const getTranscriptTimestampedText = () => {\r\n    if (transcript.format.includes(\"speaker-turns\")) {\r\n      // Flatten speaker turn blocks to timestamped sentences\r\n      let timestampedSentences = [];\r\n      transcript.data.forEach(speakerTurnBlock => {\r\n        timestampedSentences.push(...speakerTurnBlock.data);\r\n      });\r\n      return timestampedSentences;\r\n    }\r\n    // Return timestamped texts if transcript format is not `timestamped-speaker-turns`\r\n    return transcript.data;\r\n  };\r\n\r\n  return (\r\n    <StyledEvent>\r\n      <Header>\r\n        <h1>{title}</h1>\r\n      </Header>\r\n      <InfoSegment>\r\n        <EventDate>{getDateTime(date)}</EventDate>\r\n        <Segment.Inline>\r\n          <EventShareVideo videoPlayerRef={videoPlayerRef} />\r\n        </Segment.Inline>\r\n      </InfoSegment>\r\n      <DummyContainer isFixed={isFixed}>\r\n        <PlayerWrapper>\r\n          <DummyDiv />\r\n        </PlayerWrapper>\r\n      </DummyContainer>\r\n      <PlayerContainer isFixed={isFixed}>\r\n        <PlayerCloseButton onClick={onPlayerCloseButtonClick} isFixed={isFixed}>x</PlayerCloseButton>\r\n        <Player\r\n          fluid\r\n          aspectRatio='16:9'\r\n          preload={videoTimePoint ? 'auto' : 'metadata'}\r\n          ref={videoPlayerRef}\r\n          src={videoUrl}\r\n          startTime={videoTimePoint}>\r\n          <BigPlayButton position='center' />\r\n          <ControlBar autoHide={true}>\r\n            <VolumeMenuButton vertical />\r\n            <PlaybackRateMenuButton rates={[2, 1.5, 1, 0.75]} order={6.1} />\r\n          </ControlBar>\r\n        </Player>\r\n      </PlayerContainer>\r\n      <Visibility\r\n        once={false}\r\n        onBottomPassed={onBottomPassed}\r\n        onBottomPassedReverse={onBottomPassedReverse}\r\n      >\r\n        <FixedSentinel />\r\n      </Visibility>\r\n      <EventSearch\r\n        transcript={getTranscriptTimestampedText()}\r\n        handleSeek={handleSeek}\r\n        query={query}\r\n      />\r\n      <EventTabs\r\n        minutes={minutes}\r\n        scPageUrl={scPageUrl}\r\n        transcript={transcript}\r\n        votes={votes}\r\n        handleSeek={handleSeek}\r\n        topOffset={mediaQueriesMatches ? 0 : videoOffSetHeight} //vertical position of event tabs menu when it is sticky\r\n        mediaQueriesMatches={mediaQueriesMatches}\r\n      />\r\n    </StyledEvent>\r\n  );\r\n};\r\n\r\n\r\nexport default Event;\r\n","import React from \"react\";\r\nimport DataApiContainer from \"./DataApiContainer\";\r\nimport Event from \"../components/Event\";\r\nimport useDataApi from \"../hooks/useDataApi\";\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst EventContainer = ({ id, query, videoTimePoint }) => {\r\n  const [apiState] = useDataApi(\"getEventById\", [id], null);\r\n  useDocumentTitle(\r\n    apiState.data ? `${apiState.data.name} - ${getDateTime(apiState.data.date)}` : \"Loading...\"\r\n  );\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <Event\r\n        id={id}\r\n        eventData={apiState.data}\r\n        query={query}\r\n        videoTimePoint={videoTimePoint}\r\n      />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default EventContainer;\r\n","import React from \"react\";\r\nimport Event from \"../containers/Event\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport queryString from \"query-string\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst EventPage = ({ match, location }) => {\r\n  // The query parameters in the URL\r\n  const { q, t } = queryString.parse(location.search);\r\n\r\n  const parseQuery = () => {\r\n    // Get the search transcript query\r\n    let query = q ? q.trim().replace(/\\+/g, ' ') : '';\r\n    if (location.state) {\r\n      query = location.state.query || query;\r\n    }\r\n    return query;\r\n  }\r\n\r\n  const parseVideoTimePoint = () => {\r\n    // Get the video's starting time point\r\n    let videoTimePoint;\r\n    if (!t || isNaN(t)) {\r\n      videoTimePoint = 0;\r\n    } else {\r\n      videoTimePoint = Math.max(0, parseFloat(t));\r\n    }\r\n    return videoTimePoint;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <Event\r\n            id={match.params.id}\r\n            query={parseQuery()}\r\n            videoTimePoint={parseVideoTimePoint()} />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AllEvents from \"../containers/AllEvents\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst AllEventsPage = () => {\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <h2>All Events</h2>\r\n        <GeneralErrorBoundary>\r\n          <AllEvents />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AllEventsPage;\r\n","import React, { Fragment } from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst FlexWrapContainer = styled('div')({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n})\r\n\r\nconst Card = styled('div')({\r\n    width: '250px',\r\n    border: '1px solid #d4d4d5',\r\n    boxShadow: '0 1px 3px 0 #d4d4d5',\r\n    padding: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    borderRadius: '3px',\r\n    marginRight: '2rem',\r\n    cursor: 'pointer',\r\n    transition: '.4s all',\r\n    \":hover\": {\r\n        transform: 'scale(1.15)',\r\n    }\r\n})\r\n\r\nconst CardHeading = styled('h5')({\r\n    fontWeight: 600,\r\n    fontSize: '1.2rem'\r\n})\r\n\r\n\r\nconst PeopleCardGroup = ({ people, history }) => {\r\n    return (\r\n        <Fragment>\r\n            <h2>City Council Members</h2>\r\n            <FlexWrapContainer>\r\n                {people.map(({ full_name, email, id }) => (\r\n                    <Card\r\n                        key={full_name}\r\n                        onClick={() => history.push(`/people/${id}`)}>\r\n                        <CardHeading>{full_name}</CardHeading>\r\n                        <p>City Council Member</p>\r\n                        <a href={`mailto:${email}`}>{email}</a>\r\n                    </Card>\r\n                    )\r\n                )}\r\n            </FlexWrapContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(PeopleCardGroup)\r\n","import React from 'react';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport PeopleCardGroup from '../components/PeopleCardGroup';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst PeopleCardGroupContainer = () => {\r\n  const [apiState] = useDataApi('getAllPeople', null, null);\r\n  useDocumentTitle('City Council Members');\r\n\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <PeopleCardGroup people={apiState.data} />\r\n    </DataApiContainer>\r\n  );\r\n}\r\n\r\nexport default PeopleCardGroupContainer;","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PeopleCardGroupContainer from '../containers/PeopleCardGroupContainer';\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst Layout = styled(Container)({\r\n    minHeight: \"100vh\"\r\n});\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst ContentContainer = styled(Container)({\r\n    marginTop: \"2em !important\",\r\n    marginBottom: \"5em !important\"\r\n});\r\n\r\nconst People = () => {\r\n    return (\r\n        <Layout>\r\n            <ContentContainer>\r\n                <GeneralErrorBoundary>\r\n                    <PeopleCardGroupContainer />\r\n                </GeneralErrorBoundary>\r\n            </ContentContainer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default People;\r\n","import React, { useState }                       from 'react';\r\nimport { Checkbox, Form, Header, Grid, Segment } from 'semantic-ui-react';\r\nimport _                                         from 'lodash';\r\nimport VotingTable                               from './VotingTable';\r\n\r\nconst cssCheckbox = { marginRight: '0.5em' }\r\n\r\nconst Person = ({personHistory: {full_name, email, phone, website, votes}}) => {\r\n  // == Get unique vote cast types from votes list.\r\n  const votingOptions = _.compact(_.uniq(votes.map(vote => vote.voteForPerson)))\r\n  // == Selected votes for checkboxes.\r\n  const [selectedVoteFilters, setSelectedVoteFilters] = useState([])\r\n  // == Votes filtered to be displayed in table.\r\n  const [filteredVotes, setFilteredVotes] = useState(votes)\r\n\r\n  const onSelectedVoteFilterChange = (event, { label }) => {\r\n    // == Set filters\r\n    let selectedFilters = []\r\n    if (selectedVoteFilters.includes(label)) {\r\n      // == Filter was unchecked\r\n      selectedFilters = _.without(selectedVoteFilters, label)\r\n      setSelectedVoteFilters(selectedFilters)\r\n    } else {\r\n      // == Filter was checked.\r\n      selectedVoteFilters.push(label)\r\n      selectedFilters = selectedVoteFilters\r\n      setSelectedVoteFilters(selectedFilters)\r\n    }\r\n\r\n    // == Set table results\r\n    if (_.isEmpty(selectedFilters)) {\r\n      // == If no filters set, display all votes\r\n      setFilteredVotes(votes)\r\n    } else {\r\n      // == Otherwise filter them by the selected filters.\r\n      setFilteredVotes(_.filter(votes, vote => selectedFilters.includes(vote.voteForPerson)))\r\n    }\r\n  }\r\n\r\n  // == Make a checkbox for each vote cast type in the voting table.\r\n  const filterVotingOptions = votingOptions.map((votingOption, index) => <Checkbox style={cssCheckbox} key={index} label={votingOption} onChange={onSelectedVoteFilterChange} />)\r\n\r\n  return <React.Fragment>\r\n    <Header as=\"h1\">{full_name}</Header>\r\n    <Grid columns={1} stackable>\r\n      <Grid.Column>\r\n        <Segment>\r\n          <Header as=\"h2\">Contact information</Header>\r\n          <strong>Email:</strong> <a href={`mailto:${email}`}>{email}</a>\r\n          <div><strong>Phone:</strong> {phone}</div>\r\n          <div><strong>Website:</strong> <a target={'_blank'} rel=\"noopener noreferrer\" href={website}>{website}</a></div>\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Segment>\r\n          <Header as=\"h2\">Voting record</Header>\r\n          <Header as=\"h3\">Filter by vote cast</Header>\r\n          <Form>{ filterVotingOptions }</Form>\r\n          <VotingTable votingData={filteredVotes} isPerson={true} />\r\n         </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport Person from '../components/Person';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst PersonContainer = ({ match: { params: { id } } }) => {\r\n  const [apiState] = useDataApi('getVotesForPerson', [id], null);\r\n  useDocumentTitle(apiState.data ? apiState.data.full_name : 'Loading...');\r\n\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <Person personHistory={apiState.data} />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(PersonContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PersonContainer from \"../containers/PersonContainer\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst Layout = styled(Container)({\r\n    minHeight: \"100vh\"\r\n});\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst ContentContainer = styled(Container)({\r\n    marginTop: \"2em !important\",\r\n    marginBottom: \"5em !important\"\r\n});\r\n\r\nconst Person = () => {\r\n    return (\r\n        <Layout>\r\n            <ContentContainer>\r\n                <GeneralErrorBoundary>\r\n                    <PersonContainer />\r\n                </GeneralErrorBoundary>\r\n            </ContentContainer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport withTracker from \"./utils/withTracker\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Banner from \"./components/Banner\";\r\nimport Footer from \"./components/Footer\";\r\nimport GeneralErrorBoundary from \"./components/GeneralErrorBoundary\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport Event from \"./pages/Event\";\r\nimport AllEvents from \"./pages/AllEvents\";\r\nimport People from \"./pages/People\";\r\nimport Person from \"./pages/Person\";\r\n\r\n// Run Google Analytics\r\nReactGA.initialize(\"UA-145893191-1\");\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <GeneralErrorBoundary>\r\n      <Router basename=\"/\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={withTracker(Home)} />\r\n          <Route path=\"/search\" component={withTracker(Search)} />\r\n          <Route exact path=\"/events\" component={withTracker(AllEvents)} />\r\n          <Route path=\"/events/:id\" component={withTracker(Event)} />\r\n          <Route exact path=\"/people\" component={withTracker(People)} />\r\n          <Route exact path=\"/people/:id\" component={withTracker(Person)} />\r\n        </Switch>\r\n        <Banner />\r\n        <Footer />\r\n      </Router>\r\n    </GeneralErrorBoundary>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}