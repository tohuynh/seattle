{"version":3,"sources":["../node_modules/natural/lib/natural/sentiment sync","utils/withTracker.jsx","components/Header.jsx","components/Footer.jsx","components/GeneralErrorBoundary.jsx","pages/Home.jsx","containers/DataApiContainer.jsx","utils/getDateTime.js","components/EventCard.jsx","components/EventCardGroup.jsx","components/FilterPopup.jsx","components/SelectDateRange.jsx","utils/isSubstring.js","components/SelectFilterOptions.jsx","components/SelectSorting.jsx","components/EventsFilter.jsx","api/utils.js","api/database.js","api/eventApi.js","api/personApi.js","hooks/useDataApi.js","containers/EventsFilterContainer.jsx","hooks/useDocumentTitle.js","hooks/useFilter.js","containers/AllEvents.jsx","containers/EventCardGroup.jsx","pages/Search.jsx","utils/hhmmss.js","components/EventTranscriptSearch.jsx","components/EventSearch.jsx","components/EventShareVideo.jsx","components/EventMinutes.jsx","components/EventTranscript.jsx","components/VotingTable.jsx","components/EventTabs.jsx","hooks/useMatchMedia.js","components/Event.jsx","containers/Event.jsx","pages/Event.jsx","pages/AllEvents.jsx","components/PeopleCardGroup.jsx","containers/PeopleCardGroupContainer.jsx","pages/People.jsx","components/Person.jsx","containers/PersonContainer.jsx","pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","withTracker","WrappedComponent","options","trackPage","page","ReactGA","set","pageview","HOC","window","location","hash","substr","nextProps","currentPage","this","props","pathname","nextPage","Component","Brand","styled","h1","HeadingTab","transition","borderRadius","padding","backgroundColor","color","Header","Fragment","Segment","vertical","Container","to","style","marginLeft","Footer","inverted","Grid","stackable","Row","columns","Column","as","content","List","link","Item","layoutStyle","margin","detailsStyle","marginTop","whiteSpace","sectionStyle","GeneralErrorBoundary","state","error","errorInfo","setState","target","rel","href","toString","stack","componentStack","children","React","Layout","minHeight","ContentContainer","marginBottom","SearchBar","Input","width","StyledGrid","display","HomePage","useState","searchQuery","setSearchQuery","verticalAlign","centered","placeholder","value","onChange","a","async","onKeyPress","event","key","history","push","search","trim","replace","query","Button","attached","primary","Link","DataApiContainer","apiState","showLoader","isError","isLoading","Loader","active","data","getDateTime","date","moment","utc","format","StyledCard","Card","boxShadow","StyledCardContent","Content","EventCard","name","description","fluid","prettyQuery","getLinkParameters","Meta","Description","memo","events","Group","map","ButtonContainer","div","justifyContent","StyledPopup","Popup","minWidth","maxWidth","flexGrow","overflowY","PopupContainer","maxHeight","flexDirection","filter","header","handlePopupClose","mountNodeRef","clear","getTextRep","isActive","open","setOpen","handleClose","basic","flowing","mountNode","current","on","onClose","onOpen","pinned","offset","position","positionFixed","trigger","icon","labelPosition","Icon","size","onClick","getDateText","dateRange","defaultText","start","end","startString","endString","year","month","split","handleChange","Form","Field","type","isSubstring","string","substring","toLowerCase","indexOf","getCheckboxText","checkboxes","numberOfSelectedCheckbox","Object","values","length","OptionQueryInput","paddingRight","optionQuery","setOptionQuery","filterName","checked","filteredOptions","text","option","Checkbox","label","sortBy","getSortText","sort","textRep","by","sortByOptions","byOption","control","radio","allBodies","filters","useRef","committeeFilter","dateRangeFilter","sortFilter","committeeQuery","setCommitteeQuery","body","ref","fetchJson","url","fetch","then","res","json","WHERE_OPERATORS","eq","contains","contains_any","in","gt","lt","gteq","lteq","ORDER_OPERATORS","asc","desc","WhereCondition","generalErr","Array","columnName","operator","includes","OrderCondition","s","String","db","credentials","firebase","initializeApp","connection","firestore","table","collection","doc","get","exists","Promise","reject","queryResults","results","forEach","thisEvent","orderBy","undefined","limit","where","catch","err","_unpackQueryResults","apiKey","authDomain","projectId","databaseURL","storage","getEvents","bodyIDs","getAllEvents","getFilteredEvents","selectRowsAsArray","allEvents","getBasicEvents","getEventMinutes","eventId","indexOrder","eventMinutes","getEventMinutesItem","eventMinutesItem","selectRowById","minutes_item_id","minutesItem","minutesItemFiles","minutes_item","file","getEventBody","bodyId","getEventTranscriptMetadata","getEventTranscript","firstTranscript","downloadFile","file_id","transcript","fileId","fetchFunction","fileMetaData","gsReference","refFromURL","uri","getDownloadURL","filename","getVotesForEvent","minutesItems","minuteItemsWithDecisions","minute","decision","formattedItems","item","matter","index","votePromises","all","minuteItemVotes","allPeople","i","votes","votesByPerson","vote","person","find","person_id","full_name","formattedIndividualVotes","getEventById","body_id","minutes","videoUrl","video_uri","event_datetime","toMillis","toISOString","scPageUrl","source_uri","getEventsByIndexedTerm","term","valueMin","natural","PorterStemmer","attach","stemmedTokens","tokenizeAndStem","stemmedToken","matches","summedMatchValueByEventId","mapValues","groupBy","flatten","match","event_id","eventTermMatches","reduce","sortedSummedMatches","sortEvents","filterEvents","getAllBodies","promises","getFilteredEventsHelper","bodyID","startDate","Timestamp","fromMillis","valueOf","endDate","add","subtract","isBefore","isAfter","sortOption","isSearch","order","getAllPeople","getVotesForPerson","personId","formattedVotes","eventMinutesItemsPromises","event_minutes_item_id","eventMinutesItems","minutesItemsPromises","eventsPromises","voteData","eventMinuteItem","minuteItem","formattedVote","voteForPerson","eventDate","body_name","sortedVotes","dataFetchReducer","action","payload","useDataApi","functionName","initialFunctionArgs","initialData","functionArgs","setFunctionArgs","useReducer","dispatch","useEffect","didCancel","apiFunctions","fetchData","EventsFilterContainer","useDocumentTitle","title","document","getSelectedOptions","k","useFilter","initialState","defaultData","textRepFunction","some","v","prevValue","newValue","dataValue","isSameValue","otherValue","hasOwnProperty","FiltersSection","top","zIndex","ResultCount","span","Results","paddingLeft","EventCardGroupContainer","prevCommitteeRef","prevDateRangeRef","prevSortRef","scroll","newFunctionArgs","useHistory","prevSearchRef","onSubmit","preventDefault","widths","Search","q","queryString","parse","hhmmss","sec_num","parseInt","hours","Math","floor","seconds","TranscriptItem","TranscriptItemText","fontSize","lineHeight","TimeStamp","searchText","handleSeek","cache","CellMeasurerCache","fixedWidth","defaultHeight","parent","columnIndex","rowIndex","searchWords","autoEscape","textToHighlight","start_time","onResize","clearAll","height","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToIndex","willChange","StyledEventSearch","boxSizing","Subheader","h2","SearchInput","SearchResultCount","TranscriptSearchHelpMessage","SearchResultsWrapper","border","flex","EventSearch","transcriptSearchText","setTranscriptSearchText","transcriptItems","TimePointInput","borderBottomColor","disabled","borderBottomStyle","borderBottomWidth","ShareVideoModal","Modal","right","ButtonWithRef","forwardRef","Ref","innerRef","ShareButton","ModalMountNode","toSeconds","timePointStr","nums","reverse","totalSeconds","num","isNaN","NaN","parseFloat","pow","toTimePointStr","initialTimePoint","isDisabled","timePointReducer","timePoint","EventShareVideo","videoPlayerRef","shareLinkRef","timePointRef","useLocation","validateTimePointCb","closeIcon","compact","currentTime","player","getState","readyState","inputRef","removeEventListener","onMount","addEventListener","select","execCommand","videoShareLink","getVideoShareLink","transparent","MinuteList","ol","listStylePosition","MinuteTitle","fontWeight","MinuteDescription","FileList","ul","listStyleType","EventMinutes","flexWrap","alignItems","isSpeakerTurnFormat","speakerTurn","speaker","transcriptItem","Divider","horizontal","transcriptItemRenderer","Headers","accessor","MiniTable","Person","Decision","StyledTableHeader","Table","VotingTable","votingData","isPerson","striped","headerMetaData","HeaderCell","Body","votingDatum","Cell","record","singleLine","StyledEventTabs","StyledEventMenu","Menu","borderBottom","paddingTop","topOffset","mediaQueriesMatches","activeItem","setActiveItem","contextRef","handleItemClick","getBoundingClientRect","scrollIntoView","scrollBy","Sticky","context","styleElement","secondary","pointing","details","useMatchMedia","mediaQuery","matchMedia","setMatches","mediaQueryList","addListener","removeListener","StyledEvent","EventDate","InfoSegment","Inline","FixedSentinel","left","visibility","DummyContainer","isFixed","DummyDiv","PlayerCloseButton","button","opacity","PlayerContainer","PlayerWrapper","Event","eventData","videoTimePoint","setIsFixed","videoOffSetHeight","setVideoOffsetHeight","video","disablePictureInPicture","offsetHeight","seek","paused","hasStarted","play","pause","aspectRatio","preload","src","startTime","autoHide","rates","Visibility","once","onBottomPassed","onBottomPassedReverse","timestampedSentences","speakerTurnBlock","getTranscriptTimestampedText","EventContainer","EventPage","t","params","parseQuery","max","AllEventsPage","AllEvents","FlexWrapContainer","marginRight","cursor","transform","CardHeading","withRouter","people","email","PeopleCardGroupContainer","People","cssCheckbox","personHistory","phone","website","votingOptions","_","uniq","selectedVoteFilters","setSelectedVoteFilters","filteredVotes","setFilteredVotes","onSelectedVoteFilterChange","selectedFilters","without","isEmpty","filterVotingOptions","votingOption","initialize","App","basename","exact","path","component","Home","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0faec09.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 361;","import React, { Component } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nexport default function withTracker(WrappedComponent, options = {}) {\r\n  const trackPage = (page) => {\r\n    ReactGA.set({\r\n      page,\r\n      ...options\r\n    });\r\n    ReactGA.pageview(page);\r\n  };\r\n\r\n  const HOC = class extends Component {\r\n    componentDidMount() {\r\n      trackPage(window.location.hash.substr(1));\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n      const currentPage = this.props.location.pathname;\r\n      const nextPage = nextProps.location.pathname;\r\n\r\n      if (currentPage !== nextPage) {\r\n        trackPage(nextPage);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n  return HOC;\r\n}\r\n","import React from \"react\";\r\nimport { Segment, Container } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Brand = styled.h1({});\r\n\r\nconst HeadingTab = styled(\"span\")({\r\n  transition: \".8s all\",\r\n  borderRadius: \"5px\",\r\n  padding: \"1rem .5rem\",\r\n  \":hover\": {\r\n    backgroundColor: \"#F5F5F5\",\r\n    color: \"black\"\r\n\r\n  }\r\n});\r\n\r\nconst Header = () => (\r\n  <React.Fragment>\r\n    <Segment vertical>\r\n      <Container>\r\n        <Link to=\"/\">\r\n          <Brand>Council Data Project</Brand>\r\n        </Link>\r\n      </Container>\r\n    </Segment>\r\n    <Segment vertical>\r\n      <Container>\r\n        <Link to=\"/events\">\r\n          <HeadingTab>Events</HeadingTab>\r\n        </Link>\r\n        <Link to=\"/people\">\r\n          <HeadingTab style={{ marginLeft: \"10px\" }}>People</HeadingTab>\r\n        </Link>\r\n      </Container>\r\n    </Segment>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Segment, Grid, Header, List } from \"semantic-ui-react\";\r\n\r\nconst Footer = () => (\r\n  <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\r\n    <Container>\r\n      <Grid inverted stackable>\r\n        <Grid.Row columns=\"equal\">\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"About\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">The Project</List.Item>\r\n              <List.Item as=\"a\">The Team</List.Item>\r\n              <List.Item as=\"a\">Other Work</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"Seattle\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">City of Seattle</List.Item>\r\n              <List.Item as=\"a\">Seattle Open Data</List.Item>\r\n              <List.Item as=\"a\">Seattle Channel</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header inverted as=\"h4\" content=\"Developers\" />\r\n            <List link inverted>\r\n              <List.Item as=\"a\">Council Data Project</List.Item>\r\n              <List.Item as=\"a\">Seattle Specific</List.Item>\r\n              <List.Item as=\"a\">Transcription Runner</List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <p>\r\n            This web application is not funded by, nor associated with the\r\n            Seattle City Council. This is a prototype web application to show\r\n            the viability of an automated and collaborativly sourced city\r\n            council transcription service. The transcripts are roughly\r\n            ninty-percent accurate, and therefore may not represent what was\r\n            actually said.\r\n          </p>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  </Segment>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst layoutStyle = {\r\n  margin: '2em'\r\n};\r\n\r\nconst detailsStyle = {\r\n  marginTop: '0.7em',\r\n  whiteSpace: 'pre-wrap'\r\n};\r\n\r\nconst sectionStyle = {\r\n  marginTop: '0.7em'\r\n};\r\n\r\nclass GeneralErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n  }\r\n\r\n  // Note: error.stack is non-standard and is not on a standards track. It shouldn't be used in production,\r\n  // but this is just displaying the stack trace.\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Render error path\r\n      return (\r\n        <div style={layoutStyle}>\r\n          <h2>Something went wrong.</h2>\r\n          <div>\r\n            Sorry about that. To alert us of the issue, please fill out an{' '}\r\n            <a\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              href='https://github.com/CouncilDataProject/seattle/issues'\r\n            >\r\n              issue ticket\r\n            </a>{' '}\r\n            and we will try to fix it as soon as we can.\r\n          </div>\r\n          <br />\r\n          <div>{this.state.error.toString()}</div>\r\n          <details style={detailsStyle}>\r\n            {this.state.error.stack && (\r\n              <section style={sectionStyle}>\r\n                <strong>Error Stack Trace</strong>\r\n                <br />\r\n                <span>{this.state.error.stack}</span>\r\n              </section>\r\n            )}\r\n            <section style={sectionStyle}>\r\n              <strong>Component Stack Trace</strong>\r\n              <span>{this.state.errorInfo.componentStack}</span>\r\n            </section>\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default GeneralErrorBoundary;\r\n","import React from \"react\";\r\nimport { Container, Input, Button, Grid } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst SearchBar = styled(Input)({\r\n  width: \"50% !important\"\r\n});\r\n\r\nconst StyledGrid = styled(Grid)({\r\n  display: \"block\",\r\n  marginTop: \"150px !important\"\r\n});\r\n\r\nconst HomePage = props => {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n\r\n  const handleKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      props.history.push({\r\n        pathname: '/search',\r\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\r\n        state: { query: searchQuery }\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async (e, { value }) => {\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <StyledGrid verticalAlign=\"middle\" centered>\r\n            <Grid.Row>\r\n              <h1>Search City Council Transcripts</h1>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <SearchBar\r\n                placeholder=\"Enter a keyword to search meeting transcripts\"\r\n                value={searchQuery}\r\n                onChange={handleSearch}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <Button\r\n                attached=\"right\"\r\n                primary\r\n                as={Link}\r\n                to={{\r\n                  pathname: '/search',\r\n                  search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\r\n                  state: { query: searchQuery }\r\n                }}\r\n              >\r\n                Search\r\n            </Button>\r\n            </Grid.Row>\r\n          </StyledGrid>\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Fragment } from 'react';\r\nimport { Loader } from 'semantic-ui-react';\r\n\r\n// A general component to render the returned data of an api call.\r\nconst DataApiContainer = ({\r\n  apiState,\r\n  showLoader = true,\r\n  children\r\n}) => {\r\n\r\n  if (apiState.isError) {\r\n    // throw api error\r\n    if (apiState.error instanceof Error) {\r\n      throw apiState.error;\r\n    } else {\r\n      throw new Error(apiState.error);\r\n    }\r\n  } else if (apiState.isLoading) {\r\n    // show loader\r\n    return (\r\n      <Loader active={showLoader} />\r\n    );\r\n  } else {\r\n    if (apiState.data) {\r\n      // display children if there's data\r\n      return (\r\n        <Fragment>\r\n          {children}\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default DataApiContainer;\r\n","import moment from 'moment';\r\n\r\n/*Always display PST/PDT for event_datetime, regardless of user's locale*/\r\nconst getDateTime = (date) => {\r\n  return moment.utc(date).format('MMMM D, YYYY h:mm A');\r\n};\r\n\r\nexport default getDateTime;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst StyledCard = styled(Card)({\r\n  boxShadow: \"none !important\"\r\n});\r\n\r\nconst StyledCardContent = styled(Card.Content)({\r\n  padding: \"0 !important\"\r\n});\r\n\r\nconst EventCard = ({ name, date, description, link, query }) => {\r\n  const getLinkParameters = () => {\r\n    // Shorten whitespaces to one whitespace\r\n    const prettyQuery = query ? query.trim().replace(/\\s+/g, ' ') : ''\r\n    const linkParameters = {\r\n      // For search parameter, replace whitespaces with `+`\r\n      pathname: link,\r\n      search: prettyQuery ? `?q=${prettyQuery.replace(/\\s+/g, '+')}` : '',\r\n      state: {\r\n        query: prettyQuery\r\n      }\r\n    }\r\n    return linkParameters;\r\n  }\r\n\r\n  return (\r\n    <StyledCard fluid>\r\n      <StyledCardContent>\r\n        <Card.Header>\r\n          <Link to={getLinkParameters()}>\r\n            {name}\r\n          </Link>\r\n        </Card.Header>\r\n        <Card.Meta>{getDateTime(date)}</Card.Meta>\r\n        <Card.Description>{description}</Card.Description>\r\n      </StyledCardContent>\r\n    </StyledCard >\r\n  )\r\n};\r\n\r\nexport default EventCard;\r\n","import React from \"react\";\r\nimport EventCard from \"./EventCard\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst EventCardGroup = ({ events, query }) => {\r\n  return (\r\n    <Card.Group centered>\r\n      {events.map(({ name, date, description, id }) => (\r\n        <EventCard\r\n          key={id}\r\n          name={name}\r\n          date={date}\r\n          description={description}\r\n          link={`/events/${id}`}\r\n          query={query}\r\n        />\r\n      ))}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventCardGroup);","import React from 'react';\r\nimport { Button, Header, Icon, Popup } from 'semantic-ui-react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ButtonContainer = styled.div({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: '1em 0'\r\n});\r\n\r\nconst StyledPopup = styled(Popup)({\r\n  minWidth: '250px !important',\r\n  maxWidth: '90% !important',\r\n  boxShadow: 'none !important',\r\n  '@media(max-width:500px)': {\r\n    width: '86% !important'\r\n  }\r\n});\r\n\r\nconst ContentContainer = styled(Popup.Content)({\r\n  flexGrow: '1',\r\n  overflowY: 'auto !important',\r\n});\r\n\r\nconst PopupContainer = styled.div({\r\n  maxHeight: '45vh',\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n});\r\n\r\nconst FilterPopup = ({\r\n  filter,\r\n  header,\r\n  handlePopupClose,\r\n  mountNodeRef,\r\n  children\r\n}) => {\r\n  const { clear, getTextRep, isActive } = filter;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    handlePopupClose();\r\n  };\r\n\r\n  const handleClear = () => {\r\n    clear();\r\n  };\r\n\r\n  return (\r\n    <StyledPopup\r\n      basic\r\n      flowing\r\n      mountNode={mountNodeRef.current}\r\n      on='click'\r\n      onClose={handleClose}\r\n      onOpen={handleOpen}\r\n      open={open}\r\n      pinned={true}\r\n      offset='0, -5px'\r\n      position='bottom left'\r\n      positionFixed={true}\r\n      trigger={\r\n        <Button\r\n          icon\r\n          labelPosition='right'\r\n          basic={!isActive()}>\r\n          <Icon name='angle down' />\r\n          {getTextRep()}\r\n        </Button>}\r\n    >\r\n    <PopupContainer>\r\n      <Header content={header} />\r\n      <ContentContainer>\r\n        {children}\r\n      </ContentContainer>\r\n      <ButtonContainer >\r\n        <Button size='mini' onClick={handleClear}>\r\n          <Icon name='remove' /> Clear\r\n        </Button>\r\n        <Button size='mini' primary onClick={handleClose}>\r\n          <Icon name='checkmark' /> Save\r\n        </Button>\r\n      </ButtonContainer>\r\n    </PopupContainer>\r\n    </StyledPopup>\r\n  );\r\n};\r\n\r\nexport default React.memo(FilterPopup);","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * Generate the text representation of a date range.\r\n * @param {Object} dateRange The start and end dates object.\r\n * @param {string} dateRange.start\r\n * @param {string} dateRange.end\r\n * @param {string} defaultText The default text representation, when no dates have been entered.\r\n * @return {string} The text representation.\r\n */\r\nexport const getDateText = (dateRange, defaultText) => {\r\n  const start = moment.utc(dateRange.start, 'YYYY-MM-DD');\r\n  const end = moment.utc(dateRange.end, 'YYYY-MM-DD');\r\n  const startString = start.format('MMM D, YYYY');\r\n  const endString = end.format('MMM D, YYYY');\r\n  let textRep;\r\n  if (dateRange.start && dateRange.end) {\r\n    if (start.year() === end.year() && start.month() === end.month()) {\r\n      textRep = `${startString.split(',')[0]} - ${end.date()}, ${end.year()}`;\r\n    } else if (start.year() === end.year()) {\r\n      textRep = `${startString.split(',')[0]} - ${endString.split(',')[0]}, ${end.year()}`;\r\n    } else {\r\n      textRep = `${startString} - ${endString}`;\r\n    }\r\n  } else if (dateRange.start) {\r\n    textRep = `${startString} -`;\r\n  } else if (dateRange.end) {\r\n    textRep = `- ${endString}`;\r\n  } else {\r\n    textRep = defaultText;\r\n  }\r\n  return textRep;\r\n};\r\n\r\nconst SelectDateRange = ({\r\n  filter\r\n}) => {\r\n  const { value, handleChange } = filter;\r\n\r\n  const onChange = (e, { name, value }) => {\r\n    handleChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Field>From</Form.Field>\r\n      <Form.Input fluid name='start' type='date' onChange={onChange} value={value.start} />\r\n      <Form.Field>To</Form.Field>\r\n      <Form.Input fluid name='end' type='date' onChange={onChange} value={value.end} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default React.memo(SelectDateRange);","const isSubstring = (string = \"\", substring = \"\") =>\r\n  string.toLowerCase().indexOf(substring.toLowerCase()) !== -1;\r\n\r\nexport default isSubstring;\r\n","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport styled from '@emotion/styled';\r\nimport isSubstring from '../utils/isSubstring'\r\n\r\n/**\r\n * Generate the text representation of a list of checkboxes, by appending the number of selected checkboxes\r\n * to the defaultText.\r\n * @param {Object} checkboxes The object representation of the list of checkboxes, \r\n * where the keys are the different options, and each value is a boolean(whether the option is selected).\r\n * @param {string} defaultText The default text representation, when no checkboxes are selected.\r\n * @returns {string} The text representation.\r\n */\r\nexport const getCheckboxText = (checkboxes, defaultText) => {\r\n  const numberOfSelectedCheckbox = Object.values(checkboxes).filter(value => value).length;\r\n  const textRep = numberOfSelectedCheckbox ? `${defaultText} : ${numberOfSelectedCheckbox}` : defaultText;\r\n  return textRep;\r\n};\r\n\r\nconst OptionQueryInput = styled(Form.Input)({\r\n  paddingRight: '.8em'\r\n});\r\n\r\nconst SelectFilterOptions = ({\r\n  filter,\r\n  options,\r\n  optionQuery,\r\n  setOptionQuery,\r\n}) => {\r\n  const { filterName, value, handleChange } = filter;\r\n\r\n  const onChange = (e, { name, checked }) => {\r\n    handleChange(name, checked);\r\n  };\r\n\r\n  const onOptionQueryChange = (e, { value }) => {\r\n    setOptionQuery(value);\r\n  };\r\n\r\n  let filteredOptions = options;\r\n  if (options.length > 5) {\r\n    filteredOptions = options.filter(({ text }) => isSubstring(text, optionQuery));\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      {options.length > 5 && <OptionQueryInput\r\n        placeholder={`Search ${filterName} Options`}\r\n        value={optionQuery}\r\n        onChange={onOptionQueryChange} />}\r\n      {filteredOptions.map(option =>\r\n        <Form.Checkbox\r\n          key={option.name}\r\n          label={option.text}\r\n          name={option.name}\r\n          checked={value[option.name]}\r\n          onChange={onChange}\r\n        />)}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default React.memo(SelectFilterOptions);","import React from 'react';\r\nimport { Checkbox, Form } from 'semantic-ui-react';\r\n\r\n/**The list of sort by options and their corresponding labels. */\r\nconst sortBy = {\r\n  date: \"Most recent\",\r\n  value: \"Most relevant\",\r\n};\r\n\r\n/**\r\n * Generate the text representation of a sort object.\r\n * @param {Object} sort The sort by options.\r\n * @param {string} sort.by\r\n * @param {string} defaultText The default text representation, \r\n * when no sort options are selected.\r\n * @return {string} The text representation.\r\n */\r\nexport const getSortText = (sort, defaultText) => {\r\n  let textRep = defaultText;\r\n  if (sort.by && sort.by in sortBy) {\r\n    textRep = sortBy[sort.by];\r\n  }\r\n  return textRep;\r\n};\r\n\r\nconst SelectSorting = ({\r\n  filter,\r\n  sortByOptions\r\n}) => {\r\n  const { value, handleChange } = filter;\r\n\r\n  const onChange = (e, { name, value }) => {\r\n    handleChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      {sortByOptions.map(byOption =>\r\n        <Form.Field\r\n          checked={value.by === byOption}\r\n          control={Checkbox}\r\n          id={`form-checkbox-control-${byOption}`}\r\n          key={byOption}\r\n          label={sortBy[byOption]}\r\n          name='by'\r\n          onChange={onChange}\r\n          radio\r\n          value={byOption}\r\n        />)}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default React.memo(SelectSorting);","import React from 'react';\r\nimport FilterPopup from './FilterPopup';\r\nimport SelectDateRange from './SelectDateRange';\r\nimport SelectFilterOptions from './SelectFilterOptions';\r\nimport SelectSorting from './SelectSorting';\r\n\r\nconst EventsFilter = ({\r\n  allBodies,\r\n  filters,\r\n  handlePopupClose,\r\n  sortByOptions\r\n}) => {\r\n  const mountNodeRef = React.useRef(); //where the FilterPopup will be mounted\r\n  const [committeeFilter, dateRangeFilter, sortFilter] = filters;\r\n  const [committeeQuery, setCommitteeQuery] = React.useState('');\r\n\r\n  const getCommitteeNameOptions = () => {\r\n    return allBodies.map(body => {\r\n      return {\r\n        name: body.id,\r\n        text: body.name\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FilterPopup\r\n        filter={committeeFilter}\r\n        header='Select Committees'\r\n        handlePopupClose={handlePopupClose}\r\n        mountNodeRef={mountNodeRef}>\r\n        <SelectFilterOptions\r\n          filter={committeeFilter}\r\n          options={getCommitteeNameOptions()}\r\n          optionQuery={committeeQuery}\r\n          setOptionQuery={setCommitteeQuery} />\r\n      </FilterPopup>\r\n      <FilterPopup\r\n        filter={dateRangeFilter}\r\n        header='Select Date Range'\r\n        handlePopupClose={handlePopupClose}\r\n        mountNodeRef={mountNodeRef}>\r\n        <SelectDateRange\r\n          filter={dateRangeFilter} />\r\n      </FilterPopup>\r\n      {sortByOptions &&\r\n      <FilterPopup\r\n        filter={sortFilter}\r\n        header='Sort Results By'\r\n        handlePopupClose={handlePopupClose}\r\n        mountNodeRef={mountNodeRef}>\r\n        <SelectSorting\r\n          filter={sortFilter}\r\n          sortByOptions={sortByOptions} />\r\n      </FilterPopup>}\r\n      <div ref={mountNodeRef} />\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default React.memo(EventsFilter);","export async function fetchJson(url){\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n};\r\n\r\nexport function isString(s) {\r\n    return typeof(s) === \"string\" || s instanceof String;\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { isString } from \"./utils\";\r\n\r\nexport const WHERE_OPERATORS = {\r\n    eq: \"==\",\r\n    contains: \"array-contains\",\r\n    contains_any: \"array-contains-any\",\r\n    in: \"in\",\r\n    gt: \">\",\r\n    lt: \"<\",\r\n    gteq: \">=\",\r\n    lteq: \"<=\",\r\n};\r\n\r\nexport const ORDER_OPERATORS = {\r\n    asc: \"asc\",\r\n    desc: \"desc\"\r\n};\r\n\r\nexport class WhereCondition {\r\n    /**\r\n    * @param {(Object|Array)} filter The object or array to use to create a WhereCondition from.\r\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`, `value`].\r\n    *   When provided an Object, the object must have `columnName` and `value` attributes, and, optional `operator`\r\n    *   attributes. The `operator` is optional in both cases and if left out, will default to value equality.\r\n    */\r\n    constructor(filter) {\r\n        const generalErr = new Error(`Unsure how to create WhereCondition from received data: ${filter}`);\r\n\r\n        // Handle array and object\r\n        if (filter instanceof Array) {\r\n            // Array two items long, assume equal operator\r\n            if (filter.length === 2) {\r\n                this.columnName = filter[0];\r\n                this.operator = WHERE_OPERATORS.eq;\r\n                this.value = filter[1];\r\n            // Array of three items long, check order\r\n            } else if (filter.length === 3) {\r\n                // Check proper order by ensuring an approved operator is included at index one\r\n                if (Object.values(WHERE_OPERATORS).includes(filter[1])) {\r\n                    // Unpack contents\r\n                    this.columnName = filter[0];\r\n                    this.operator = filter[1];\r\n                    this.value = filter[2];\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown WhereCondition operator: ${filter[1]}\r\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Log error in any other case\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else if (filter instanceof Object) {\r\n            // All attributes present and operator is valid\r\n            if (\r\n                filter.columnName &&\r\n                filter.operator &&\r\n                filter.value\r\n            ) {\r\n                if (Object.values(WHERE_OPERATORS).includes(filter.operator)) {\r\n                    this.columnName = filter.columnName;\r\n                    this.operator = filter.operator;\r\n                    this.value = filter.value;\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown WhereCondition operator: ${filter.operator}\r\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Only column name and value attributes present, assume equal operator\r\n            } else if (filter.columnName && filter.value) {\r\n                this.columnName = filter.columnName;\r\n                this.operator = WHERE_OPERATORS.eq;\r\n                this.value = filter.value;\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else {\r\n            throw generalErr;\r\n        };\r\n    };\r\n};\r\n\r\nexport class OrderCondition {\r\n    /**\r\n    * @param {(Object|Array|string)} order The object, array, or string to use to create an OrderCondition from.\r\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`].\r\n    *   When provided an Object, the object must have `columnName`, and, optional `operator` attributes.\r\n    *   The `operator` is optional in both cases and if left out, will default to `descending`.\r\n    *   When provided a String, the string is simply the `columnName` for the OrderCondition, as the `operator` will\r\n    *   default to `descending`.\r\n    */\r\n    constructor(by) {\r\n        const generalErr = new Error(`Unsure how to create OrderCondition from received data: ${by}`);\r\n\r\n        // Handle string, array, and object\r\n        if (isString(by)) {\r\n            this.columnName = by;\r\n            this.operator = ORDER_OPERATORS.desc;\r\n        } else if (by instanceof Array) {\r\n            // Array single item long, assume descending operator\r\n            if (by.length === 1) {\r\n                this.columnName = by[0];\r\n                this.operator = ORDER_OPERATORS.desc;\r\n            // Array of two items long, check order\r\n            } else if (by.length === 2) {\r\n                // Check proper order by ensuring an approved operator is included at index one\r\n                if (Object.values(ORDER_OPERATORS).includes(by[1])) {\r\n                    // Unpack contents\r\n                    this.columnName = by[0];\r\n                    this.operator = by[1];\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown OrderCondition operator: ${by[1]}\r\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Log error in any other case\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else if (by instanceof Object) {\r\n            // All attributes present and operator is valid\r\n            if (\r\n                by.columnName &&\r\n                by.operator\r\n            ) {\r\n                if (Object.values(ORDER_OPERATORS).includes(by.operator)) {\r\n                    this.columnName = by.columnName;\r\n                    this.operator = by.operator;\r\n                } else {\r\n                    throw new Error(`\r\n                        Unknown OrderCondition operator: ${by.operator}\r\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\r\n                    `);\r\n                };\r\n            // Only column name, assume descending operator\r\n            } else if (by.columnName) {\r\n                this.columnName = by.columnName;\r\n                this.operator = ORDER_OPERATORS.desc;\r\n            } else {\r\n                throw generalErr;\r\n            };\r\n        } else {\r\n            throw generalErr;\r\n        };\r\n    };\r\n};\r\n\r\nclass Database {\r\n    /**\r\n    * @param {Object} credentials An object that contains all reqired information to interact with a CDP database.\r\n    */\r\n    constructor(credentials) {\r\n        // Store for save keeping\r\n        this.credentials = credentials;\r\n\r\n        // Initialize Connection\r\n        firebase.initializeApp(this.credentials);\r\n\r\n        // Store connection\r\n        this.connection = firebase.firestore();\r\n    };\r\n\r\n    /**\r\n    * @param {string} table The name of the table (collection) you want to request results from.\r\n    * @param {string} id The id for the row you want to retrieve.\r\n    * @return {Object} If the row was found, the row's contents are returned as an object.\r\n    */\r\n    async selectRowById(table, id) {\r\n        try {\r\n            const res = await this.connection\r\n                .collection(table)\r\n                .doc(id)\r\n                .get()\r\n\r\n            if (!res.exists) {\r\n                throw new Error(`${table} ${id} doesn't exist.`);\r\n            }\r\n            return res.data();\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        };\r\n    };\r\n\r\n    /**\r\n    * @param {Object[]} queryResults The results returned from a query to the database.\r\n    * @return {Object[]} The formatted query results.\r\n    */\r\n    async _unpackQueryResults(queryResults) {\r\n        const results = [];\r\n        queryResults.forEach(doc => {\r\n            const data = doc.data();\r\n            const thisEvent = {\r\n              id: doc.id,\r\n              ...data\r\n            };\r\n            results.push(thisEvent);\r\n        });\r\n        return results;\r\n    };\r\n\r\n    /**\r\n    * @param {string} table The name of the table (collection) you want to request results from.\r\n    * @param {(Object[]|Array[])} [filters] A list of filters (where conditions) to add.\r\n    * @param {(Object|string)} [orderBy] An order by condition to order the results by prior to returning.\r\n    * @param {integer} [limit=1000] An integer limit to how many rows should be returned that match the query provided.\r\n    * @return {Object[]} The formatted query results.\r\n    */\r\n    async selectRowsAsArray(table, filters = [], orderBy = undefined, limit = 1000) {\r\n        try {\r\n            // Make basic reference\r\n            let ref = this.connection.collection(table);\r\n\r\n            // Attach filters\r\n            filters.forEach(filter => {\r\n                ref = ref.where(filter.columnName, filter.operator, filter.value);\r\n            });\r\n\r\n            // Attach order by\r\n            if (orderBy) {\r\n                ref = ref.orderBy(orderBy.columnName, orderBy.operator);\r\n            };\r\n\r\n            // Attach limit\r\n            ref = ref.limit(limit);\r\n\r\n            // Make requst\r\n            const res = await ref.get()\r\n                .catch(err => {\r\n                    throw new Error(`Failed to retrieve data from database. Error: ${err}`);\r\n                });\r\n\r\n            // Return the formatted results\r\n            return await this._unpackQueryResults(res);\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        };\r\n    };\r\n};\r\n\r\n// Export created and connected database\r\nexport const db = new Database({\r\n    apiKey: \"AIzaSyA7aO6weBcOUBZLmxE3aMyn4NeElVEHZUc\",\r\n    authDomain: \"cdp-sea.firebaseapp.com\",\r\n    projectId: \"cdp-seattle\",\r\n    databaseURL: \"https://cdp-sea.firebaseio.com\"\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport moment from \"moment\";\r\nimport natural from \"natural\";\r\nimport { flatten, orderBy, sortBy, groupBy, mapValues, filter } from \"lodash\";\r\nimport { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from \"./database\";\r\nimport { fetchJson } from \"./utils\";\r\n\r\nconst storage = firebase.storage();\r\n\r\n/**\r\n * A general get events function for the all events page.\r\n * @param {Object} [dateRange=null]\r\n * @param {String[]} [bodyIDs=null]\r\n * @param {Object} [sort=null]\r\n * @return {Object[]} The list of events.\r\n */\r\nexport async function getEvents(dateRange = null, bodyIDs = null, sort = null) {\r\n  if (!dateRange && !bodyIDs && !sort) {\r\n    return await getAllEvents();\r\n  } else {\r\n    return await getFilteredEvents(dateRange, bodyIDs, sort);\r\n  }\r\n}\r\n\r\n/**\r\n * @return {Object[]} The list of events sorted by recency.\r\n */\r\nasync function getAllEvents() {\r\n  try {\r\n    const allEvents = await db.selectRowsAsArray(\r\n      \"event\",\r\n      [],\r\n      new OrderCondition([\"event_datetime\", ORDER_OPERATORS.desc])\r\n    );\r\n    return await getBasicEvents(allEvents);\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} eventId The event's id.\r\n * @param {String} indexOrder The sort order.\r\n * @return {Object[]} The list of event minutes item for the event sorted according to indexOrder.\r\n */\r\nexport async function getEventMinutes(eventId, indexOrder) {\r\n  try {\r\n    const eventMinutes = await db.selectRowsAsArray(\r\n      \"event_minutes_item\",\r\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\r\n      new OrderCondition([\"index\", indexOrder])\r\n    );\r\n    return eventMinutes;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  };\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} eventMinutesItem The event minutes item.\r\n * @return {Object} The event minutes item merged with its corresponding minutes item and attached files.\r\n */\r\nexport async function getEventMinutesItem(eventMinutesItem) {\r\n  try {\r\n    const minutesItem = await db.selectRowById(\"minutes_item\", eventMinutesItem.minutes_item_id);\r\n    const minutesItemFiles = await db.selectRowsAsArray(\r\n      \"minutes_item_file\",\r\n      [new WhereCondition([\"minutes_item_id\", WHERE_OPERATORS.eq, eventMinutesItem.minutes_item_id])],\r\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\r\n    );\r\n\r\n    return {\r\n      ...eventMinutesItem,\r\n      minutes_item: {\r\n        id: eventMinutesItem.minutes_item_id,\r\n        ...minutesItem,\r\n        file: minutesItemFiles\r\n      }\r\n    };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  };\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} bodyId The body's id.\r\n * @return {Object} The body's details.\r\n */\r\nexport async function getEventBody(bodyId) {\r\n  try {\r\n    const body = await db.selectRowById('body', bodyId);\r\n    return body;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} eventId The event's id.\r\n * @return {Object} The content of the transcript file for the event.\r\n */\r\nexport async function getEventTranscriptMetadata(eventId) {\r\n  try {\r\n    const firstTranscript = await getEventTranscript(eventId);\r\n    const transcript = await downloadFile(firstTranscript.file_id, fetchJson);\r\n    return transcript;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {String} eventId The event's id.\r\n * @return {Object} The transcript for the event.\r\n */\r\nasync function getEventTranscript(eventId) {\r\n  const [firstTranscript] = await db.selectRowsAsArray(\r\n    \"transcript\",\r\n    [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\r\n    null,\r\n    1\r\n  );\r\n\r\n  if (!firstTranscript) {\r\n    throw new Error(`Transcript doesn't exist for event: ${eventId}`);\r\n  }\r\n\r\n  return firstTranscript;\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} fileId The id of the file to be downloaded.\r\n * @param {Function} fetchFunction The function that is used to download the file's content.\r\n * @return {Object} The file's content.\r\n */\r\nasync function downloadFile(fileId, fetchFunction) {\r\n  const fileMetaData = await db.selectRowById(\"file\", fileId);\r\n\r\n  // https://firebase.google.com/docs/storage/web/download-files\r\n  const gsReference = storage.refFromURL(fileMetaData.uri);\r\n  const file = await gsReference\r\n    .getDownloadURL()\r\n    .then(url => fetchFunction(url));\r\n\r\n  if (!file) {\r\n    throw new Error(`Failed to download ${fileMetaData.filename} from ${fileMetaData.uri}.`);\r\n  }\r\n  return file;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object[]} minutesItems The list of minutes item.\r\n * @return {Object[]} The voting records for each minutes item in minutesItems.\r\n */\r\nasync function getVotesForEvent(minutesItems) {\r\n  try {\r\n    const minuteItemsWithDecisions = minutesItems.filter(\r\n      minute => minute.decision !== null\r\n    );\r\n\r\n    const formattedItems = [];\r\n    minuteItemsWithDecisions.forEach(item => {\r\n      formattedItems.push({\r\n        matter: item.minutes_item.matter,\r\n        name: item.minutes_item.name,\r\n        id: item.id,\r\n        decision: item.decision,\r\n        index: item.index\r\n      });\r\n    });\r\n\r\n    const votePromises = formattedItems.map(item =>\r\n      db.selectRowsAsArray(\r\n        \"vote\",\r\n        [new WhereCondition([\"event_minutes_item_id\", WHERE_OPERATORS.eq, item.id])]\r\n      )\r\n    );\r\n\r\n    const minuteItemVotes = await Promise.all(votePromises);\r\n\r\n    const allPeople = await db.selectRowsAsArray(\"person\");\r\n\r\n    formattedItems.forEach((item, i) => {\r\n      const votes = minuteItemVotes[i];\r\n      const votesByPerson = [];\r\n      votes.forEach(vote => {\r\n        const person = allPeople.find(person => person.id === vote.person_id)\r\n        votesByPerson.push({\r\n          decision: vote.decision,\r\n          person_id: vote.person_id,\r\n          full_name: person.full_name\r\n        });\r\n      });\r\n\r\n      item.formattedIndividualVotes = sortBy(votesByPerson, vote => vote.full_name);\r\n    });\r\n\r\n    return formattedItems;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} id The event's id\r\n * @return {Object} The event's details.\r\n */\r\nexport async function getEventById(id) {\r\n  try {\r\n    const event = await db.selectRowById(\"event\", id);\r\n    const body = await getEventBody(event.body_id);\r\n    const minutes = await getEventMinutes(id, ORDER_OPERATORS.asc);\r\n    const minutesItems = await Promise.all(\r\n      minutes.map(minute => getEventMinutesItem(minute))\r\n    );\r\n    const transcript = await getEventTranscriptMetadata(id);\r\n    const votes = await getVotesForEvent(minutesItems);\r\n\r\n    return {\r\n      id,\r\n      name: body.name,\r\n      description: body.description,\r\n      videoUrl: event.video_uri,\r\n      date: moment\r\n        .utc(event.event_datetime.toMillis())\r\n        .toISOString(),\r\n      minutes: minutesItems,\r\n      transcript: transcript,\r\n      scPageUrl: event.source_uri,\r\n      votes: votes\r\n    };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n/**\r\n* @param {string} term The search term\r\n* @param {Object} dateRange The start and end dates to filter search results.\r\n* @param {string} dateRange.start\r\n* @param {string} dateRange.end \r\n* @param {string[]} bodyIDs The list of committee/body ids to filter search results.\r\n* @param {Object} sort The sort by and sort order options.\r\n* @param {string} sort.by\r\n* @param {string} sort.order \r\n* @return {Object[]} The search results, where each event's date is within\r\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The search\r\n* results are sorted according to the sort options.\r\n*/\r\nexport async function getEventsByIndexedTerm(term, dateRange = {}, bodyIDs = [], sort = {}) {\r\n  const valueMin = 0;\r\n  try {\r\n    natural.PorterStemmer.attach();\r\n\r\n    const stemmedTokens = term.tokenizeAndStem();\r\n    if (stemmedTokens.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    // get matches for each term\r\n    const matches = await Promise.all(\r\n      stemmedTokens.map(stemmedToken =>\r\n        db.selectRowsAsArray(\r\n          \"indexed_event_term\",\r\n          [new WhereCondition([\"term\", WHERE_OPERATORS.eq, stemmedToken])]\r\n        )\r\n      )\r\n    );\r\n\r\n    // create a map of event id to object with id and sum of match values\r\n    const summedMatchValueByEventId = mapValues(\r\n      groupBy(flatten(matches), match => match.event_id),\r\n      (eventTermMatches, key) =>\r\n        eventTermMatches.reduce(\r\n          (current, item) => ({\r\n            ...current,\r\n            value: current.value + item.value\r\n          }),\r\n          { event_id: key, value: 0 }\r\n        )\r\n    );\r\n\r\n    // get only event id with summed values > valueMin\r\n    const sortedSummedMatches = filter(summedMatchValueByEventId, ({ value }) => value > valueMin);\r\n    let events = await Promise.all(\r\n      sortedSummedMatches.map(({ event_id }) => db.selectRowById('event', event_id))\r\n    );\r\n\r\n    events = await getBasicEvents(events);\r\n\r\n    events.forEach((event, i) => {\r\n      event.id = sortedSummedMatches[i].event_id;\r\n      event.value = sortedSummedMatches[i].value;\r\n    });\r\n\r\n    events = filterEvents(events, dateRange, bodyIDs);\r\n    events = sortEvents(events, sort, true);\r\n    return events;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * @return {Object[]} The list of bodies.\r\n */\r\nexport async function getAllBodies() {\r\n  try {\r\n    return db.selectRowsAsArray(\r\n      'body',\r\n      [],\r\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\r\n    );\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n* @param {Object} dateRange The start and end dates to filter events.\r\n* @param {string} dateRange.start\r\n* @param {string} dateRange.end \r\n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\r\n* @param {Object} sort The sort by and sort order options.\r\n* @param {string} sort.by\r\n* @param {string} sort.order \r\n* @return {Object[]} A list of events, where each event's date is within\r\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The events\r\n* are sorted according to the sort options.\r\n*/\r\nasync function getFilteredEvents(dateRange, bodyIDs, sort) {\r\n  try {\r\n    const promises = [];\r\n    if (bodyIDs.length) {\r\n      bodyIDs.forEach(id => promises.push(getFilteredEventsHelper(dateRange, id)));\r\n    } else {\r\n      promises.push(getFilteredEventsHelper(dateRange));\r\n    }\r\n    let events = flatten(await Promise.all(promises));\r\n    events = await getBasicEvents(events);\r\n    events = sortEvents(events, sort);\r\n    return events;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\nasync function getFilteredEventsHelper(dateRange, bodyID = null) {\r\n  const filters = [];\r\n  if (bodyID) {\r\n    filters.push(new WhereCondition(['body_id', WHERE_OPERATORS.eq, bodyID]));\r\n  }\r\n  if (dateRange.start) {\r\n    const startDate = moment.utc(dateRange.start, 'YYYY-MM-DD')\r\n    const start = firebase.firestore.Timestamp.fromMillis(startDate.valueOf());\r\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.gteq, start]));\r\n  }\r\n  if (dateRange.end) {\r\n    const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\r\n    const end = firebase.firestore.Timestamp.fromMillis(endDate.valueOf());\r\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.lteq, end]));\r\n  }\r\n\r\n  return db.selectRowsAsArray(\r\n    'event',\r\n    filters\r\n  );\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events\r\n* @return {Object[]} The formatted list of events with basic information for front-end.\r\n*/\r\nasync function getBasicEvents(events) {\r\n  const allBodies = await getAllBodies();\r\n  return events.map(event => {\r\n    const body = allBodies.find(body => body.id === event.body_id);\r\n    return {\r\n      id: event.id,\r\n      body_id: body.id,\r\n      name: body.name,\r\n      description: body.description,\r\n      date: moment\r\n        .utc(event.event_datetime.toMillis())\r\n        .toISOString()\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events to filter.\r\n* @param {Object} dateRange The start and end dates to filter events.\r\n* @param {string} dateRange.start \r\n* @param {string} dateRange.end \r\n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\r\n* @return {Object[]} A list of events, where each event's date is within\r\n* date range and the event's body id is in bodyIDs(if its non-empty).\r\n*/\r\nfunction filterEvents(events, dateRange, bodyIDs) {\r\n  return events.filter(event => {\r\n    if (bodyIDs.length && bodyIDs.indexOf(event.body_id) === -1) {\r\n      return false;\r\n    }\r\n\r\n    if (dateRange.start && moment.utc(event.date).isBefore(moment.utc(dateRange.start))) {\r\n      return false;\r\n    }\r\n\r\n    if (dateRange.end) {\r\n      const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\r\n      if (moment.utc(event.date).isAfter(endDate)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n\r\n/**\r\n* @param {Object[]} events The list of events to sort.\r\n* @param {Object} sortOption The sort by and sort order options.\r\n* @param {string} sortOption.by\r\n* @param {string} sortOption.order \r\n* @param {boolean} isSearch Whether the list of events is from the search page.\r\n* @return {Object[]} A list of events sorted according to sortOption.\r\n*/\r\nfunction sortEvents(events, sortOption, isSearch = false) {\r\n  if (sortOption.by && sortOption.order) {\r\n    events = orderBy(events, [sortOption.by], [sortOption.order]);\r\n  } else {\r\n    events = orderBy(events, [isSearch ? 'value' : 'date'], [ORDER_OPERATORS.desc]);\r\n  }\r\n\r\n  return events;\r\n}\r\n","import { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from './database';\r\nimport { orderBy } from 'lodash';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * @return {Object[]} The list of persons sorted by full_name.\r\n */\r\nexport async function getAllPeople() {\r\n  try {\r\n    const allPeople = await db.selectRowsAsArray(\r\n      'person',\r\n      [],\r\n      new OrderCondition(['full_name', ORDER_OPERATORS.asc])\r\n    );\r\n    return allPeople;\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} personId The person's id.\r\n * @return {Object} The voting records and details of the person.\r\n */\r\nexport async function getVotesForPerson(personId) {\r\n  try {\r\n    const formattedVotes = [];\r\n    const person = await db.selectRowById('person', personId);\r\n    const votes = await db.selectRowsAsArray(\r\n      'vote',\r\n      [new WhereCondition(['person_id', WHERE_OPERATORS.eq, personId])],\r\n    );\r\n    const eventMinutesItemsPromises = votes.map(vote => db.selectRowById('event_minutes_item', vote.event_minutes_item_id));\r\n    const eventMinutesItems = await Promise.all(eventMinutesItemsPromises);\r\n    const minutesItemsPromises = eventMinutesItems.map(item => db.selectRowById('minutes_item', item.minutes_item_id));\r\n    const minutesItems = await Promise.all(minutesItemsPromises);\r\n    // commented this out for now, but we could link to the file if we get this data\r\n    // const allMinuteFiles = await getAllResources('minutes_item_file')\r\n    const eventsPromises = eventMinutesItems.map(item => db.selectRowById('event', item.event_id));\r\n    const events = await Promise.all(eventsPromises);\r\n    const allBodies = await db.selectRowsAsArray('body');\r\n\r\n    votes.forEach((voteData, i) => {\r\n      const eventMinuteItem = eventMinutesItems[i];\r\n      const minuteItem = minutesItems[i];\r\n      const event = events[i];\r\n      const body = allBodies.find(item => item.id === event.body_id);\r\n      // const file = allMinuteFiles.find(item => item.minutes_item_id === minuteItem.id)\r\n      const formattedVote = {\r\n        id: voteData.id,\r\n        matter: minuteItem.matter,\r\n        name: minuteItem.name,\r\n        // what this person voted\r\n        voteForPerson: voteData.decision,\r\n        // what the council decided\r\n        decision: eventMinuteItem.decision,\r\n        eventId: eventMinuteItem.event_id,\r\n        index: eventMinuteItem.index,\r\n        eventDate: moment.utc(event.event_datetime.toMillis()).toISOString(),\r\n        body_name: body.name\r\n        // file\r\n      }\r\n      formattedVotes.push(formattedVote)\r\n    });\r\n    const sortedVotes = orderBy(formattedVotes, ['eventDate', 'index'], ['desc', 'desc']);\r\n    return { ...person, votes: sortedVotes };\r\n  } catch (e) {\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport * as apiFunctions from '../api';\r\n\r\n/**\r\n * A reducer to manage the state of data fetching from api\r\n * @param {Object} state The state.\r\n * @param {Boolean} state.isLoading Whether fetching the data is in progress.\r\n * @param {Boolean} state.isError Whether fetching the data failed.\r\n * @param {Object} state.error The error object.\r\n * @param {Object} state.data The resulting data from api call.\r\n * @param {Object} action The action to change the state.\r\n * @param {String} action.type The str description of the action.\r\n * @param {Object} [action.payload] The action's data.\r\n * @return {Object} A new state.\r\n */\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload.data,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n        error: action.payload.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * A custom hook for data fetching from api.\r\n * @param {String} functionName The name of the api function to call.\r\n * @param {Object[]} initialFunctionArgs The list of args for the api function.\r\n * @param {Object} initialData The initial data to be returned by api function.\r\n * @return {Object[]} The state of the api function call and a function\r\n * to update the list of args.\r\n */\r\nconst useDataApi = (functionName, initialFunctionArgs, initialData) => {\r\n  // The list of args and a function to update the list.\r\n  const [functionArgs, setFunctionArgs] = useState(initialFunctionArgs);\r\n  // state is a React state of the api function call. dispatch is used to send\r\n  // an action to dataFetchReducer to update the state.\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    error: null,\r\n    data: initialData,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // a boolean flag to prevent setting React state when the component is unmounted\r\n    let didCancel = false;\r\n\r\n    const fetchData = async () => {\r\n      // dispatch fetching data is in progress\r\n      dispatch({ type: 'FETCH_INIT' });\r\n\r\n      try {\r\n        // fetch data from api\r\n        let data;\r\n        if (functionArgs) {\r\n          data = await apiFunctions[functionName](...functionArgs);\r\n        } else {\r\n          data = await apiFunctions[functionName]();\r\n        }\r\n        if (!didCancel) {\r\n          // dispatch fetching data succeeded \r\n          dispatch({ type: 'FETCH_SUCCESS', payload: { data: data } });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          // dispatch fetching data failed\r\n          dispatch({ type: 'FETCH_FAILURE', payload: { error: error } });\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    // return a clean up function for when the component unmounts\r\n    return () => {\r\n      // a true boolean flag to let data fetching logic know that it shouldn't set React state\r\n      didCancel = true;\r\n    };\r\n  }, [functionName, functionArgs]);\r\n\r\n  return [state, setFunctionArgs];\r\n};\r\n\r\nexport default useDataApi;\r\n","import React from 'react';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport EventsFilter from '../components/EventsFilter';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst EventsFilterContainer = ({\r\n  filters,\r\n  handlePopupClose,\r\n  sortByOptions\r\n}) => {\r\n  const [apiState] = useDataApi('getAllBodies', null, null);\r\n\r\n  return (\r\n    <DataApiContainer showLoader={false} apiState={apiState}>\r\n      <EventsFilter\r\n        allBodies={apiState.data}\r\n        filters={filters}\r\n        handlePopupClose={handlePopupClose}\r\n        sortByOptions={sortByOptions}\r\n      />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default EventsFilterContainer;\r\n","import React from 'react';\r\n\r\nfunction useDocumentTitle(title) {\r\n  React.useEffect(() => {\r\n    document.title = title;\r\n\r\n    return () => {\r\n      document.title = 'Council Data Project - Seattle';\r\n    };\r\n  }, [title]);\r\n}\r\n\r\nexport default useDocumentTitle;","import React from 'react';\r\n\r\n/**\r\n * @param {Object} checkboxes The object representation of a list of checkboxes,\r\n * where the keys are the different options, and each value is a boolean(whether the option is selected).\r\n * @return {string[]} The list of selected options.\r\n */\r\nexport function getSelectedOptions(checkboxes) {\r\n  return Object.keys(checkboxes).filter(k => checkboxes[k]);\r\n}\r\n\r\n/**\r\n* @param {Object} initialState The inital filter object, where the keys are the filter options and values are the filter values.\r\n* @param {string} filterName The name of the filter. It also used as the default text representation,\r\n* when all filter values are the default filter value.\r\n* @param {(boolean|string)} defaultData The default filter value.\r\n* @param {Function} textRepFunction The function to generate the text representation of the filter object.\r\n* @return {Object} An object that encapsulates the fitler object state along with other methods to handle state changes\r\n* and get other useful informations about the state.\r\n*/\r\nfunction useFilter(initialState, filterName, defaultData, textRepFunction) {\r\n  // value is the filter object, set is the function that updates it\r\n  const [value, set] = React.useState(initialState);\r\n\r\n  /**\r\n   * Assign the default filter value to all filter options.\r\n   */\r\n  const clear = () => {\r\n    set(prevValue => {\r\n      const newValue = { ...prevValue };\r\n      Object.keys(newValue).forEach(option => newValue[option] = defaultData);\r\n      return newValue;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback for when a filter value has changed in order\r\n   * to set the filter option to a new filter value.\r\n   * @param {string} option The filter option.\r\n   * @param {(string|boolean)} dataValue The new filter value.\r\n   */\r\n  const handleChange = (option, dataValue) => {\r\n    set(prevValue => {\r\n      return { ...prevValue, [option]: dataValue };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {string} The text representation of the filter object.\r\n   */\r\n  const getTextRep = () => {\r\n    return textRepFunction(value, filterName);\r\n  }\r\n\r\n  /**\r\n * \r\n * @return {boolean} Whether any of the filter values does not equal the default filter value.\r\n */\r\n  const isActive = () => {\r\n    return Object.values(value).some(v => v !== defaultData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} otherValue The other filter object that is of the same type as this filter object.\r\n   * @return {boolean} Whether the other filter object is the same as this filter object.\r\n   */\r\n  const isSameValue = (otherValue) => {\r\n    if (!otherValue) {\r\n      return !isActive();\r\n    }\r\n    const options = Object.keys(value);\r\n    let option;\r\n    for (option of options) {\r\n      if (value[option] && !otherValue.hasOwnProperty(option)) {\r\n        return false;\r\n      }\r\n      if ((value[option] !== otherValue[option]) && otherValue.hasOwnProperty(option)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return { filterName, value, set, clear, handleChange, getTextRep, isActive, isSameValue };\r\n}\r\n\r\nexport default useFilter;","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport DataApiContainer from \"./DataApiContainer\";\r\nimport EventCardGroup from \"../components/EventCardGroup\";\r\nimport EventsFilterContainer from \"./EventsFilterContainer\";\r\nimport { getDateText } from \"../components/SelectDateRange\";\r\nimport { getCheckboxText } from \"../components/SelectFilterOptions\";\r\nimport { getSortText } from \"../components/SelectSorting\";\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport useFilter, { getSelectedOptions } from \"../hooks/useFilter\";\r\nimport useDataApi from \"../hooks/useDataApi\";\r\n\r\nexport const FiltersSection = styled.div({\r\n  position: \"sticky\",\r\n  top: \"0\",\r\n  backgroundColor: \"white\",\r\n  zIndex: \"1\",\r\n  padding: \"1em 0 2em\",\r\n  \"> .ui.button\": {\r\n    marginBottom: \"0.5em\",\r\n    \"@media(max-width:500px)\": {\r\n      width: \"100%\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const ResultCount = styled.span({\r\n  display: \"block\",\r\n  color: \"grey\",\r\n  marginBottom: \"2em\"\r\n});\r\n\r\nexport const Results = styled.div({\r\n  paddingLeft: \"1em\"\r\n});\r\n\r\nconst EventCardGroupContainer = ({ query }) => {\r\n  const dateRangeFilter = useFilter({ start: '', end: '' }, 'Date', '', getDateText);\r\n  const committeeFilter = useFilter({}, 'Committee', false, getCheckboxText);\r\n  const sortFilter = useFilter({ by: '', order: '' }, 'Sort', '', getSortText);\r\n  const [apiState, setFunctionArgs] = useDataApi('getEvents', null, null);\r\n  useDocumentTitle('Committee Events');\r\n\r\n  const prevCommitteeRef = React.useRef();\r\n  const prevDateRangeRef = React.useRef();\r\n  const prevSortRef = React.useRef();\r\n\r\n  // handlePopupClose is a callback for when one of the FilterPopups in EventsFilterContainer closes. \r\n  // It will perform filtering, depending on whether any of filter values have changed.\r\n  const handlePopupClose = async () => {\r\n    if (!committeeFilter.isSameValue(prevCommitteeRef.current) ||\r\n      !dateRangeFilter.isSameValue(prevDateRangeRef.current) ||\r\n      !sortFilter.isSameValue(prevSortRef.current)) {\r\n      window.scroll(0, 0);\r\n      // update args of api function so that custom hook useDataApi will fetch new data\r\n      setFunctionArgs(() => {\r\n        const newFunctionArgs = [\r\n          dateRangeFilter.value,\r\n          getSelectedOptions(committeeFilter.value),\r\n          sortFilter.value\r\n        ]\r\n        prevCommitteeRef.current = committeeFilter.value;\r\n        prevDateRangeRef.current = dateRangeFilter.value;\r\n        prevSortRef.current = sortFilter.value;\r\n        return newFunctionArgs;\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FiltersSection>\r\n        <EventsFilterContainer\r\n          filters={[committeeFilter, dateRangeFilter]}\r\n          handlePopupClose={handlePopupClose} />\r\n      </FiltersSection>\r\n      <Results>\r\n        <DataApiContainer apiState={apiState}>\r\n          {apiState.data && <ResultCount>{apiState.data.length} results</ResultCount>}\r\n          <EventCardGroup events={apiState.data} />\r\n        </DataApiContainer>\r\n      </Results>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventCardGroupContainer;\r\n","import React from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport DataApiContainer from \"./DataApiContainer\";\r\nimport EventCardGroup from \"../components/EventCardGroup\";\r\nimport EventsFilterContainer from \"./EventsFilterContainer\";\r\nimport { getDateText } from \"../components/SelectDateRange\";\r\nimport { getCheckboxText } from \"../components/SelectFilterOptions\";\r\nimport { getSortText } from \"../components/SelectSorting\";\r\nimport { FiltersSection, ResultCount, Results } from \"./AllEvents\";\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport useFilter, { getSelectedOptions } from \"../hooks/useFilter\";\r\nimport useDataApi from \"../hooks/useDataApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EventCardGroupContainer = ({\r\n  query,\r\n}) => {\r\n  const [searchQuery, setSearchQuery] = React.useState(query);\r\n  const dateRangeFilter = useFilter({ start: '', end: '' }, 'Date', '', getDateText);\r\n  const committeeFilter = useFilter({}, 'Committee', false, getCheckboxText);\r\n  const sortFilter = useFilter({ by: 'value', }, 'Sort By', '', getSortText);\r\n  const [apiState, setFunctionArgs] = useDataApi(\r\n    'getEventsByIndexedTerm',\r\n    [query, dateRangeFilter.value, getSelectedOptions(committeeFilter.value), sortFilter.value],\r\n    null\r\n  );\r\n  useDocumentTitle(`Search - ${searchQuery}`);\r\n  const history = useHistory();\r\n\r\n  const onSearchQueryChange = (e, { value }) => {\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  const prevCommitteeRef = React.useRef();\r\n  const prevDateRangeRef = React.useRef();\r\n  const prevSortRef = React.useRef();\r\n  const prevSearchRef = React.useRef(query);\r\n\r\n  // handlePopupClose is a callback for when one of the FilterPopups in EventsFilterContainer closes. \r\n  // It will perform filtering, depending on whether any of filter values or the searchQuery have changed.\r\n  const handlePopupClose = () => {\r\n    if (!committeeFilter.isSameValue(prevCommitteeRef.current) ||\r\n      !dateRangeFilter.isSameValue(prevDateRangeRef.current) ||\r\n      !sortFilter.isSameValue(prevSortRef.current) ||\r\n      prevSearchRef.current !== searchQuery) {\r\n      window.scroll(0, 0);\r\n      // update args of api function so that custom hook useDataApi will fetch new data\r\n      setFunctionArgs(() => {\r\n        const newFunctionArgs = [\r\n          searchQuery,\r\n          dateRangeFilter.value,\r\n          getSelectedOptions(committeeFilter.value),\r\n          sortFilter.value\r\n        ];\r\n        prevCommitteeRef.current = committeeFilter.value;\r\n        prevDateRangeRef.current = dateRangeFilter.value;\r\n        prevSortRef.current = sortFilter.value;\r\n        prevSearchRef.current = searchQuery;\r\n        return newFunctionArgs;\r\n      });\r\n      history.replace({\r\n        pathname: '/search',\r\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    handlePopupClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FiltersSection>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group widths='2'>\r\n            <Form.Input\r\n              placeholder='Enter a keyword to search meeting transcripts'\r\n              action={<Button type='submit' primary>Search</Button>}\r\n              value={searchQuery}\r\n              onChange={onSearchQueryChange} />\r\n          </Form.Group>\r\n        </Form>\r\n        <EventsFilterContainer\r\n          filters={[committeeFilter, dateRangeFilter, sortFilter]}\r\n          handlePopupClose={handlePopupClose}\r\n          sortByOptions={['value', 'date']} />\r\n      </FiltersSection>\r\n      <Results>\r\n        <DataApiContainer apiState={apiState}>\r\n          {apiState.data && <ResultCount>{apiState.data.length} results</ResultCount>}\r\n          <EventCardGroup events={apiState.data} query={prevSearchRef.current} />\r\n        </DataApiContainer>\r\n      </Results>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventCardGroupContainer;","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport queryString from \"query-string\";\r\nimport EventCardGroup from \"../containers/EventCardGroup\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst Search = ({ location }) => {\r\n  const { q } = queryString.parse(location.search);\r\n  let query = q ? q.trim().replace(/\\+/g, ' ') : '';\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <EventCardGroup\r\n            query={query}\r\n          />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","function hhmmss(sec_num) {\r\n  sec_num = parseInt(sec_num, 10); // don't forget the second param\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n  var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n  if (hours < 10) {\r\n    hours = \"0\" + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  return hours + \":\" + minutes + \":\" + seconds;\r\n}\r\n\r\nexport default hhmmss;\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List } from \"react-virtualized\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport styled from \"@emotion/styled\";\r\nimport hhmmss from \"../utils/hhmmss\";\r\n\r\nconst TranscriptItem = styled.div({\r\n  // Increase spacing around each transcript item\r\n  margin: \"1em 0.2em\"\r\n});\r\n\r\nconst TranscriptItemText = styled.div({\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5em\"\r\n});\r\n\r\nconst TimeStamp = styled.div({\r\n  // Increase vertical spacing between TranscriptItemText and TimeStamp\r\n  marginTop: \"10px\",\r\n  \".ui.button\": {\r\n    // Make timestamp button's padding smaller\r\n    padding: \"0.8em !important\"\r\n  }\r\n});\r\n\r\nconst EventTranscriptSearch = ({\r\n  // The search transcript query\r\n  searchText,\r\n  // The list of timestamped text that contains the searchText\r\n  transcript,\r\n  // Callback to change the event video's current time to the start_time of a timestamped text\r\n  handleSeek\r\n}) => {\r\n  // Stores the CellMeasurer's measurements of all transcript items\r\n  const cache = new CellMeasurerCache({\r\n    // The width of transcript items are the same\r\n    fixedWidth: true,\r\n    // The height of transcript items are variable, with the default height being 100px\r\n    defaultHeight: 100,\r\n  });\r\n\r\n  const onResize = () => {\r\n    // Need to clear all transcript items' measurements on document resize\r\n    cache.clearAll();\r\n  };\r\n\r\n  const Row = ({ index, parent, key, style }) => (\r\n    // Row is responsible for rendering a transcript item\r\n    // CellMeasurer will dynamically determine the height of a transcript item,\r\n    // or use the cache to determine the height\r\n    <CellMeasurer\r\n      key={key}\r\n      cache={cache}\r\n      parent={parent}\r\n      columnIndex={0}\r\n      rowIndex={index}\r\n    >\r\n      <div style={style}>\r\n        <TranscriptItem>\r\n          <TranscriptItemText>\r\n            <Highlighter\r\n              searchWords={[searchText]}\r\n              autoEscape={true}\r\n              textToHighlight={transcript[index].text}\r\n            />\r\n          </TranscriptItemText>\r\n          <TimeStamp>\r\n            <Button size=\"tiny\" onClick={() => handleSeek(transcript[index].start_time)}>\r\n              <Icon name=\"play\" />\r\n              {hhmmss(transcript[index].start_time)}\r\n            </Button>\r\n          </TimeStamp>\r\n        </TranscriptItem>\r\n      </div>\r\n    </CellMeasurer>\r\n  );\r\n\r\n  return (\r\n    <AutoSizer onResize={onResize}>\r\n      {({ width, height }) => (\r\n        <List\r\n          deferredMeasurementCache={cache}\r\n          height={height}\r\n          rowCount={transcript.length}\r\n          rowHeight={cache.rowHeight}\r\n          rowRenderer={Row}\r\n          scrollToIndex={0}\r\n          style={{ willChange: \"\" }}\r\n          width={width}\r\n        />\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n}\r\n\r\nexport default React.memo(EventTranscriptSearch);\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport EventTranscriptSearch from \"./EventTranscriptSearch\";\r\nimport isSubstring from \"../utils/isSubstring\";\r\n\r\nconst StyledEventSearch = styled.div({\r\n  margin: \"1em 0\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  boxSizing: \"border-box\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    width: \"38%\",\r\n    margin: \"0 0 0 20px\"\r\n  }\r\n});\r\n\r\nconst Subheader = styled.h2({ width: \"100%\" });\r\n\r\nconst SearchInput = styled(Input)({\r\n  width: \"100%\",\r\n  fontSize: \"16px !important\",\r\n  lineHeight: \"1.5 !important\"\r\n});\r\n\r\nconst SearchResultCount = styled.span({\r\n  display: \"block\",\r\n  marginTop: \"1em\",\r\n  color: \"grey\",\r\n  paddingLeft: \"15px\"\r\n});\r\n\r\nconst TranscriptSearchHelpMessage = styled.span({\r\n  display: \"block\",\r\n  marginTop: \"1em\",\r\n  fontSize: \"16px !important\",\r\n  lineHeight: \"1.5 !important\",\r\n  paddingLeft: \"15px\"\r\n});\r\n\r\nconst SearchResultsWrapper = styled.div({\r\n  marginTop: \"1em\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius: \"0.28rem\",\r\n  boxSizing: \"border-box\",\r\n  minHeight: \"calc(.5625 * 90vw)\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    flex: \"1 1 auto\",\r\n    minHeight: \"0\"\r\n  }\r\n});\r\n\r\nconst EventSearch = ({\r\n  transcript,\r\n  handleSeek,\r\n  query\r\n}) => {\r\n  const [transcriptSearchText, setTranscriptSearchText] = React.useState(query);\r\n\r\n  const handleTranscriptSearch = (e, { value }) => {\r\n    setTranscriptSearchText(value);\r\n  };\r\n\r\n  const transcriptItems = transcript.filter(({ text }) => isSubstring(text, transcriptSearchText));\r\n\r\n  return (\r\n    <StyledEventSearch>\r\n      <Subheader>Search Transcript</Subheader>\r\n      <SearchInput\r\n        onChange={handleTranscriptSearch}\r\n        value={transcriptSearchText}\r\n        placeholder=\"Search transcript\"\r\n      />\r\n      {transcriptSearchText !== \"\" && (\r\n        <SearchResultCount>\r\n          {transcriptItems.length} results\r\n        </SearchResultCount>\r\n      )}\r\n      {transcriptSearchText !== \"\" && transcriptItems.length > 0 && (\r\n        <SearchResultsWrapper>\r\n          <EventTranscriptSearch\r\n            searchText={transcriptSearchText}\r\n            transcript={transcriptItems}\r\n            handleSeek={handleSeek}\r\n          />\r\n        </SearchResultsWrapper>\r\n      )}\r\n      {transcriptSearchText === \"\" && (\r\n        <TranscriptSearchHelpMessage>\r\n          Enter a search term to get results.\r\n        </TranscriptSearchHelpMessage>\r\n      )}\r\n    </StyledEventSearch>\r\n  );\r\n};\r\n\r\nexport default EventSearch;\r\n","import React, { forwardRef, Fragment, useReducer, useRef, useState } from 'react';\r\nimport { Button, Form, Icon, Input, Modal, Ref } from 'semantic-ui-react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nconst TimePointInput = styled(Input)(props => ({\r\n  // add black line below time point input\r\n  borderBottomColor: props.disabled ? 'white' : 'black',\r\n  borderBottomStyle: 'solid',\r\n  borderBottomWidth: '1.5px',\r\n  width: '10em'\r\n}));\r\n\r\nconst ShareVideoModal = styled(Modal)({\r\n  // move close icon inside modal\r\n  'i.close': {\r\n    top: '0 !important',\r\n    right: '0 !important',\r\n    color: 'black !important'\r\n  }\r\n});\r\n\r\nconst ButtonWithRef = forwardRef((props, ref) => (\r\n  // Forward a React reference into a button.\r\n  // Needed in order to provide additional styling to share button,\r\n  // that serves as a trigger to open a modal\r\n  <Ref innerRef={ref}>\r\n    <Button {...props} />\r\n  </Ref>\r\n));\r\n\r\nconst ShareButton = styled(ButtonWithRef)({\r\n  backgroundColor: 'white !important',\r\n  'i.share': {\r\n    // Increase the distance share icon and share text\r\n    paddingRight: '1.5em'\r\n  }\r\n});\r\n\r\n// In anticipation of other buttons to be added next to share button,\r\n// make this inline-block so that they all appear on the same horizontal line.\r\nconst ModalMountNode = styled.div({\r\n  display: 'inline-block'\r\n});\r\n\r\n/**\r\n *\r\n * @param {string} timePointStr The str representation of a time point. e.g. 1:23:15\r\n * @return {(int|NaN)} The time point in total seconds. Or NaN, if the str contains\r\n * any non-digits.\r\n */\r\nconst toSeconds = (timePointStr) => {\r\n  const nums = timePointStr.trim().split(':').reverse();\r\n  let totalSeconds = 0;\r\n  nums.forEach((num, i) => {\r\n    num = num.trim();\r\n    if (num) {\r\n      if (isNaN(num) || num.includes('-')) {\r\n        // num is not a number, or is negative\r\n        totalSeconds += NaN;\r\n      } else {\r\n        totalSeconds += parseFloat(num) * Math.pow(60, i);\r\n      }\r\n    }\r\n  });\r\n  if (totalSeconds) {\r\n    totalSeconds = Math.floor(totalSeconds);\r\n  }\r\n  return totalSeconds;\r\n};\r\n\r\n/**\r\n *\r\n * @param {(int|NaN)} totalSeconds The total number of seconds of a time point.\r\n * @return {string} The time point str. e.g. 1:23:15, or `INVALID TIME POINT` if totalSeconds is not a number.\r\n */\r\nconst toTimePointStr = (totalSeconds) => {\r\n  if (isNaN(totalSeconds)) {\r\n    return 'INVALID TIME POINT';\r\n  }\r\n\r\n  totalSeconds = Math.floor(parseFloat(totalSeconds));\r\n\r\n  let hours = Math.floor(totalSeconds / 3600);\r\n  let minutes = Math.floor((totalSeconds - (hours * 3600)) / 60);\r\n  let seconds = totalSeconds - (hours * 3600) - (minutes * 60);\r\n\r\n  if (seconds < 10) {\r\n    seconds = `0${seconds}`;\r\n  }\r\n  if (hours > 0 && minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  let timePointStr = `${minutes}:${seconds}`;\r\n  if (hours) {\r\n    timePointStr = `${hours}:${timePointStr}`;\r\n  }\r\n\r\n  return timePointStr;\r\n};\r\n\r\nconst initialTimePoint = {\r\n  // The time point str\r\n  value: '',\r\n  // Whether the user can enter a value to the time point input html element\r\n  isDisabled: false,\r\n  // Whether value(in seconds) is added to the share link url\r\n  isActive: false\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} timePoint The time point state.\r\n * @param {string} timePoint.value\r\n * @param {boolean} timePoint.isDisabled\r\n * @param {boolean} timePoint.isActive\r\n * @param {Object} action The action to change the time point state.\r\n * @param {string} action.type The str description of the action.\r\n * @param {Object} [action.payload] The action's data.\r\n * @return {Object} New time point state.\r\n */\r\nconst timePointReducer = (timePoint, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_VALUE':\r\n      return { ...timePoint, value: action.payload.value };\r\n    case 'VALIDATE_VALUE':\r\n      const newValue = toTimePointStr(toSeconds(timePoint.value));\r\n      return { ...timePoint, value: newValue };\r\n    case 'UPDATE_ISDISABLED':\r\n      return { ...timePoint, isDisabled: action.payload.isDisabled };\r\n    case 'UPDATE_ISACTIVE':\r\n      return { ...timePoint, isActive: action.payload.isActive };\r\n    default:\r\n      return timePoint;\r\n  }\r\n};\r\n\r\nconst EventShareVideo = ({\r\n  videoPlayerRef\r\n}) => {\r\n  // A reference to the html element where the modal is mounted\r\n  const mountNodeRef = useRef();\r\n  // A reference to the share link url html element\r\n  const shareLinkRef = useRef();\r\n  // A reference to the time point input html element\r\n  const timePointRef = useRef();\r\n  // Get the location object that represents the current URL\r\n  const location = useLocation();\r\n  // open is a React state, whether the modal is open. setOpen is the function to update open\r\n  const [open, setOpen] = useState(false);\r\n  // timePoint is a React state. dispatch function is used to send an action to timePointReducer\r\n  // to change the timePoint state\r\n  const [timePoint, dispatch] = useReducer(timePointReducer, initialTimePoint);\r\n\r\n  // Callback to handle opening of modal\r\n  const handleOpen = () => {\r\n    let currentTime;\r\n    if (videoPlayerRef.current) {\r\n      const { player } = videoPlayerRef.current.getState();\r\n      currentTime = player.readyState === 4 ? player.currentTime : 0;\r\n    } else {\r\n      currentTime = 0;\r\n    }\r\n    // initially, the time point value is the video's current time\r\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: toTimePointStr(currentTime) } });\r\n    // initially, the user can enter a value for the time point input html element\r\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: false } });\r\n    // initially, the time point value(in seconds) is not added to the share link url\r\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: false } });\r\n    setOpen(true);\r\n  };\r\n\r\n  // Callback to handle closing of modal\r\n  const handleClose = () => {\r\n    timePointRef.current.inputRef.current.removeEventListener('blur', validateTimePointCb);\r\n    setOpen(false);\r\n  };\r\n\r\n  // Callback to handle `Start at` checkbox changes\r\n  const onTimePointIsActiveChange = (e, { checked }) => {\r\n    dispatch({ type: 'VALIDATE_VALUE' });\r\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: !checked } });\r\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: checked } });\r\n  };\r\n\r\n  // Callback to handle copy share link url button click\r\n  const onCopyShareLink = () => {\r\n    // select the content of shareLinkRef, which is the share link url\r\n    shareLinkRef.current.select();\r\n    // copy the content to the clipboard\r\n    document.execCommand('copy');\r\n  };\r\n\r\n  // Get the share link url\r\n  const getVideoShareLink = () => {\r\n    let totalSeconds = toSeconds(timePoint.value);\r\n    let videoShareLink = `${document.location.href.split('#')[0]}#${location.pathname}`;\r\n    return (timePoint.isActive && totalSeconds) ?\r\n      `${videoShareLink}?t=${totalSeconds}` :\r\n      `${videoShareLink}`;\r\n  };\r\n\r\n  // Callback to handle time point value changes\r\n  const onTimePointValueChange = (e, { value }) => {\r\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: value } });\r\n  };\r\n\r\n  // Callback to handle when the user press enter while the time point input html element is in focus,\r\n  // or when the time point input html element becomes out of focus\r\n  const validateTimePointCb = () => {\r\n    dispatch({ type: 'VALIDATE_VALUE' });\r\n  };\r\n\r\n  // Callback to handle when the modal is mounted\r\n  const onModalMount = () => {\r\n    // Add an event listener for when the time point input html element becomes out of focus\r\n    timePointRef.current.inputRef.current.addEventListener('blur', validateTimePointCb);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ShareVideoModal\r\n        closeIcon\r\n        trigger={\r\n          <ShareButton compact icon onClick={handleOpen}>\r\n            <Icon name='share' />\r\n            SHARE\r\n          </ShareButton>\r\n        }\r\n        open={open}\r\n        onClose={handleClose}\r\n        mountNode={mountNodeRef.current}\r\n        onMount={onModalMount}\r\n        size='small'\r\n      >\r\n        <Modal.Header>Share</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            fluid\r\n            action={<Button primary content='Copy' onClick={onCopyShareLink} />}\r\n            ref={shareLinkRef}\r\n            value={getVideoShareLink()} />\r\n          <br />\r\n          <Form onSubmit={validateTimePointCb}>\r\n            <Form.Group>\r\n              <Form.Checkbox\r\n                label={`Start at`}\r\n                checked={timePoint.isActive}\r\n                onChange={onTimePointIsActiveChange} />\r\n              <TimePointInput\r\n                disabled={timePoint.isDisabled}\r\n                transparent\r\n                value={timePoint.value}\r\n                onChange={onTimePointValueChange}\r\n                ref={timePointRef} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n      </ShareVideoModal>\r\n      <ModalMountNode ref={mountNodeRef} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EventShareVideo;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MinuteList = styled.ol({\r\n  listStylePosition: \"outside\",\r\n  paddingLeft: \"1.5em\"\r\n});\r\n\r\nconst MinuteTitle = styled.div({\r\n  fontSize: \"1em\",\r\n  fontWeight: \"500\"\r\n});\r\n\r\nconst MinuteDescription = styled.div({\r\n  fontSize: \"0.95em\"\r\n});\r\n\r\nconst FileList = styled.ul({\r\n  listStylePosition: \"outside\",\r\n  listStyleType: \"disc\",\r\n  paddingLeft: \"2em\"\r\n});\r\n\r\nconst EventMinutes = ({\r\n  minutes,\r\n  scPageUrl\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>Minutes</h3>\r\n      <MinuteList>\r\n        {minutes.map(({ minutes_item }) => (\r\n          <li key={minutes_item.id}>\r\n            <MinuteTitle>{minutes_item.matter ? minutes_item.matter : minutes_item.name}</MinuteTitle>\r\n            {minutes_item.matter && minutes_item.matter !== minutes_item.name && <MinuteDescription>{minutes_item.name}</MinuteDescription>}\r\n            {minutes_item.file.length > 0 && <FileList>\r\n              {minutes_item.file.map(({ id, name, uri }) => (\r\n                <li key={id}>\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={uri}>{name}</a>\r\n                </li>\r\n              ))}\r\n            </FileList>}\r\n          </li>\r\n        ))}\r\n      </MinuteList>\r\n      <h3>Links</h3>\r\n      <a href={scPageUrl}>Seattle Channel Event Page</a>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventMinutes;","import React from \"react\";\r\nimport { Button, Divider, Header, Icon } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport hhmmss from \"../utils/hhmmss\";\r\n\r\nconst TranscriptItem = styled.div(props => ({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  // Make vertical spacing between transcript items of timestamped-speaker-turns format a little\r\n  // bit smaller than other transcript formats.\r\n  margin: props.isSpeakerTurnFormat ? \"2.5em 0.2em\" : \"3em 0.2em\"\r\n}));\r\n\r\nconst TranscriptItemText = styled.div({\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5em\",\r\n  \"@media(min-width:1000px)\": {\r\n    // For screen width >= 1000px\r\n    // Decrease text's width\r\n    width: \"85%\",\r\n    // Make it appear after TimeStamp\r\n    order: \"1\"\r\n  }\r\n});\r\n\r\nconst TimeStamp = styled.div({\r\n  width: \"100%\",\r\n  // Increase the vertical spacing between TranscriptItemText and Timestamp\r\n  marginTop: \"10px\",\r\n  \"@media(min-width:1000px)\": {\r\n    // For screen width >= 1000px\r\n    // Decrease timestamp's width\r\n    width: \"15%\",\r\n    // Make it appear before TranscriptItemText\r\n    order: \"0\",\r\n    marginTop: \"0\"\r\n  }\r\n});\r\n\r\n/**\r\n * \r\n * @param {Object} transcriptItem The transcript item.\r\n * @param {String} transcriptItem.text\r\n * @param {Number} transcriptItem.start_time\r\n * @param {Number} transcriptItem.end_time\r\n * @param {String} [transcriptItem.speaker]\r\n * @param {Boolean} isSpeakerTurnFormat Whether transcriptItem is from timestamped-speaker-turns format.\r\n * @param {Function} handleSeek Callback to change the event video's current time to the start_time.\r\n * @return The JSX of the transcript item.\r\n */\r\nconst transcriptItemRenderer = (transcriptItem, isSpeakerTurnFormat, handleSeek) => {\r\n  return (\r\n    <div key={transcriptItem.start_time}>\r\n      {(!!transcriptItem.speaker) &&\r\n        <Divider horizontal>\r\n          <Header as='h3'>\r\n            {transcriptItem.speaker}\r\n          </Header>\r\n        </Divider>}\r\n      <TranscriptItem isSpeakerTurnFormat={isSpeakerTurnFormat}>\r\n        <TranscriptItemText>\r\n          {transcriptItem.text}\r\n        </TranscriptItemText>\r\n        <TimeStamp>\r\n          <Button size=\"tiny\" onClick={() => handleSeek(transcriptItem.start_time)}>\r\n            <Icon name=\"play\" />\r\n            {hhmmss(transcriptItem.start_time)}\r\n          </Button>\r\n        </TimeStamp>\r\n      </TranscriptItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EventTranscript = ({\r\n  handleSeek,\r\n  transcript\r\n}) => {\r\n  // List of timestamped texts\r\n  let transcriptItems = [];\r\n  const isSpeakerTurnFormat = transcript.format.includes(\"speaker-turns\");\r\n  if (isSpeakerTurnFormat) {\r\n    transcript.data.forEach(speakerTurn => {\r\n      // Add speaker field for first timestamped sentence\r\n      speakerTurn.data[0].speaker = speakerTurn.speaker || \"New Speaker\";\r\n      transcriptItems.push(...speakerTurn.data);\r\n    });\r\n  } else {\r\n    transcriptItems = transcript.data;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        transcriptItems.map(transcriptItem => {\r\n          return transcriptItemRenderer(\r\n            transcriptItem,\r\n            transcript.format.includes(\"speaker-turns\"),\r\n            handleSeek\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventTranscript);\r\n","import React from 'react'\r\nimport { Table } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst Headers = [\r\n  {\r\n    accessor: 'matter',\r\n    text: 'Matter',\r\n    width: '2'\r\n  },\r\n  {\r\n    accessor: 'decision',\r\n    text: 'Decision',\r\n    width: '1'\r\n  },\r\n  {\r\n    accessor: 'name',\r\n    text: 'Name',\r\n    width: '6'\r\n  },\r\n  {\r\n    accessor: 'votingRecords',\r\n    text: 'Vote',\r\n    width: '5'\r\n  }\r\n]\r\n\r\nconst MiniTable = styled('div')({\r\n  display: 'flex'\r\n});\r\n\r\nconst Person = styled('div')({\r\n  width: '70%'\r\n});\r\n\r\nconst Decision = styled('div')({\r\n  width: '30%'\r\n});\r\n\r\nconst StyledTableHeader = styled(Table.Header)({\r\n  '@media(max-width:767px)': {\r\n    display: 'none !important'\r\n  }\r\n});\r\n\r\n\r\nconst VotingTable = ({ votingData, isPerson }) => (\r\n  <Table striped>\r\n    <StyledTableHeader>\r\n      <Table.Row>\r\n        {Headers.map(headerMetaData => (<Table.HeaderCell\r\n          key={headerMetaData.text}>{headerMetaData.text}\r\n          </Table.HeaderCell> \r\n        ))}\r\n        {/* If we are rendering votes for a person, we want to link to the event */}\r\n        {isPerson && <Table.HeaderCell key={'Event'}>Event</Table.HeaderCell>}\r\n      </Table.Row>\r\n    </StyledTableHeader>\r\n    <Table.Body>\r\n      {votingData.map(votingDatum => (\r\n        <Table.Row key={votingDatum.id}>\r\n          {Headers.map(headerMetaData => {\r\n            if (headerMetaData.accessor !== 'votingRecords') {\r\n              return (\r\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\r\n                  {votingDatum[headerMetaData.accessor]}\r\n                </Table.Cell>\r\n              )\r\n            }\r\n            if (votingDatum.formattedIndividualVotes) {\r\n              return (\r\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\r\n                  {votingDatum.formattedIndividualVotes.map(record => {\r\n                    return (\r\n                      <MiniTable key={record.full_name}>\r\n                        <Person>\r\n                          <Link to={`/people/${record.person_id}`}>\r\n                            {record.full_name}\r\n                          </Link>\r\n                        </Person>\r\n                        <Decision>\r\n                          {record.decision}\r\n                        </Decision>\r\n                      </MiniTable>\r\n                    )\r\n                  })}\r\n                </Table.Cell>\r\n              )\r\n            } else {\r\n              return (\r\n                <React.Fragment key={headerMetaData.accessor}>\r\n                  <Table.Cell singleLine={true}>\r\n                    {votingDatum.voteForPerson}\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    <Link to={`/events/${votingDatum.eventId}`}>\r\n                      <span>{votingDatum.body_name}</span>\r\n                    </Link>\r\n                    <div>{getDateTime(votingDatum.eventDate)}</div>\r\n                  </Table.Cell>\r\n                </React.Fragment>\r\n              )\r\n            }\r\n          })}\r\n        </Table.Row>\r\n      ))}\r\n    </Table.Body>\r\n  </Table>\r\n)\r\n\r\nexport default VotingTable\r\n","import React from \"react\";\r\nimport { Menu, Sticky } from \"semantic-ui-react\";\r\nimport EventMinutes from \"./EventMinutes\";\r\nimport EventTranscript from \"./EventTranscript\";\r\nimport VotingTable from \"./VotingTable\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledEventTabs = styled.div({\r\n  margin: \"1em 0\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  lineHeight: \"1.5\",\r\n  \"a.item\": {\r\n    fontSize: \"1.3em !important\"\r\n  }\r\n});\r\n\r\nconst StyledEventMenu = styled(Menu)({\r\n  borderBottom: \"0 !important\",\r\n  marginBottom: \"1em !important\",\r\n  paddingTop: \"1em !important\",\r\n  backgroundColor: \"white !important\",\r\n  zIndex: \"0 !important\",\r\n  width: \"100%\"\r\n});\r\n\r\nconst EventTabs = ({\r\n  minutes,\r\n  scPageUrl,\r\n  transcript,\r\n  votes,\r\n  handleSeek,\r\n  topOffset,\r\n  mediaQueriesMatches\r\n}) => {\r\n  // Which menu item is visible\r\n  const [activeItem, setActiveItem] = React.useState(\"details\");\r\n  // A React reference to StyledEventTabs\r\n  const contextRef = React.useRef(null);\r\n\r\n  // Callback to handle menu item click event\r\n  const handleItemClick = (e, { name }) => {\r\n    const domRect = contextRef.current.getBoundingClientRect();\r\n    if (domRect.top < 0) {\r\n      // If the top of contextRef is not visible, scroll so that the top of contextRef\r\n      // is aligned with the top of viewport.\r\n      contextRef.current.scrollIntoView(true);\r\n      if (!mediaQueriesMatches) {\r\n        // This is the case where video is fixed to the top and Menu is below the video.\r\n        // Need to scroll upward by video's height so that the, for example, first minute is visible\r\n        // below the menu.\r\n        window.scrollBy(0, -topOffset);\r\n      }\r\n    }\r\n    setActiveItem(name);\r\n  };\r\n\r\n  return (\r\n    <StyledEventTabs ref={contextRef}>\r\n      <Sticky\r\n        context={contextRef}\r\n        offset={topOffset}\r\n        styleElement={{ zIndex: \"1\" }}\r\n      >\r\n        <StyledEventMenu secondary pointing>\r\n          <Menu.Item active={activeItem === \"details\"} name=\"details\" onClick={handleItemClick} />\r\n          <Menu.Item active={activeItem === \"transcript\"} name=\"transcript\" onClick={handleItemClick} />\r\n          <Menu.Item active={activeItem === \"votes\"} name=\"votes\" onClick={handleItemClick} />\r\n        </StyledEventMenu>\r\n      </Sticky>\r\n      {{\r\n        details: <EventMinutes minutes={minutes} scPageUrl={scPageUrl} />,\r\n        transcript: <EventTranscript\r\n          handleSeek={handleSeek}\r\n          transcript={transcript}\r\n        />,\r\n        votes: votes.length ? <VotingTable votingData={votes} /> : <div>No votes found for this event.</div>\r\n      }[activeItem]}\r\n    </StyledEventTabs>\r\n  );\r\n};\r\n\r\nexport default React.memo(EventTabs);\r\n","import { useState, useEffect } from 'react';\r\n/**\r\n * \r\n * @param {string} mediaQuery The string representing the media query to parse, e.g. (min-width:500px)\r\n * @return {boolean} A Boolean that is true if the document currently matches the media query, or false if not.\r\n */\r\nfunction useMatchMedia(mediaQuery) {\r\n  const [matches, setMatches] = useState(() => matchMedia(mediaQuery).matches);\r\n\r\n  useEffect(() => {\r\n    const mediaQueryList = matchMedia(mediaQuery);\r\n\r\n    const onChange = (event) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    mediaQueryList.addListener(onChange);\r\n\r\n    return(() =>{\r\n      mediaQueryList.removeListener(onChange);\r\n    })\r\n  }, [mediaQuery]);\r\n\r\n  return matches;\r\n}\r\n\r\nexport default useMatchMedia;","import React from \"react\";\r\nimport EventSearch from \"./EventSearch\";\r\nimport EventShareVideo from \"./EventShareVideo\";\r\nimport EventTabs from \"./EventTabs\";\r\nimport { Segment, Visibility } from \"semantic-ui-react\";\r\nimport {\r\n  Player,\r\n  BigPlayButton,\r\n  ControlBar,\r\n  PlaybackRateMenuButton,\r\n  VolumeMenuButton\r\n} from \"video-react\";\r\nimport useMatchMedia from \"../hooks/useMatchMedia\";\r\nimport styled from \"@emotion/styled\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\nimport \"video-react/dist/video-react.css\";\r\n\r\nconst StyledEvent = styled.div({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"space-between\"\r\n});\r\n\r\nconst Header = styled.div({\r\n  width: \"100%\",\r\n  margin: \"1em 0\"\r\n});\r\n\r\nconst EventDate = styled.span({\r\n  margin: \"0.1em 0\",\r\n  color: \"grey\",\r\n  fontWeight: \"400\"\r\n});\r\n\r\nconst InfoSegment = styled(Segment.Inline)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  width: \"100%\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    width: \"59%\"\r\n  }\r\n});\r\n\r\nconst FixedSentinel = styled.div({\r\n  position: \"absolute\",\r\n  left: \"0\",\r\n  right: \"0\",\r\n  visibility: \"hidden\",\r\n  height: \"90px\",\r\n  backgroundColor: \"yellow\"\r\n});\r\n\r\nconst DummyContainer = styled.div(props => ({\r\n  position: \"relative\",\r\n  display: \"none\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    display: props.isFixed ? \"block\" : \"none\",\r\n    width: \"59%\"\r\n  }\r\n}));\r\n\r\nconst DummyDiv = styled.div({\r\n  position: \"absolute\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  backgroundColor: \"black\",\r\n  height: \"100%\",\r\n  width: \"100%\"\r\n});\r\n\r\nconst PlayerCloseButton = styled.button(props => ({\r\n  position: \"absolute\",\r\n  top: \"5px\",\r\n  right: \"5px\",\r\n  opacity: \"0.5\",\r\n  borderRadius: \"50%\",\r\n  zIndex: 10,\r\n  visibility: props.isFixed ? \"visible\" : \"hidden\",\r\n  \"&:hover\": { opacity: 0.9 }\r\n}));\r\n\r\nconst PlayerContainer = styled.div(props => ({\r\n  width: \"100%\",\r\n  position: \"sticky\",\r\n  top: \"0\",\r\n  zIndex: \"2\",\r\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\r\n    position: props.isFixed ? \"fixed\" : \"relative\",\r\n    width: props.isFixed ? \"20vw\" : \"59%\",\r\n    right: \"0\"\r\n  }\r\n}));\r\n\r\nconst PlayerWrapper = styled.div({\r\n  position: \"relative\",\r\n  paddingTop: \"56.25%\"\r\n});\r\n\r\nconst Event = ({\r\n  id,\r\n  eventData,\r\n  query,\r\n  videoTimePoint\r\n}) => {\r\n  const {\r\n    name: title,\r\n    date,\r\n    minutes,\r\n    scPageUrl,\r\n    videoUrl,\r\n    transcript,\r\n    votes\r\n  } = eventData;\r\n  const videoPlayerRef = React.useRef(null);\r\n  //isFixed is a boolean, whether the video is fixed to the top-right\r\n  const [isFixed, setIsFixed] = React.useState(false);\r\n  //mediaQueriesMatches is a boolean, whether the video can be fixed to the top-right\r\n  const mediaQueriesMatches = useMatchMedia(\"(min-aspect-ratio:5/4), (min-width:1200px)\");\r\n  //videoOffSetHeight is used to determine vertical position of event tabs menu when it is sticky\r\n  const [videoOffSetHeight, setVideoOffsetHeight] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    //html5 video element\r\n    const video = videoPlayerRef.current.video.video;\r\n    //disable pip button for chrome, can't disable for firefox.\r\n    video.disablePictureInPicture = true;\r\n    setVideoOffsetHeight(video.offsetHeight);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const onResize = () => {\r\n      const video = videoPlayerRef.current.video.video;\r\n      setVideoOffsetHeight(video.offsetHeight);\r\n    };\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleSeek = seconds => {\r\n    videoPlayerRef.current.seek(parseFloat(seconds));\r\n    const { player } = videoPlayerRef.current.getState();\r\n    // if video is paused or has not started, then play video\r\n    if (player.paused || !player.hasStarted) {\r\n      videoPlayerRef.current.play();\r\n    }\r\n  };\r\n\r\n  const onBottomPassed = () => {\r\n    //bottom of FixedSentinel is not visible within viewport.\r\n    //and video can be fixed to top-right\r\n    if (mediaQueriesMatches) {\r\n      setIsFixed(true); //video is fixed to top-right\r\n    }\r\n  };\r\n\r\n  const onBottomPassedReverse = () => {\r\n    //bottom of FixedSentinel is visible within viewport\r\n    //and video can be fixed to top-right\r\n    if (mediaQueriesMatches) {\r\n      setIsFixed(false); //video is not fixed to top-right\r\n    }\r\n  };\r\n\r\n  const onPlayerCloseButtonClick = () => {\r\n    // restore player to original size\r\n    setIsFixed(false);\r\n\r\n    // pause video\r\n    videoPlayerRef.current.pause();\r\n  }\r\n\r\n  const getTranscriptTimestampedText = () => {\r\n    if (transcript.format.includes(\"speaker-turns\")) {\r\n      // Flatten speaker turn blocks to timestamped sentences\r\n      let timestampedSentences = [];\r\n      transcript.data.forEach(speakerTurnBlock => {\r\n        timestampedSentences.push(...speakerTurnBlock.data);\r\n      });\r\n      return timestampedSentences;\r\n    }\r\n    // Return timestamped texts if transcript format is not `timestamped-speaker-turns`\r\n    return transcript.data;\r\n  };\r\n\r\n  return (\r\n    <StyledEvent>\r\n      <Header>\r\n        <h1>{title}</h1>\r\n      </Header>\r\n      <InfoSegment>\r\n        <EventDate>{getDateTime(date)}</EventDate>\r\n        <Segment.Inline>\r\n          <EventShareVideo videoPlayerRef={videoPlayerRef} />\r\n        </Segment.Inline>\r\n      </InfoSegment>\r\n      <DummyContainer isFixed={isFixed}>\r\n        <PlayerWrapper>\r\n          <DummyDiv />\r\n        </PlayerWrapper>\r\n      </DummyContainer>\r\n      <PlayerContainer isFixed={isFixed}>\r\n        <PlayerCloseButton onClick={onPlayerCloseButtonClick} isFixed={isFixed}>x</PlayerCloseButton>\r\n        <Player\r\n          fluid\r\n          aspectRatio='16:9'\r\n          preload={videoTimePoint ? 'auto' : 'metadata'}\r\n          ref={videoPlayerRef}\r\n          src={videoUrl}\r\n          startTime={videoTimePoint}>\r\n          <BigPlayButton position='center' />\r\n          <ControlBar autoHide={true}>\r\n            <VolumeMenuButton vertical />\r\n            <PlaybackRateMenuButton rates={[2, 1.5, 1, 0.75]} order={6.1} />\r\n          </ControlBar>\r\n        </Player>\r\n      </PlayerContainer>\r\n      <Visibility\r\n        once={false}\r\n        onBottomPassed={onBottomPassed}\r\n        onBottomPassedReverse={onBottomPassedReverse}\r\n      >\r\n        <FixedSentinel />\r\n      </Visibility>\r\n      <EventSearch\r\n        transcript={getTranscriptTimestampedText()}\r\n        handleSeek={handleSeek}\r\n        query={query}\r\n      />\r\n      <EventTabs\r\n        minutes={minutes}\r\n        scPageUrl={scPageUrl}\r\n        transcript={transcript}\r\n        votes={votes}\r\n        handleSeek={handleSeek}\r\n        topOffset={mediaQueriesMatches ? 0 : videoOffSetHeight} //vertical position of event tabs menu when it is sticky\r\n        mediaQueriesMatches={mediaQueriesMatches}\r\n      />\r\n    </StyledEvent>\r\n  );\r\n};\r\n\r\n\r\nexport default Event;\r\n","import React from \"react\";\r\nimport DataApiContainer from \"./DataApiContainer\";\r\nimport Event from \"../components/Event\";\r\nimport useDataApi from \"../hooks/useDataApi\";\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport getDateTime from \"../utils/getDateTime\";\r\n\r\nconst EventContainer = ({ id, query, videoTimePoint }) => {\r\n  const [apiState] = useDataApi(\"getEventById\", [id], null);\r\n  useDocumentTitle(\r\n    apiState.data ? `${apiState.data.name} - ${getDateTime(apiState.data.date)}` : \"Loading...\"\r\n  );\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <Event\r\n        id={id}\r\n        eventData={apiState.data}\r\n        query={query}\r\n        videoTimePoint={videoTimePoint}\r\n      />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default EventContainer;\r\n","import React from \"react\";\r\nimport Event from \"../containers/Event\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport queryString from \"query-string\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst EventPage = ({ match, location }) => {\r\n  // The query parameters in the URL\r\n  const { q, t } = queryString.parse(location.search);\r\n\r\n  const parseQuery = () => {\r\n    // Get the search transcript query\r\n    let query = q ? q.trim().replace(/\\+/g, ' ') : '';\r\n    if (location.state) {\r\n      query = location.state.query || query;\r\n    }\r\n    return query;\r\n  }\r\n\r\n  const parseVideoTimePoint = () => {\r\n    // Get the video's starting time point\r\n    let videoTimePoint;\r\n    if (!t || isNaN(t)) {\r\n      videoTimePoint = 0;\r\n    } else {\r\n      videoTimePoint = Math.max(0, parseFloat(t));\r\n    }\r\n    return videoTimePoint;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <GeneralErrorBoundary>\r\n          <Event\r\n            id={match.params.id}\r\n            query={parseQuery()}\r\n            videoTimePoint={parseVideoTimePoint()} />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AllEvents from \"../containers/AllEvents\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\nconst Layout = styled(Container)({\r\n  minHeight: \"100vh\"\r\n});\r\n\r\nconst ContentContainer = styled(Container)({\r\n  marginTop: \"2em !important\",\r\n  marginBottom: \"5em !important\"\r\n});\r\n\r\nconst AllEventsPage = () => {\r\n  return (\r\n    <Layout>\r\n      <ContentContainer>\r\n        <h2>All Events</h2>\r\n        <GeneralErrorBoundary>\r\n          <AllEvents />\r\n        </GeneralErrorBoundary>\r\n      </ContentContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AllEventsPage;\r\n","import React, { Fragment } from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst FlexWrapContainer = styled('div')({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n})\r\n\r\nconst Card = styled('div')({\r\n    width: '250px',\r\n    border: '1px solid #d4d4d5',\r\n    boxShadow: '0 1px 3px 0 #d4d4d5',\r\n    padding: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    borderRadius: '3px',\r\n    marginRight: '2rem',\r\n    cursor: 'pointer',\r\n    transition: '.4s all',\r\n    \":hover\": {\r\n        transform: 'scale(1.15)',\r\n    }\r\n})\r\n\r\nconst CardHeading = styled('h5')({\r\n    fontWeight: 600,\r\n    fontSize: '1.2rem'\r\n})\r\n\r\n\r\nconst PeopleCardGroup = ({ people, history }) => {\r\n    return (\r\n        <Fragment>\r\n            <h2>City Council Members</h2>\r\n            <FlexWrapContainer>\r\n                {people.map(({ full_name, email, id }) => (\r\n                    <Card\r\n                        key={full_name}\r\n                        onClick={() => history.push(`/people/${id}`)}>\r\n                        <CardHeading>{full_name}</CardHeading>\r\n                        <p>City Council Member</p>\r\n                        <a href={`mailto:${email}`}>{email}</a>\r\n                    </Card>\r\n                    )\r\n                )}\r\n            </FlexWrapContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(PeopleCardGroup)\r\n","import React from 'react';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport PeopleCardGroup from '../components/PeopleCardGroup';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst PeopleCardGroupContainer = () => {\r\n  const [apiState] = useDataApi('getAllPeople', null, null);\r\n  useDocumentTitle('City Council Members');\r\n\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <PeopleCardGroup people={apiState.data} />\r\n    </DataApiContainer>\r\n  );\r\n}\r\n\r\nexport default PeopleCardGroupContainer;","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PeopleCardGroupContainer from '../containers/PeopleCardGroupContainer';\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst Layout = styled(Container)({\r\n    minHeight: \"100vh\"\r\n});\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst ContentContainer = styled(Container)({\r\n    marginTop: \"2em !important\",\r\n    marginBottom: \"5em !important\"\r\n});\r\n\r\nconst People = () => {\r\n    return (\r\n        <Layout>\r\n            <ContentContainer>\r\n                <GeneralErrorBoundary>\r\n                    <PeopleCardGroupContainer />\r\n                </GeneralErrorBoundary>\r\n            </ContentContainer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default People;\r\n","import React, { useState }                       from 'react';\r\nimport { Checkbox, Form, Header, Grid, Segment } from 'semantic-ui-react';\r\nimport _                                         from 'lodash';\r\nimport VotingTable                               from './VotingTable';\r\n\r\nconst cssCheckbox = { marginRight: '0.5em' }\r\n\r\nconst Person = ({personHistory: {full_name, email, phone, website, votes}}) => {\r\n  // == Get unique vote cast types from votes list.\r\n  const votingOptions = _.compact(_.uniq(votes.map(vote => vote.voteForPerson)))\r\n  // == Selected votes for checkboxes.\r\n  const [selectedVoteFilters, setSelectedVoteFilters] = useState([])\r\n  // == Votes filtered to be displayed in table.\r\n  const [filteredVotes, setFilteredVotes] = useState(votes)\r\n\r\n  const onSelectedVoteFilterChange = (event, { label }) => {\r\n    // == Set filters\r\n    let selectedFilters = []\r\n    if (selectedVoteFilters.includes(label)) {\r\n      // == Filter was unchecked\r\n      selectedFilters = _.without(selectedVoteFilters, label)\r\n      setSelectedVoteFilters(selectedFilters)\r\n    } else {\r\n      // == Filter was checked.\r\n      selectedVoteFilters.push(label)\r\n      selectedFilters = selectedVoteFilters\r\n      setSelectedVoteFilters(selectedFilters)\r\n    }\r\n\r\n    // == Set table results\r\n    if (_.isEmpty(selectedFilters)) {\r\n      // == If no filters set, display all votes\r\n      setFilteredVotes(votes)\r\n    } else {\r\n      // == Otherwise filter them by the selected filters.\r\n      setFilteredVotes(_.filter(votes, vote => selectedFilters.includes(vote.voteForPerson)))\r\n    }\r\n  }\r\n\r\n  // == Make a checkbox for each vote cast type in the voting table.\r\n  const filterVotingOptions = votingOptions.map((votingOption, index) => <Checkbox style={cssCheckbox} key={index} label={votingOption} onChange={onSelectedVoteFilterChange} />)\r\n\r\n  return <React.Fragment>\r\n    <Header as=\"h1\">{full_name}</Header>\r\n    <Grid columns={1} stackable>\r\n      <Grid.Column>\r\n        <Segment>\r\n          <Header as=\"h2\">Contact information</Header>\r\n          <strong>Email:</strong> <a href={`mailto:${email}`}>{email}</a>\r\n          <div><strong>Phone:</strong> {phone}</div>\r\n          <div><strong>Website:</strong> <a target={'_blank'} rel=\"noopener noreferrer\" href={website}>{website}</a></div>\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Segment>\r\n          <Header as=\"h2\">Voting record</Header>\r\n          <Header as=\"h3\">Filter by vote cast</Header>\r\n          <Form>{ filterVotingOptions }</Form>\r\n          <VotingTable votingData={filteredVotes} isPerson={true} />\r\n         </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DataApiContainer from './DataApiContainer';\r\nimport Person from '../components/Person';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useDataApi from '../hooks/useDataApi';\r\n\r\nconst PersonContainer = ({ match: { params: { id } } }) => {\r\n  const [apiState] = useDataApi('getVotesForPerson', [id], null);\r\n  useDocumentTitle(apiState.data ? apiState.data.full_name : 'Loading...');\r\n\r\n  return (\r\n    <DataApiContainer apiState={apiState}>\r\n      <Person personHistory={apiState.data} />\r\n    </DataApiContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(PersonContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PersonContainer from \"../containers/PersonContainer\";\r\nimport GeneralErrorBoundary from \"../components/GeneralErrorBoundary\";\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst Layout = styled(Container)({\r\n    minHeight: \"100vh\"\r\n});\r\n\r\n// TODO: duplicate from Home, move to utils\r\nconst ContentContainer = styled(Container)({\r\n    marginTop: \"2em !important\",\r\n    marginBottom: \"5em !important\"\r\n});\r\n\r\nconst Person = () => {\r\n    return (\r\n        <Layout>\r\n            <ContentContainer>\r\n                <GeneralErrorBoundary>\r\n                    <PersonContainer />\r\n                </GeneralErrorBoundary>\r\n            </ContentContainer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport withTracker from \"./utils/withTracker\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport GeneralErrorBoundary from \"./components/GeneralErrorBoundary\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport Event from \"./pages/Event\";\r\nimport AllEvents from \"./pages/AllEvents\";\r\nimport People from \"./pages/People\";\r\nimport Person from \"./pages/Person\";\r\n\r\n// Run Google Analytics\r\nReactGA.initialize(\"UA-145893191-1\");\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <GeneralErrorBoundary>\r\n      <Router basename=\"/\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={withTracker(Home)} />\r\n          <Route path=\"/search\" component={withTracker(Search)} />\r\n          <Route exact path=\"/events\" component={withTracker(AllEvents)} />\r\n          <Route path=\"/events/:id\" component={withTracker(Event)} />\r\n          <Route exact path=\"/people\" component={withTracker(People)} />\r\n          <Route exact path=\"/people/:id\" component={withTracker(Person)} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </GeneralErrorBoundary>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}